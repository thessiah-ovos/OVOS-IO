{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar validateNames = require(\"../helpers/validate-names\");\n\nvar DocumentType = require(\"../generated/DocumentType\");\n\nvar Document = require(\"../generated/Document\");\n\nvar _require = require(\"../helpers/namespaces\"),\n    HTML_NS = _require.HTML_NS,\n    SVG_NS = _require.SVG_NS;\n\nvar DOMImplementationImpl = /*#__PURE__*/function () {\n  function DOMImplementationImpl(args, privateData) {\n    _classCallCheck(this, DOMImplementationImpl);\n\n    this._ownerDocument = privateData.ownerDocument;\n    this._features = Object.create(null);\n  }\n\n  _createClass(DOMImplementationImpl, [{\n    key: \"hasFeature\",\n    value: function hasFeature() {\n      return true;\n    }\n  }, {\n    key: \"createDocumentType\",\n    value: function createDocumentType(qualifiedName, publicId, systemId) {\n      validateNames.qname(qualifiedName);\n      return DocumentType.createImpl([], {\n        ownerDocument: this._ownerDocument,\n        name: qualifiedName,\n        publicId: publicId,\n        systemId: systemId\n      });\n    }\n  }, {\n    key: \"createDocument\",\n    value: function createDocument(namespace, qualifiedName, doctype) {\n      var contentType = \"application/xml\";\n\n      if (namespace === HTML_NS) {\n        contentType = \"application/xhtml+xml\";\n      } else if (namespace === SVG_NS) {\n        contentType = \"image/svg+xml\";\n      }\n\n      var document = Document.createImpl([], {\n        options: {\n          contentType: contentType,\n          parsingMode: \"xml\",\n          encoding: \"UTF-8\"\n        }\n      });\n      var element = null;\n\n      if (qualifiedName !== \"\") {\n        element = document.createElementNS(namespace, qualifiedName);\n      }\n\n      if (doctype !== null) {\n        document.appendChild(doctype);\n      }\n\n      if (element !== null) {\n        document.appendChild(element);\n      }\n\n      document.origin = this._ownerDocument.origin;\n      return document;\n    }\n  }, {\n    key: \"createHTMLDocument\",\n    value: function createHTMLDocument(title) {\n      // Let doc be a new document that is an HTML document.\n      // Set doc's content type to \"text/html\".\n      var document = Document.createImpl([], {\n        options: {\n          parsingMode: \"html\",\n          encoding: \"UTF-8\"\n        }\n      }); // Create a doctype, with \"html\" as its name and with its node document set\n      // to doc. Append the newly created node to doc.\n\n      var doctype = DocumentType.createImpl([], {\n        ownerDocument: this,\n        name: \"html\",\n        publicId: \"\",\n        systemId: \"\"\n      });\n      document.appendChild(doctype); // Create an html element in the HTML namespace, and append it to doc.\n\n      var htmlElement = document.createElementNS(HTML_NS, \"html\");\n      document.appendChild(htmlElement); // Create a head element in the HTML namespace, and append it to the html\n      // element created in the previous step.\n\n      var headElement = document.createElement(\"head\");\n      htmlElement.appendChild(headElement); // If the title argument is not omitted:\n\n      if (title !== undefined) {\n        // Create a title element in the HTML namespace, and append it to the head\n        // element created in the previous step.\n        var titleElement = document.createElement(\"title\");\n        headElement.appendChild(titleElement); // Create a Text node, set its data to title (which could be the empty\n        // string), and append it to the title element created in the previous step.\n\n        titleElement.appendChild(document.createTextNode(title));\n      } // Create a body element in the HTML namespace, and append it to the html\n      // element created in the earlier step.\n\n\n      htmlElement.appendChild(document.createElement(\"body\")); // doc's origin is an alias to the origin of the context object's associated\n      // document, and doc's effective script origin is an alias to the effective\n      // script origin of the context object's associated document.\n\n      return document;\n    }\n  }, {\n    key: \"_removeFeature\",\n    value: function _removeFeature(feature, version) {\n      feature = feature.toLowerCase();\n\n      if (this._features[feature]) {\n        if (version) {\n          var versions = this._features[feature];\n\n          for (var j = 0; j < versions.length; j++) {\n            if (versions[j] === version) {\n              versions.splice(j, 1);\n              return;\n            }\n          }\n        } else {\n          delete this._features[feature];\n        }\n      }\n    }\n  }, {\n    key: \"_addFeature\",\n    value: function _addFeature(feature, version) {\n      feature = feature.toLowerCase();\n\n      if (version) {\n        if (!this._features[feature]) {\n          this._features[feature] = [];\n        }\n\n        if (version instanceof Array) {\n          Array.prototype.push.apply(this._features[feature], version);\n        } else {\n          this._features[feature].push(version);\n        }\n      } else {\n        this._features[feature] = [];\n      }\n    }\n  }, {\n    key: \"_hasFeature\",\n    value: function _hasFeature(feature, version) {\n      feature = feature ? feature.toLowerCase() : \"\";\n      var versions = this._features[feature] || false;\n\n      if (!version && versions.length && versions.length > 0) {\n        return true;\n      } else if (typeof versions === \"string\") {\n        return versions === version;\n      } else if (versions.indexOf && versions.length > 0) {\n        for (var i = 0; i < versions.length; i++) {\n          var found = versions[i] instanceof RegExp ? versions[i].test(version) : versions[i] === version;\n\n          if (found) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return false;\n    }\n  }]);\n\n  return DOMImplementationImpl;\n}();\n\nmodule.exports = {\n  implementation: DOMImplementationImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/DOMImplementation-impl.js"],"names":["validateNames","require","DocumentType","Document","HTML_NS","SVG_NS","DOMImplementationImpl","args","privateData","_ownerDocument","ownerDocument","_features","Object","create","qualifiedName","publicId","systemId","qname","createImpl","name","namespace","doctype","contentType","document","options","parsingMode","encoding","element","createElementNS","appendChild","origin","title","htmlElement","headElement","createElement","undefined","titleElement","createTextNode","feature","version","toLowerCase","versions","j","length","splice","Array","prototype","push","apply","indexOf","i","found","RegExp","test","module","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst validateNames = require(\"../helpers/validate-names\");\nconst DocumentType = require(\"../generated/DocumentType\");\nconst Document = require(\"../generated/Document\");\nconst { HTML_NS, SVG_NS } = require(\"../helpers/namespaces\");\n\nclass DOMImplementationImpl {\n  constructor(args, privateData) {\n    this._ownerDocument = privateData.ownerDocument;\n    this._features = Object.create(null);\n  }\n\n  hasFeature() {\n    return true;\n  }\n\n  createDocumentType(qualifiedName, publicId, systemId) {\n    validateNames.qname(qualifiedName);\n\n    return DocumentType.createImpl([], {\n      ownerDocument: this._ownerDocument,\n      name: qualifiedName,\n      publicId,\n      systemId\n    });\n  }\n\n  createDocument(namespace, qualifiedName, doctype) {\n    let contentType = \"application/xml\";\n\n    if (namespace === HTML_NS) {\n      contentType = \"application/xhtml+xml\";\n    } else if (namespace === SVG_NS) {\n      contentType = \"image/svg+xml\";\n    }\n\n    const document = Document.createImpl([], {\n      options: { contentType, parsingMode: \"xml\", encoding: \"UTF-8\" }\n    });\n\n    let element = null;\n    if (qualifiedName !== \"\") {\n      element = document.createElementNS(namespace, qualifiedName);\n    }\n\n    if (doctype !== null) {\n      document.appendChild(doctype);\n    }\n\n    if (element !== null) {\n      document.appendChild(element);\n    }\n\n    document.origin = this._ownerDocument.origin;\n\n    return document;\n  }\n\n  createHTMLDocument(title) {\n    // Let doc be a new document that is an HTML document.\n    // Set doc's content type to \"text/html\".\n    const document = Document.createImpl([], {\n      options: { parsingMode: \"html\", encoding: \"UTF-8\" }\n    });\n\n    // Create a doctype, with \"html\" as its name and with its node document set\n    // to doc. Append the newly created node to doc.\n    const doctype = DocumentType.createImpl([], {\n      ownerDocument: this,\n      name: \"html\",\n      publicId: \"\",\n      systemId: \"\"\n    });\n\n    document.appendChild(doctype);\n\n    // Create an html element in the HTML namespace, and append it to doc.\n    const htmlElement = document.createElementNS(HTML_NS, \"html\");\n    document.appendChild(htmlElement);\n\n    // Create a head element in the HTML namespace, and append it to the html\n    // element created in the previous step.\n    const headElement = document.createElement(\"head\");\n    htmlElement.appendChild(headElement);\n\n    // If the title argument is not omitted:\n    if (title !== undefined) {\n      // Create a title element in the HTML namespace, and append it to the head\n      // element created in the previous step.\n      const titleElement = document.createElement(\"title\");\n      headElement.appendChild(titleElement);\n\n      // Create a Text node, set its data to title (which could be the empty\n      // string), and append it to the title element created in the previous step.\n      titleElement.appendChild(document.createTextNode(title));\n    }\n\n    // Create a body element in the HTML namespace, and append it to the html\n    // element created in the earlier step.\n    htmlElement.appendChild(document.createElement(\"body\"));\n\n    // doc's origin is an alias to the origin of the context object's associated\n    // document, and doc's effective script origin is an alias to the effective\n    // script origin of the context object's associated document.\n\n    return document;\n  }\n\n  _removeFeature(feature, version) {\n    feature = feature.toLowerCase();\n    if (this._features[feature]) {\n      if (version) {\n        const versions = this._features[feature];\n        for (let j = 0; j < versions.length; j++) {\n          if (versions[j] === version) {\n            versions.splice(j, 1);\n            return;\n          }\n        }\n      } else {\n        delete this._features[feature];\n      }\n    }\n  }\n\n  _addFeature(feature, version) {\n    feature = feature.toLowerCase();\n\n    if (version) {\n      if (!this._features[feature]) {\n        this._features[feature] = [];\n      }\n\n      if (version instanceof Array) {\n        Array.prototype.push.apply(this._features[feature], version);\n      } else {\n        this._features[feature].push(version);\n      }\n    } else {\n      this._features[feature] = [];\n    }\n  }\n\n  _hasFeature(feature, version) {\n    feature = feature ? feature.toLowerCase() : \"\";\n    const versions = this._features[feature] || false;\n\n    if (!version && versions.length && versions.length > 0) {\n      return true;\n    } else if (typeof versions === \"string\") {\n      return versions === version;\n    } else if (versions.indexOf && versions.length > 0) {\n      for (let i = 0; i < versions.length; i++) {\n        const found = versions[i] instanceof RegExp ? versions[i].test(version) : versions[i] === version;\n        if (found) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    return false;\n  }\n}\n\nmodule.exports = {\n  implementation: DOMImplementationImpl\n};\n"]},"metadata":{},"sourceType":"script"}
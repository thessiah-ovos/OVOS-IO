{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar impl = utils.implSymbol;\n\nvar CharacterData = require(\"./CharacterData.js\");\n\nfunction Text() {\n  if ((this instanceof Text ? this.constructor : void 0) === undefined) {\n    throw new TypeError(\"Failed to construct 'Text'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, {\n        context: \"Failed to construct 'Text': parameter 1\"\n      });\n    } else {\n      curArg = \"\";\n    }\n\n    args.push(curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(Text.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Text, CharacterData.interface);\nObject.defineProperty(Text, \"prototype\", {\n  value: Text.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nText.prototype.splitText = function splitText(offset) {\n  var _this$impl;\n\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'splitText' on 'Text': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, {\n      context: \"Failed to execute 'splitText' on 'Text': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl((_this$impl = this[impl]).splitText.apply(_this$impl, args));\n};\n\nObject.defineProperty(Text.prototype, \"wholeText\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"wholeText\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Text.prototype, Symbol.toStringTag, {\n  value: \"Text\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iterator = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var isMixedInto = _step.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n\n      var _iterator2 = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'Text'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: Text,\n  expose: {\n    Window: {\n      Text: Text\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../nodes/Text-impl.js\");","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/Text.js"],"names":["conversions","require","utils","impl","implSymbol","CharacterData","Text","undefined","TypeError","args","curArg","arguments","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","splitText","offset","module","exports","is","length","tryWrapperForImpl","get","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","convert","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst impl = utils.implSymbol;\nconst CharacterData = require(\"./CharacterData.js\");\n\nfunction Text() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'Text'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'Text': parameter 1\" });\n    } else {\n      curArg = \"\";\n    }\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(Text.prototype, CharacterData.interface.prototype);\nObject.setPrototypeOf(Text, CharacterData.interface);\n\nObject.defineProperty(Text, \"prototype\", {\n  value: Text.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nText.prototype.splitText = function splitText(offset) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'splitText' on 'Text': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"unsigned long\"](curArg, { context: \"Failed to execute 'splitText' on 'Text': parameter 1\" });\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].splitText(...args));\n};\n\nObject.defineProperty(Text.prototype, \"wholeText\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"wholeText\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Text.prototype, Symbol.toStringTag, {\n  value: \"Text\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Text'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Text.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    CharacterData._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Text,\n  expose: {\n    Window: { Text }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../nodes/Text-impl.js\");\n"]},"metadata":{},"sourceType":"script"}
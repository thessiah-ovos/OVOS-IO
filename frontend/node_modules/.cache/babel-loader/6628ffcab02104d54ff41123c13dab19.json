{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar attributes = require(\"../attributes.js\");\n\nexports.implementation = /*#__PURE__*/function () {\n  function AttrImpl(_, privateData) {\n    _classCallCheck(this, AttrImpl);\n\n    this._namespace = privateData.namespace !== undefined ? privateData.namespace : null;\n    this._namespacePrefix = privateData.namespacePrefix !== undefined ? privateData.namespacePrefix : null;\n    this._localName = privateData.localName;\n    this._value = privateData.value !== undefined ? privateData.value : \"\";\n    this._element = privateData.element !== undefined ? privateData.element : null;\n    this.specified = true;\n  }\n\n  _createClass(AttrImpl, [{\n    key: \"namespaceURI\",\n    get: function get() {\n      return this._namespace;\n    }\n  }, {\n    key: \"prefix\",\n    get: function get() {\n      return this._namespacePrefix;\n    }\n  }, {\n    key: \"localName\",\n    get: function get() {\n      return this._localName;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this._qualifiedName;\n    }\n  }, {\n    key: \"nodeName\",\n    get: function get() {\n      return this._qualifiedName;\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this._value;\n    },\n    set: function set(v) {\n      if (this._element === null) {\n        this._value = v;\n      } else {\n        attributes.changeAttribute(this._element, this, v);\n      }\n    } // Delegate to value\n\n  }, {\n    key: \"nodeValue\",\n    get: function get() {\n      return this.value;\n    },\n    set: function set(v) {\n      this.value = v;\n    } // Delegate to value\n\n  }, {\n    key: \"textContent\",\n    get: function get() {\n      return this.value;\n    },\n    set: function set(v) {\n      this.value = v;\n    }\n  }, {\n    key: \"ownerElement\",\n    get: function get() {\n      return this._element;\n    }\n  }, {\n    key: \"_qualifiedName\",\n    get: function get() {\n      // https://dom.spec.whatwg.org/#concept-attribute-qualified-name\n      if (this._namespacePrefix === null) {\n        return this._localName;\n      }\n\n      return this._namespacePrefix + \":\" + this._localName;\n    }\n  }]);\n\n  return AttrImpl;\n}();","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/attributes/Attr-impl.js"],"names":["attributes","require","exports","implementation","_","privateData","_namespace","namespace","undefined","_namespacePrefix","namespacePrefix","_localName","localName","_value","value","_element","element","specified","_qualifiedName","v","changeAttribute"],"mappings":"AAAA;;;;;;AAEA,IAAMA,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AAEAC,OAAO,CAACC,cAAR;AACE,oBAAYC,CAAZ,EAAeC,WAAf,EAA4B;AAAA;;AAC1B,SAAKC,UAAL,GAAkBD,WAAW,CAACE,SAAZ,KAA0BC,SAA1B,GAAsCH,WAAW,CAACE,SAAlD,GAA8D,IAAhF;AACA,SAAKE,gBAAL,GAAwBJ,WAAW,CAACK,eAAZ,KAAgCF,SAAhC,GAA4CH,WAAW,CAACK,eAAxD,GAA0E,IAAlG;AACA,SAAKC,UAAL,GAAkBN,WAAW,CAACO,SAA9B;AACA,SAAKC,MAAL,GAAcR,WAAW,CAACS,KAAZ,KAAsBN,SAAtB,GAAkCH,WAAW,CAACS,KAA9C,GAAsD,EAApE;AACA,SAAKC,QAAL,GAAgBV,WAAW,CAACW,OAAZ,KAAwBR,SAAxB,GAAoCH,WAAW,CAACW,OAAhD,GAA0D,IAA1E;AAEA,SAAKC,SAAL,GAAiB,IAAjB;AACD;;AATH;AAAA;AAAA,wBAWqB;AACjB,aAAO,KAAKX,UAAZ;AACD;AAbH;AAAA;AAAA,wBAee;AACX,aAAO,KAAKG,gBAAZ;AACD;AAjBH;AAAA;AAAA,wBAmBkB;AACd,aAAO,KAAKE,UAAZ;AACD;AArBH;AAAA;AAAA,wBAuBa;AACT,aAAO,KAAKO,cAAZ;AACD;AAzBH;AAAA;AAAA,wBA2BiB;AACb,aAAO,KAAKA,cAAZ;AACD;AA7BH;AAAA;AAAA,wBA+Bc;AACV,aAAO,KAAKL,MAAZ;AACD,KAjCH;AAAA,sBAkCYM,CAlCZ,EAkCe;AACX,UAAI,KAAKJ,QAAL,KAAkB,IAAtB,EAA4B;AAC1B,aAAKF,MAAL,GAAcM,CAAd;AACD,OAFD,MAEO;AACLnB,QAAAA,UAAU,CAACoB,eAAX,CAA2B,KAAKL,QAAhC,EAA0C,IAA1C,EAAgDI,CAAhD;AACD;AACF,KAxCH,CA0CE;;AA1CF;AAAA;AAAA,wBA2CkB;AACd,aAAO,KAAKL,KAAZ;AACD,KA7CH;AAAA,sBA8CgBK,CA9ChB,EA8CmB;AACf,WAAKL,KAAL,GAAaK,CAAb;AACD,KAhDH,CAkDE;;AAlDF;AAAA;AAAA,wBAmDoB;AAChB,aAAO,KAAKL,KAAZ;AACD,KArDH;AAAA,sBAsDkBK,CAtDlB,EAsDqB;AACjB,WAAKL,KAAL,GAAaK,CAAb;AACD;AAxDH;AAAA;AAAA,wBA0DqB;AACjB,aAAO,KAAKJ,QAAZ;AACD;AA5DH;AAAA;AAAA,wBA8DuB;AACnB;AACA,UAAI,KAAKN,gBAAL,KAA0B,IAA9B,EAAoC;AAClC,eAAO,KAAKE,UAAZ;AACD;;AAED,aAAO,KAAKF,gBAAL,GAAwB,GAAxB,GAA8B,KAAKE,UAA1C;AACD;AArEH;;AAAA;AAAA","sourcesContent":["\"use strict\";\n\nconst attributes = require(\"../attributes.js\");\n\nexports.implementation = class AttrImpl {\n  constructor(_, privateData) {\n    this._namespace = privateData.namespace !== undefined ? privateData.namespace : null;\n    this._namespacePrefix = privateData.namespacePrefix !== undefined ? privateData.namespacePrefix : null;\n    this._localName = privateData.localName;\n    this._value = privateData.value !== undefined ? privateData.value : \"\";\n    this._element = privateData.element !== undefined ? privateData.element : null;\n\n    this.specified = true;\n  }\n\n  get namespaceURI() {\n    return this._namespace;\n  }\n\n  get prefix() {\n    return this._namespacePrefix;\n  }\n\n  get localName() {\n    return this._localName;\n  }\n\n  get name() {\n    return this._qualifiedName;\n  }\n\n  get nodeName() {\n    return this._qualifiedName;\n  }\n\n  get value() {\n    return this._value;\n  }\n  set value(v) {\n    if (this._element === null) {\n      this._value = v;\n    } else {\n      attributes.changeAttribute(this._element, this, v);\n    }\n  }\n\n  // Delegate to value\n  get nodeValue() {\n    return this.value;\n  }\n  set nodeValue(v) {\n    this.value = v;\n  }\n\n  // Delegate to value\n  get textContent() {\n    return this.value;\n  }\n  set textContent(v) {\n    this.value = v;\n  }\n\n  get ownerElement() {\n    return this._element;\n  }\n\n  get _qualifiedName() {\n    // https://dom.spec.whatwg.org/#concept-attribute-qualified-name\n    if (this._namespacePrefix === null) {\n      return this._localName;\n    }\n\n    return this._namespacePrefix + \":\" + this._localName;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
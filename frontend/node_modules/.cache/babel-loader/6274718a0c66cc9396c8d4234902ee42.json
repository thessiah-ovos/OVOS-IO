{"ast":null,"code":"\"use strict\";\n\nexports.removeLeadingAndTrailingHTTPWhitespace = function (string) {\n  return string.replace(/^[ \\t\\n\\r]+/, \"\").replace(/[ \\t\\n\\r]+$/, \"\");\n};\n\nexports.removeTrailingHTTPWhitespace = function (string) {\n  return string.replace(/[ \\t\\n\\r]+$/, \"\");\n};\n\nexports.isHTTPWhitespaceChar = function (char) {\n  return char === \" \" || char === \"\\t\" || char === \"\\n\" || char === \"\\r\";\n};\n\nexports.solelyContainsHTTPTokenCodePoints = function (string) {\n  return /^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/.test(string);\n};\n\nexports.soleyContainsHTTPQuotedStringTokenCodePoints = function (string) {\n  return /^[\\t\\u0020-\\u007E\\u0080-\\u00FF]*$/.test(string);\n};\n\nexports.asciiLowercase = function (string) {\n  return string.replace(/[A-Z]/g, function (l) {\n    return l.toLowerCase();\n  });\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/whatwg-mimetype/lib/utils.js"],"names":["exports","removeLeadingAndTrailingHTTPWhitespace","string","replace","removeTrailingHTTPWhitespace","isHTTPWhitespaceChar","char","solelyContainsHTTPTokenCodePoints","test","soleyContainsHTTPQuotedStringTokenCodePoints","asciiLowercase","l","toLowerCase"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,sCAAR,GAAiD,UAAAC,MAAM,EAAI;AACzD,SAAOA,MAAM,CAACC,OAAP,CAAe,aAAf,EAA8B,EAA9B,EAAkCA,OAAlC,CAA0C,aAA1C,EAAyD,EAAzD,CAAP;AACD,CAFD;;AAIAH,OAAO,CAACI,4BAAR,GAAuC,UAAAF,MAAM,EAAI;AAC/C,SAAOA,MAAM,CAACC,OAAP,CAAe,aAAf,EAA8B,EAA9B,CAAP;AACD,CAFD;;AAIAH,OAAO,CAACK,oBAAR,GAA+B,UAAAC,IAAI,EAAI;AACrC,SAAOA,IAAI,KAAK,GAAT,IAAgBA,IAAI,KAAK,IAAzB,IAAiCA,IAAI,KAAK,IAA1C,IAAkDA,IAAI,KAAK,IAAlE;AACD,CAFD;;AAIAN,OAAO,CAACO,iCAAR,GAA4C,UAAAL,MAAM,EAAI;AACpD,SAAO,gCAAgCM,IAAhC,CAAqCN,MAArC,CAAP;AACD,CAFD;;AAIAF,OAAO,CAACS,4CAAR,GAAuD,UAAAP,MAAM,EAAI;AAC/D,SAAO,oCAAoCM,IAApC,CAAyCN,MAAzC,CAAP;AACD,CAFD;;AAIAF,OAAO,CAACU,cAAR,GAAyB,UAAAR,MAAM,EAAI;AACjC,SAAOA,MAAM,CAACC,OAAP,CAAe,QAAf,EAAyB,UAAAQ,CAAC;AAAA,WAAIA,CAAC,CAACC,WAAF,EAAJ;AAAA,GAA1B,CAAP;AACD,CAFD","sourcesContent":["\"use strict\";\n\nexports.removeLeadingAndTrailingHTTPWhitespace = string => {\n  return string.replace(/^[ \\t\\n\\r]+/, \"\").replace(/[ \\t\\n\\r]+$/, \"\");\n};\n\nexports.removeTrailingHTTPWhitespace = string => {\n  return string.replace(/[ \\t\\n\\r]+$/, \"\");\n};\n\nexports.isHTTPWhitespaceChar = char => {\n  return char === \" \" || char === \"\\t\" || char === \"\\n\" || char === \"\\r\";\n};\n\nexports.solelyContainsHTTPTokenCodePoints = string => {\n  return /^[-!#$%&'*+.^_`|~A-Za-z0-9]*$/.test(string);\n};\n\nexports.soleyContainsHTTPQuotedStringTokenCodePoints = string => {\n  return /^[\\t\\u0020-\\u007E\\u0080-\\u00FF]*$/.test(string);\n};\n\nexports.asciiLowercase = string => {\n  return string.replace(/[A-Z]/g, l => l.toLowerCase());\n};\n"]},"metadata":{},"sourceType":"script"}
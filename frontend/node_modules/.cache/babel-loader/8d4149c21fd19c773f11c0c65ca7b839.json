{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar EventModifierMixinImpl = require(\"./EventModifierMixin-impl\").implementation;\n\nvar UIEventImpl = require(\"./UIEvent-impl\").implementation;\n\nvar KeyboardEventInit = require(\"../generated/KeyboardEventInit\");\n\nvar KeyboardEventImpl = /*#__PURE__*/function (_UIEventImpl) {\n  _inherits(KeyboardEventImpl, _UIEventImpl);\n\n  var _super = _createSuper(KeyboardEventImpl);\n\n  function KeyboardEventImpl() {\n    _classCallCheck(this, KeyboardEventImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(KeyboardEventImpl, [{\n    key: \"initKeyboardEvent\",\n    value: function initKeyboardEvent(type, bubbles, cancelable, view, key, location, ctrlKey, altKey, shiftKey, metaKey) {\n      if (this._dispatchFlag) {\n        return;\n      }\n\n      this.initUIEvent(type, bubbles, cancelable, view, 0);\n      this.key = key;\n      this.location = location;\n      this.ctrlKey = ctrlKey;\n      this.altKey = altKey;\n      this.shiftKey = shiftKey;\n      this.metaKey = metaKey;\n    }\n  }]);\n\n  return KeyboardEventImpl;\n}(UIEventImpl);\n\nmixin(KeyboardEventImpl.prototype, EventModifierMixinImpl.prototype);\nKeyboardEventImpl.defaultInit = KeyboardEventInit.convert(undefined);\nmodule.exports = {\n  implementation: KeyboardEventImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/events/KeyboardEvent-impl.js"],"names":["require","mixin","EventModifierMixinImpl","implementation","UIEventImpl","KeyboardEventInit","KeyboardEventImpl","type","bubbles","cancelable","view","key","location","ctrlKey","altKey","shiftKey","metaKey","_dispatchFlag","initUIEvent","prototype","defaultInit","convert","undefined","module","exports"],"mappings":"AAAA;;;;;;;;;;eAEkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;AACR,IAAMC,sBAAsB,GAAGF,OAAO,CAAC,2BAAD,CAAP,CAAqCG,cAApE;;AACA,IAAMC,WAAW,GAAGJ,OAAO,CAAC,gBAAD,CAAP,CAA0BG,cAA9C;;AAEA,IAAME,iBAAiB,GAAGL,OAAO,CAAC,gCAAD,CAAjC;;IAEMM,iB;;;;;;;;;;;;;sCACcC,I,EAAMC,O,EAASC,U,EAAYC,I,EAAMC,G,EAAKC,Q,EAAUC,O,EAASC,M,EAAQC,Q,EAAUC,O,EAAS;AACpG,UAAI,KAAKC,aAAT,EAAwB;AACtB;AACD;;AAED,WAAKC,WAAL,CAAiBX,IAAjB,EAAuBC,OAAvB,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkD,CAAlD;AACA,WAAKC,GAAL,GAAWA,GAAX;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA,WAAKC,OAAL,GAAeA,OAAf;AACA,WAAKC,MAAL,GAAcA,MAAd;AACA,WAAKC,QAAL,GAAgBA,QAAhB;AACA,WAAKC,OAAL,GAAeA,OAAf;AACD;;;;EAb6BZ,W;;AAehCH,KAAK,CAACK,iBAAiB,CAACa,SAAnB,EAA8BjB,sBAAsB,CAACiB,SAArD,CAAL;AACAb,iBAAiB,CAACc,WAAlB,GAAgCf,iBAAiB,CAACgB,OAAlB,CAA0BC,SAA1B,CAAhC;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACfrB,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst { mixin } = require(\"../../utils\");\nconst EventModifierMixinImpl = require(\"./EventModifierMixin-impl\").implementation;\nconst UIEventImpl = require(\"./UIEvent-impl\").implementation;\n\nconst KeyboardEventInit = require(\"../generated/KeyboardEventInit\");\n\nclass KeyboardEventImpl extends UIEventImpl {\n  initKeyboardEvent(type, bubbles, cancelable, view, key, location, ctrlKey, altKey, shiftKey, metaKey) {\n    if (this._dispatchFlag) {\n      return;\n    }\n\n    this.initUIEvent(type, bubbles, cancelable, view, 0);\n    this.key = key;\n    this.location = location;\n    this.ctrlKey = ctrlKey;\n    this.altKey = altKey;\n    this.shiftKey = shiftKey;\n    this.metaKey = metaKey;\n  }\n}\nmixin(KeyboardEventImpl.prototype, EventModifierMixinImpl.prototype);\nKeyboardEventImpl.defaultInit = KeyboardEventInit.convert(undefined);\n\nmodule.exports = {\n  implementation: KeyboardEventImpl\n};\n"]},"metadata":{},"sourceType":"script"}
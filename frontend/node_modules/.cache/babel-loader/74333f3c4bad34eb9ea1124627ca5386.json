{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertAddEventListenerOptions = require(\"./AddEventListenerOptions.js\").convert;\n\nvar convertEventListenerOptions = require(\"./EventListenerOptions.js\").convert;\n\nvar convertEvent = require(\"./Event.js\").convert;\n\nvar impl = utils.implSymbol;\n\nfunction EventTarget() {\n  if ((this instanceof EventTarget ? this.constructor : void 0) === undefined) {\n    throw new TypeError(\"Failed to construct 'EventTarget'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  iface.setup(this);\n}\n\nObject.defineProperty(EventTarget, \"prototype\", {\n  value: EventTarget.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nEventTarget.prototype.addEventListener = function addEventListener(type, callback) {\n  var _this$impl;\n\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'addEventListener' on 'EventTarget': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    var _curArg = arguments[1];\n\n    if (_curArg === null || _curArg === undefined) {\n      _curArg = null;\n    } else {\n      _curArg = utils.tryImplForWrapper(_curArg);\n    }\n\n    args.push(_curArg);\n  }\n  {\n    var _curArg2 = arguments[2];\n\n    if (_curArg2 !== undefined) {\n      if (_curArg2 === null || _curArg2 === undefined) {\n        _curArg2 = convertAddEventListenerOptions(_curArg2, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else if (utils.isObject(_curArg2)) {\n        _curArg2 = convertAddEventListenerOptions(_curArg2, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\" + \" dictionary\"\n        });\n      } else if (typeof _curArg2 === \"boolean\") {\n        _curArg2 = conversions[\"boolean\"](_curArg2, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else {\n        _curArg2 = conversions[\"boolean\"](_curArg2, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      }\n    }\n\n    args.push(_curArg2);\n  }\n  return (_this$impl = this[impl]).addEventListener.apply(_this$impl, args);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener(type, callback) {\n  var _this$impl2;\n\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\"Failed to execute 'removeEventListener' on 'EventTarget': 2 arguments required, but only \" + arguments.length + \" present.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    var _curArg3 = arguments[1];\n\n    if (_curArg3 === null || _curArg3 === undefined) {\n      _curArg3 = null;\n    } else {\n      _curArg3 = utils.tryImplForWrapper(_curArg3);\n    }\n\n    args.push(_curArg3);\n  }\n  {\n    var _curArg4 = arguments[2];\n\n    if (_curArg4 !== undefined) {\n      if (_curArg4 === null || _curArg4 === undefined) {\n        _curArg4 = convertEventListenerOptions(_curArg4, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else if (utils.isObject(_curArg4)) {\n        _curArg4 = convertEventListenerOptions(_curArg4, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\" + \" dictionary\"\n        });\n      } else if (typeof _curArg4 === \"boolean\") {\n        _curArg4 = conversions[\"boolean\"](_curArg4, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else {\n        _curArg4 = conversions[\"boolean\"](_curArg4, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      }\n    }\n\n    args.push(_curArg4);\n  }\n  return (_this$impl2 = this[impl]).removeEventListener.apply(_this$impl2, args);\n};\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  var _this$impl3;\n\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to execute 'dispatchEvent' on 'EventTarget': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n    curArg = convertEvent(curArg, {\n      context: \"Failed to execute 'dispatchEvent' on 'EventTarget': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  return (_this$impl3 = this[impl]).dispatchEvent.apply(_this$impl3, args);\n};\n\nObject.defineProperty(EventTarget.prototype, Symbol.toStringTag, {\n  value: \"EventTarget\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iterator = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var isMixedInto = _step.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n\n      var _iterator2 = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'EventTarget'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(EventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(EventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {},\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: EventTarget,\n  expose: {\n    Window: {\n      EventTarget: EventTarget\n    },\n    Worker: {\n      EventTarget: EventTarget\n    },\n    AudioWorklet: {\n      EventTarget: EventTarget\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../events/EventTarget-impl.js\");","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js"],"names":["conversions","require","utils","convertAddEventListenerOptions","convert","convertEventListenerOptions","convertEvent","impl","implSymbol","EventTarget","undefined","TypeError","iface","setup","Object","defineProperty","value","prototype","writable","enumerable","configurable","addEventListener","type","callback","module","exports","is","arguments","length","args","curArg","context","push","tryImplForWrapper","isObject","removeEventListener","dispatchEvent","event","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window","Worker","AudioWorklet"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertAddEventListenerOptions = require(\"./AddEventListenerOptions.js\").convert;\nconst convertEventListenerOptions = require(\"./EventListenerOptions.js\").convert;\nconst convertEvent = require(\"./Event.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction EventTarget() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'EventTarget'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n\n  iface.setup(this);\n}\n\nObject.defineProperty(EventTarget, \"prototype\", {\n  value: EventTarget.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nEventTarget.prototype.addEventListener = function addEventListener(type, callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'addEventListener' on 'EventTarget': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = utils.tryImplForWrapper(curArg);\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      if (curArg === null || curArg === undefined) {\n        curArg = convertAddEventListenerOptions(curArg, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else if (utils.isObject(curArg)) {\n        curArg = convertAddEventListenerOptions(curArg, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\" + \" dictionary\"\n        });\n      } else if (typeof curArg === \"boolean\") {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'addEventListener' on 'EventTarget': parameter 3\"\n        });\n      }\n    }\n    args.push(curArg);\n  }\n  return this[impl].addEventListener(...args);\n};\n\nEventTarget.prototype.removeEventListener = function removeEventListener(type, callback) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 2) {\n    throw new TypeError(\n      \"Failed to execute 'removeEventListener' on 'EventTarget': 2 arguments required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    if (curArg === null || curArg === undefined) {\n      curArg = null;\n    } else {\n      curArg = utils.tryImplForWrapper(curArg);\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      if (curArg === null || curArg === undefined) {\n        curArg = convertEventListenerOptions(curArg, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else if (utils.isObject(curArg)) {\n        curArg = convertEventListenerOptions(curArg, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\" + \" dictionary\"\n        });\n      } else if (typeof curArg === \"boolean\") {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      } else {\n        curArg = conversions[\"boolean\"](curArg, {\n          context: \"Failed to execute 'removeEventListener' on 'EventTarget': parameter 3\"\n        });\n      }\n    }\n    args.push(curArg);\n  }\n  return this[impl].removeEventListener(...args);\n};\n\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to execute 'dispatchEvent' on 'EventTarget': 1 argument required, but only \" +\n        arguments.length +\n        \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = convertEvent(curArg, { context: \"Failed to execute 'dispatchEvent' on 'EventTarget': parameter 1\" });\n    args.push(curArg);\n  }\n  return this[impl].dispatchEvent(...args);\n};\n\nObject.defineProperty(EventTarget.prototype, Symbol.toStringTag, {\n  value: \"EventTarget\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'EventTarget'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(EventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(EventTarget.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: EventTarget,\n  expose: {\n    Window: { EventTarget },\n    Worker: { EventTarget },\n    AudioWorklet: { EventTarget }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/EventTarget-impl.js\");\n"]},"metadata":{},"sourceType":"script"}
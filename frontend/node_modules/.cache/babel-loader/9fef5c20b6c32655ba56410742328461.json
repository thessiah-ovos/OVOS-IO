{"ast":null,"code":"/* eslint-env browser */\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMException = require(\"domexception\");\n\nvar _require = require(\"whatwg-url\"),\n    parseURL = _require.parseURL,\n    serializeURL = _require.serializeURL,\n    serializeURLOrigin = _require.serializeURLOrigin;\n\nvar _require2 = require(\"../helpers/create-event-accessor\"),\n    setupForSimpleEventAccessors = _require2.setupForSimpleEventAccessors;\n\nvar EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar Blob = require(\"../generated/Blob\");\n\nvar CloseEvent = require(\"../generated/CloseEvent\");\n\nvar Event = require(\"../generated/Event\");\n\nvar MessageEvent = require(\"../generated/MessageEvent\");\n\nvar productions = {\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\n}; // https://tools.ietf.org/html/rfc6455#section-4.3\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\n// single header conforms to the rules.\n\nfunction verifySecWebSocketProtocol(str) {\n  return productions.token.test(str);\n}\n\nvar openSockets = new WeakMap();\n\nvar WebSocketImpl = /*#__PURE__*/function (_EventTargetImpl) {\n  _inherits(WebSocketImpl, _EventTargetImpl);\n\n  var _super = _createSuper(WebSocketImpl);\n\n  function WebSocketImpl(constructorArgs, privateData) {\n    var _this;\n\n    _classCallCheck(this, WebSocketImpl);\n\n    _this = _super.call(this, [], privateData);\n    var window = privateData.window;\n    _this._ownerDocument = idlUtils.implForWrapper(window._document);\n    var url = constructorArgs[0];\n    var protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\n    var urlRecord = parseURL(url);\n\n    if (urlRecord === null) {\n      throw new DOMException(\"The URL '\".concat(url, \"' is invalid.\"), \"SyntaxError\");\n    }\n\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\n      throw new DOMException(\"The URL's scheme must be either 'ws' or 'wss'. '\".concat(urlRecord.scheme, \"' is not allowed.\"), \"SyntaxError\");\n    }\n\n    if (urlRecord.fragment !== null) {\n      throw new DOMException(\"The URL contains a fragment identifier ('\".concat(urlRecord.fragment, \"'). Fragment identifiers \") + \"are not allowed in WebSocket URLs.\", \"SyntaxError\");\n    }\n\n    if (typeof protocols === \"string\") {\n      protocols = [protocols];\n    }\n\n    var protocolSet = new Set();\n\n    var _iterator = _createForOfIteratorHelper(protocols),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var protocol = _step.value;\n\n        if (!verifySecWebSocketProtocol(protocol)) {\n          throw new DOMException(\"The subprotocol '\".concat(protocol, \"' is invalid.\"), \"SyntaxError\");\n        }\n\n        var lowered = protocol.toLowerCase();\n\n        if (protocolSet.has(lowered)) {\n          throw new DOMException(\"The subprotocol '\".concat(protocol, \"' is duplicated.\"), \"SyntaxError\");\n        }\n\n        protocolSet.add(lowered);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    _this._urlRecord = urlRecord;\n    _this.url = serializeURL(urlRecord);\n    _this._ws = new WebSocket(_this.url, protocols);\n\n    _this._ws.onopen = function () {\n      _this._dispatch(Event.createImpl([\"open\"], {\n        isTrusted: true\n      }));\n    };\n\n    _this._ws.onerror = function () {\n      _this._dispatch(Event.createImpl([\"error\"], {\n        isTrusted: true\n      }));\n    };\n\n    _this._ws.onclose = function (event) {\n      _this._dispatch(CloseEvent.createImpl([\"close\", {\n        wasClean: event.wasClean,\n        code: event.code,\n        reason: event.reason\n      }], {\n        isTrusted: true\n      }));\n    };\n\n    _this._ws.onmessage = function (event) {\n      _this._dispatch(MessageEvent.createImpl([\"message\", {\n        data: event.data,\n        origin: serializeURLOrigin(_this._urlRecord)\n      }], {\n        isTrusted: true\n      }));\n    };\n\n    var openSocketsForWindow = openSockets.get(window._globalProxy);\n\n    if (openSocketsForWindow === undefined) {\n      openSocketsForWindow = new Set();\n      openSockets.set(window._globalProxy, openSocketsForWindow);\n    }\n\n    openSocketsForWindow.add(_assertThisInitialized(_this));\n    return _this;\n  } // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\n\n\n  _createClass(WebSocketImpl, [{\n    key: \"_makeDisappear\",\n    value: function _makeDisappear() {\n      this._eventListeners = Object.create(null);\n\n      this._ws.close(1001);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n      var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\n        throw new DOMException(\"The code must be either 1000, or between 3000 and 4999. \".concat(code, \" is neither.\"), \"InvalidAccessError\");\n      }\n\n      if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\n        throw new DOMException(\"The message must not be greater than 123 bytes.\", \"SyntaxError\");\n      }\n\n      return this._ws.close(code, reason);\n    }\n  }, {\n    key: \"send\",\n    value: function send(data) {\n      if (Blob.isImpl(data)) {\n        data = data._buffer;\n      }\n\n      this._ws.send(data);\n    }\n  }, {\n    key: \"readyState\",\n    get: function get() {\n      return this._ws.readyState;\n    }\n  }, {\n    key: \"bufferedAmount\",\n    get: function get() {\n      return this._ws.bufferedAmount;\n    }\n  }, {\n    key: \"extensions\",\n    get: function get() {\n      return this._ws.extensions;\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this._ws.protocol;\n    }\n  }, {\n    key: \"binaryType\",\n    get: function get() {\n      return this._ws.binaryType;\n    },\n    set: function set(val) {\n      this._ws.binaryType = val;\n    }\n  }], [{\n    key: \"cleanUpWindow\",\n    value: function cleanUpWindow(window) {\n      var openSocketsForWindow = openSockets.get(window._globalProxy);\n\n      if (openSocketsForWindow !== undefined) {\n        var _iterator2 = _createForOfIteratorHelper(openSocketsForWindow),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var ws = _step2.value;\n\n            ws._makeDisappear();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n    }\n  }]);\n\n  return WebSocketImpl;\n}(EventTargetImpl);\n\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\nexports.implementation = WebSocketImpl;","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/websockets/WebSocket-impl-browser.js"],"names":["DOMException","require","parseURL","serializeURL","serializeURLOrigin","setupForSimpleEventAccessors","EventTargetImpl","implementation","idlUtils","Blob","CloseEvent","Event","MessageEvent","productions","token","verifySecWebSocketProtocol","str","test","openSockets","WeakMap","WebSocketImpl","constructorArgs","privateData","window","_ownerDocument","implForWrapper","_document","url","protocols","undefined","urlRecord","scheme","fragment","protocolSet","Set","protocol","lowered","toLowerCase","has","add","_urlRecord","_ws","WebSocket","onopen","_dispatch","createImpl","isTrusted","onerror","onclose","event","wasClean","code","reason","onmessage","data","origin","openSocketsForWindow","get","_globalProxy","set","_eventListeners","Object","create","close","Buffer","byteLength","isImpl","_buffer","send","readyState","bufferedAmount","extensions","binaryType","val","ws","_makeDisappear","prototype","exports"],"mappings":"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","sourcesContent":["/* eslint-env browser */\n\n\"use strict\";\n\nconst DOMException = require(\"domexception\");\nconst { parseURL, serializeURL, serializeURLOrigin } = require(\"whatwg-url\");\n\nconst { setupForSimpleEventAccessors } = require(\"../helpers/create-event-accessor\");\n\nconst EventTargetImpl = require(\"../events/EventTarget-impl\").implementation;\n\nconst idlUtils = require(\"../generated/utils\");\nconst Blob = require(\"../generated/Blob\");\nconst CloseEvent = require(\"../generated/CloseEvent\");\nconst Event = require(\"../generated/Event\");\nconst MessageEvent = require(\"../generated/MessageEvent\");\n\nconst productions = {\n  // https://tools.ietf.org/html/rfc7230#section-3.2.6\n  token: /^[!#$%&'*+\\-.^_`|~\\dA-Za-z]+$/\n};\n\n// https://tools.ietf.org/html/rfc6455#section-4.3\n// See Sec-WebSocket-Protocol-Client, which is for the syntax of an entire header value. This function checks if a\n// single header conforms to the rules.\nfunction verifySecWebSocketProtocol(str) {\n  return productions.token.test(str);\n}\n\nconst openSockets = new WeakMap();\n\nclass WebSocketImpl extends EventTargetImpl {\n  constructor(constructorArgs, privateData) {\n    super([], privateData);\n    const { window } = privateData;\n    this._ownerDocument = idlUtils.implForWrapper(window._document);\n\n    const url = constructorArgs[0];\n    let protocols = constructorArgs[1] !== undefined ? constructorArgs[1] : [];\n\n    const urlRecord = parseURL(url);\n    if (urlRecord === null) {\n      throw new DOMException(`The URL '${url}' is invalid.`, \"SyntaxError\");\n    }\n    if (urlRecord.scheme !== \"ws\" && urlRecord.scheme !== \"wss\") {\n      throw new DOMException(\n        `The URL's scheme must be either 'ws' or 'wss'. '${urlRecord.scheme}' is not allowed.`,\n        \"SyntaxError\"\n      );\n    }\n    if (urlRecord.fragment !== null) {\n      throw new DOMException(`The URL contains a fragment identifier ('${urlRecord.fragment}'). Fragment identifiers ` +\n                             \"are not allowed in WebSocket URLs.\", \"SyntaxError\");\n    }\n\n    if (typeof protocols === \"string\") {\n      protocols = [protocols];\n    }\n    const protocolSet = new Set();\n    for (const protocol of protocols) {\n      if (!verifySecWebSocketProtocol(protocol)) {\n        throw new DOMException(`The subprotocol '${protocol}' is invalid.`, \"SyntaxError\");\n      }\n      const lowered = protocol.toLowerCase();\n      if (protocolSet.has(lowered)) {\n        throw new DOMException(`The subprotocol '${protocol}' is duplicated.`, \"SyntaxError\");\n      }\n      protocolSet.add(lowered);\n    }\n\n    this._urlRecord = urlRecord;\n    this.url = serializeURL(urlRecord);\n\n    this._ws = new WebSocket(this.url, protocols);\n\n    this._ws.onopen = () => {\n      this._dispatch(Event.createImpl([\"open\"], { isTrusted: true }));\n    };\n    this._ws.onerror = () => {\n      this._dispatch(Event.createImpl([\"error\"], { isTrusted: true }));\n    };\n    this._ws.onclose = event => {\n      this._dispatch(CloseEvent.createImpl([\n        \"close\", {\n          wasClean: event.wasClean,\n          code: event.code,\n          reason: event.reason\n        }\n      ], { isTrusted: true }));\n    };\n    this._ws.onmessage = event => {\n      this._dispatch(MessageEvent.createImpl([\n        \"message\", {\n          data: event.data,\n          origin: serializeURLOrigin(this._urlRecord)\n        }\n      ], {\n        isTrusted: true\n      }));\n    };\n\n    let openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow === undefined) {\n      openSocketsForWindow = new Set();\n      openSockets.set(window._globalProxy, openSocketsForWindow);\n    }\n    openSocketsForWindow.add(this);\n  }\n\n  // https://html.spec.whatwg.org/multipage/web-sockets.html#make-disappear\n  _makeDisappear() {\n    this._eventListeners = Object.create(null);\n    this._ws.close(1001);\n  }\n\n  static cleanUpWindow(window) {\n    const openSocketsForWindow = openSockets.get(window._globalProxy);\n    if (openSocketsForWindow !== undefined) {\n      for (const ws of openSocketsForWindow) {\n        ws._makeDisappear();\n      }\n    }\n  }\n\n  get readyState() {\n    return this._ws.readyState;\n  }\n\n  get bufferedAmount() {\n    return this._ws.bufferedAmount;\n  }\n\n  get extensions() {\n    return this._ws.extensions;\n  }\n\n  get protocol() {\n    return this._ws.protocol;\n  }\n\n  close(code = undefined, reason = undefined) {\n    if (code !== undefined && code !== 1000 && !(code >= 3000 && code <= 4999)) {\n      throw new DOMException(\n        `The code must be either 1000, or between 3000 and 4999. ${code} is neither.`,\n        \"InvalidAccessError\"\n      );\n    }\n    if (reason !== undefined && Buffer.byteLength(reason, \"utf8\") > 123) {\n      throw new DOMException(\"The message must not be greater than 123 bytes.\", \"SyntaxError\");\n    }\n    return this._ws.close(code, reason);\n  }\n\n  get binaryType() {\n    return this._ws.binaryType;\n  }\n\n  set binaryType(val) {\n    this._ws.binaryType = val;\n  }\n\n  send(data) {\n    if (Blob.isImpl(data)) {\n      data = data._buffer;\n    }\n    this._ws.send(data);\n  }\n}\n\nsetupForSimpleEventAccessors(WebSocketImpl.prototype, [\"open\", \"message\", \"error\", \"close\"]);\n\nexports.implementation = WebSocketImpl;\n"]},"metadata":{},"sourceType":"script"}
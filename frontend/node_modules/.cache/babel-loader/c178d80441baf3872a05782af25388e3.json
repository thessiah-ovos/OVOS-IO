{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_BILLING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\nimport Cookie from 'js-cookie';\n\nconst {\n  default: Axios\n} = require(\"axios\");\n\nconst addToCart = (beatId, lease) => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/products/\" + beatId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        lease\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = beatId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: beatId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nconst saveBilling = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_BILLING,\n    payload: data\n  });\n};\n\nconst savePayment = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT,\n    payload: data\n  });\n};\n\nexport { addToCart, removeFromCart, saveBilling, savePayment };","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_BILLING","CART_SAVE_PAYMENT","Cookie","default","Axios","require","addToCart","beatId","lease","dispatch","getState","data","get","type","payload","product","_id","name","image","price","cart","cartItems","set","JSON","stringify","error","removeFromCart","saveBilling","savePayment"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,iBAA1C,EAA6DC,iBAA7D,QAAsF,4BAAtF;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAAqBC,OAAO,CAAC,OAAD,CAAlC;;AAEA,MAAMC,SAAS,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB,OAAOC,QAAP,EAAiBC,QAAjB,KAA6B;AAC9D,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,mBAAmBL,MAA7B,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAEf,aADD;AACgBgB,MAAAA,OAAO,EAAE;AAC9BC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADgB;AAE9BC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFmB;AAG9BC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHkB;AAI9BC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJkB;AAK9BX,QAAAA;AAL8B;AADzB,KAAD,CAAR;AAUJ,UAAM;AAACY,MAAAA,IAAI,EAAC;AAACC,QAAAA;AAAD;AAAN,QAAqBX,QAAQ,EAAnC;AACAR,IAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACC,GAdD,CAcE,OAAOI,KAAP,EAAc,CAEf;AACJ,CAlBD;;AAoBA,MAAMC,cAAc,GAAInB,MAAD,IAAY,CAACE,QAAD,EAAWC,QAAX,KAAwB;AACvDD,EAAAA,QAAQ,CAAC;AAACI,IAAAA,IAAI,EAAEd,gBAAP;AAAyBe,IAAAA,OAAO,EAAEP;AAAlC,GAAD,CAAR;AAEA,QAAM;AAACa,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD;AAAN,MAAqBX,QAAQ,EAAnC;AACAR,EAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AAEH,CAND;;AAQA,MAAMM,WAAW,GAAIhB,IAAD,IAAWF,QAAD,IAAc;AACxCA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEb,iBAAR;AAA2Bc,IAAAA,OAAO,EAAEH;AAApC,GAAD,CAAR;AACD,CAFH;;AAIE,MAAMiB,WAAW,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAAEI,IAAAA,IAAI,EAAEZ,iBAAR;AAA2Ba,IAAAA,OAAO,EAAEH;AAApC,GAAD,CAAR;AACD,CAFD;;AAIF,SAASL,SAAT,EAAoBoB,cAApB,EAAoCC,WAApC,EAAiDC,WAAjD","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_BILLING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\r\nimport Cookie from 'js-cookie';\r\n\r\nconst { default: Axios } = require(\"axios\")\r\n\r\nconst addToCart = (beatId, lease) => async (dispatch, getState) =>{\r\n    try {\r\n        const { data } = await Axios.get(\"/api/products/\" + beatId);\r\n        dispatch({\r\n            type: CART_ADD_ITEM, payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            lease\r\n        }\r\n    });\r\n\r\n    const {cart:{cartItems}} = getState();\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nconst removeFromCart = (beatId) => (dispatch, getState) => {\r\n    dispatch({type: CART_REMOVE_ITEM, payload: beatId });\r\n\r\n    const {cart:{cartItems}} = getState();\r\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\r\n    \r\n}\r\n\r\nconst saveBilling = (data) => (dispatch) => {\r\n    dispatch({ type: CART_SAVE_BILLING, payload: data });\r\n  }\r\n  \r\n  const savePayment = (data) => (dispatch) => {\r\n    dispatch({ type: CART_SAVE_PAYMENT, payload: data });\r\n  }\r\n\r\nexport { addToCart, removeFromCart, saveBilling, savePayment }"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar MouseEvent = require(\"../generated/MouseEvent\");\n\nvar _require = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require2 = require(\"../helpers/form-controls\"),\n    isLabelable = _require2.isLabelable,\n    isDisabled = _require2.isDisabled;\n\nfunction sendClickToAssociatedNode(node) {\n  node.dispatchEvent(MouseEvent.createImpl([\"click\", {\n    bubbles: true,\n    cancelable: true,\n    view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n    screenX: 0,\n    screenY: 0,\n    clientX: 0,\n    clientY: 0,\n    button: 0,\n    detail: 1,\n    relatedTarget: null\n  }]));\n}\n\nvar HTMLLabelElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLLabelElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLLabelElementImpl);\n\n  function HTMLLabelElementImpl() {\n    _classCallCheck(this, HTMLLabelElementImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLLabelElementImpl, [{\n    key: \"_activationBehavior\",\n    value: function _activationBehavior() {\n      var node = this.control;\n\n      if (node && !isDisabled(node)) {\n        sendClickToAssociatedNode(node);\n      }\n    }\n  }, {\n    key: \"control\",\n    get: function get() {\n      if (this.hasAttribute(\"for\")) {\n        var forValue = this.getAttribute(\"for\");\n\n        if (forValue === \"\") {\n          return null;\n        }\n\n        var root = this.getRootNode();\n\n        var _iterator = _createForOfIteratorHelper(domSymbolTree.treeIterator(root)),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var descendant = _step.value;\n\n            if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttribute(\"id\") === forValue) {\n              return isLabelable(descendant) ? descendant : null;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        return null;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _descendant = _step2.value;\n\n          if (isLabelable(_descendant)) {\n            return _descendant;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      var node = this.control;\n\n      if (node) {\n        return node.form;\n      }\n\n      return null;\n    }\n  }]);\n\n  return HTMLLabelElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLLabelElement-impl.js"],"names":["HTMLElementImpl","require","implementation","MouseEvent","domSymbolTree","NODE_TYPE","isLabelable","isDisabled","sendClickToAssociatedNode","node","dispatchEvent","createImpl","bubbles","cancelable","view","ownerDocument","defaultView","screenX","screenY","clientX","clientY","button","detail","relatedTarget","HTMLLabelElementImpl","control","hasAttribute","forValue","getAttribute","root","getRootNode","treeIterator","descendant","nodeType","ELEMENT_NODE","form","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;AACA,IAAMC,UAAU,GAAGF,OAAO,CAAC,yBAAD,CAA1B;;eAC0BA,OAAO,CAAC,+BAAD,C;IAAzBG,a,YAAAA,a;;AACR,IAAMC,SAAS,GAAGJ,OAAO,CAAC,cAAD,CAAzB;;gBACoCA,OAAO,CAAC,0BAAD,C;IAAnCK,W,aAAAA,W;IAAaC,U,aAAAA,U;;AAErB,SAASC,yBAAT,CAAmCC,IAAnC,EAAyC;AACvCA,EAAAA,IAAI,CAACC,aAAL,CAAmBP,UAAU,CAACQ,UAAX,CAAsB,CACvC,OADuC,EAEvC;AACEC,IAAAA,OAAO,EAAE,IADX;AAEEC,IAAAA,UAAU,EAAE,IAFd;AAGEC,IAAAA,IAAI,EAAEL,IAAI,CAACM,aAAL,GAAqBN,IAAI,CAACM,aAAL,CAAmBC,WAAxC,GAAsD,IAH9D;AAIEC,IAAAA,OAAO,EAAE,CAJX;AAKEC,IAAAA,OAAO,EAAE,CALX;AAMEC,IAAAA,OAAO,EAAE,CANX;AAOEC,IAAAA,OAAO,EAAE,CAPX;AAQEC,IAAAA,MAAM,EAAE,CARV;AASEC,IAAAA,MAAM,EAAE,CATV;AAUEC,IAAAA,aAAa,EAAE;AAVjB,GAFuC,CAAtB,CAAnB;AAeD;;IAEKC,oB;;;;;;;;;;;;;0CAgCkB;AACpB,UAAMf,IAAI,GAAG,KAAKgB,OAAlB;;AACA,UAAIhB,IAAI,IAAI,CAACF,UAAU,CAACE,IAAD,CAAvB,EAA+B;AAC7BD,QAAAA,yBAAyB,CAACC,IAAD,CAAzB;AACD;AACF;;;wBApCa;AACZ,UAAI,KAAKiB,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,YAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkB,KAAlB,CAAjB;;AACA,YAAID,QAAQ,KAAK,EAAjB,EAAqB;AACnB,iBAAO,IAAP;AACD;;AACD,YAAME,IAAI,GAAG,KAAKC,WAAL,EAAb;;AAL4B,mDAMH1B,aAAa,CAAC2B,YAAd,CAA2BF,IAA3B,CANG;AAAA;;AAAA;AAM5B,8DAA2D;AAAA,gBAAhDG,UAAgD;;AACzD,gBAAIA,UAAU,CAACC,QAAX,KAAwB5B,SAAS,CAAC6B,YAAlC,IACFF,UAAU,CAACJ,YAAX,CAAwB,IAAxB,MAAkCD,QADpC,EAC8C;AAC5C,qBAAOrB,WAAW,CAAC0B,UAAD,CAAX,GAA0BA,UAA1B,GAAuC,IAA9C;AACD;AACF;AAX2B;AAAA;AAAA;AAAA;AAAA;;AAY5B,eAAO,IAAP;AACD;;AAdW,kDAea5B,aAAa,CAAC2B,YAAd,CAA2B,IAA3B,CAfb;AAAA;;AAAA;AAeZ,+DAA2D;AAAA,cAAhDC,WAAgD;;AACzD,cAAI1B,WAAW,CAAC0B,WAAD,CAAf,EAA6B;AAC3B,mBAAOA,WAAP;AACD;AACF;AAnBW;AAAA;AAAA;AAAA;AAAA;;AAoBZ,aAAO,IAAP;AACD;;;wBAEU;AACT,UAAMvB,IAAI,GAAG,KAAKgB,OAAlB;;AACA,UAAIhB,IAAJ,EAAU;AACR,eAAOA,IAAI,CAAC0B,IAAZ;AACD;;AACD,aAAO,IAAP;AACD;;;;EA9BgCnC,e;;AAwCnCoC,MAAM,CAACC,OAAP,GAAiB;AACfnC,EAAAA,cAAc,EAAEsB;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst MouseEvent = require(\"../generated/MouseEvent\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { isLabelable, isDisabled } = require(\"../helpers/form-controls\");\n\nfunction sendClickToAssociatedNode(node) {\n  node.dispatchEvent(MouseEvent.createImpl([\n    \"click\",\n    {\n      bubbles: true,\n      cancelable: true,\n      view: node.ownerDocument ? node.ownerDocument.defaultView : null,\n      screenX: 0,\n      screenY: 0,\n      clientX: 0,\n      clientY: 0,\n      button: 0,\n      detail: 1,\n      relatedTarget: null\n    }\n  ]));\n}\n\nclass HTMLLabelElementImpl extends HTMLElementImpl {\n  get control() {\n    if (this.hasAttribute(\"for\")) {\n      const forValue = this.getAttribute(\"for\");\n      if (forValue === \"\") {\n        return null;\n      }\n      const root = this.getRootNode();\n      for (const descendant of domSymbolTree.treeIterator(root)) {\n        if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE &&\n          descendant.getAttribute(\"id\") === forValue) {\n          return isLabelable(descendant) ? descendant : null;\n        }\n      }\n      return null;\n    }\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (isLabelable(descendant)) {\n        return descendant;\n      }\n    }\n    return null;\n  }\n\n  get form() {\n    const node = this.control;\n    if (node) {\n      return node.form;\n    }\n    return null;\n  }\n\n  _activationBehavior() {\n    const node = this.control;\n    if (node && !isDisabled(node)) {\n      sendClickToAssociatedNode(node);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLLabelElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertBlobPropertyBag = require(\"./BlobPropertyBag.js\").convert;\n\nvar impl = utils.implSymbol;\n\nfunction Blob() {\n  if ((this instanceof Blob ? this.constructor : void 0) === undefined) {\n    throw new TypeError(\"Failed to construct 'Blob'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      if (!utils.isObject(curArg)) {\n        throw new TypeError(\"Failed to construct 'Blob': parameter 1\" + \" is not an iterable object.\");\n      } else {\n        var V = [];\n        var tmp = curArg;\n\n        var _iterator = _createForOfIteratorHelper(tmp),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var nextItem = _step.value;\n\n            if (module.exports.is(nextItem)) {\n              nextItem = utils.implForWrapper(nextItem);\n            } else if (nextItem instanceof ArrayBuffer) {} else if (ArrayBuffer.isView(nextItem)) {} else {\n              nextItem = conversions[\"USVString\"](nextItem, {\n                context: \"Failed to construct 'Blob': parameter 1\" + \"'s element\"\n              });\n            }\n\n            V.push(nextItem);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        curArg = V;\n      }\n    }\n\n    args.push(curArg);\n  }\n  {\n    var _curArg = arguments[1];\n    _curArg = convertBlobPropertyBag(_curArg, {\n      context: \"Failed to construct 'Blob': parameter 2\"\n    });\n    args.push(_curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.defineProperty(Blob, \"prototype\", {\n  value: Blob.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nBlob.prototype.slice = function slice() {\n  var _this$impl;\n\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 1\",\n        clamp: true\n      });\n    }\n\n    args.push(curArg);\n  }\n  {\n    var _curArg2 = arguments[1];\n\n    if (_curArg2 !== undefined) {\n      _curArg2 = conversions[\"long long\"](_curArg2, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 2\",\n        clamp: true\n      });\n    }\n\n    args.push(_curArg2);\n  }\n  {\n    var _curArg3 = arguments[2];\n\n    if (_curArg3 !== undefined) {\n      _curArg3 = conversions[\"DOMString\"](_curArg3, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 3\"\n      });\n    }\n\n    args.push(_curArg3);\n  }\n  return utils.tryWrapperForImpl((_this$impl = this[impl]).slice.apply(_this$impl, args));\n};\n\nObject.defineProperty(Blob.prototype, \"size\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Blob.prototype, \"type\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: \"Blob\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n\n      var _iterator3 = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var isMixedInto = _step3.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'Blob'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {},\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: Blob,\n  expose: {\n    Window: {\n      Blob: Blob\n    },\n    Worker: {\n      Blob: Blob\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../file-api/Blob-impl.js\");","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/Blob.js"],"names":["conversions","require","utils","convertBlobPropertyBag","convert","impl","implSymbol","Blob","undefined","TypeError","args","curArg","arguments","isObject","V","tmp","nextItem","module","exports","is","implForWrapper","ArrayBuffer","isView","context","push","iface","setup","Object","defineProperty","value","prototype","writable","enumerable","configurable","slice","clamp","tryWrapperForImpl","get","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","interface","expose","Window","Worker"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertBlobPropertyBag = require(\"./BlobPropertyBag.js\").convert;\nconst impl = utils.implSymbol;\n\nfunction Blob() {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'Blob'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      if (!utils.isObject(curArg)) {\n        throw new TypeError(\"Failed to construct 'Blob': parameter 1\" + \" is not an iterable object.\");\n      } else {\n        const V = [];\n        const tmp = curArg;\n        for (let nextItem of tmp) {\n          if (module.exports.is(nextItem)) {\n            nextItem = utils.implForWrapper(nextItem);\n          } else if (nextItem instanceof ArrayBuffer) {\n          } else if (ArrayBuffer.isView(nextItem)) {\n          } else {\n            nextItem = conversions[\"USVString\"](nextItem, {\n              context: \"Failed to construct 'Blob': parameter 1\" + \"'s element\"\n            });\n          }\n          V.push(nextItem);\n        }\n        curArg = V;\n      }\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertBlobPropertyBag(curArg, { context: \"Failed to construct 'Blob': parameter 2\" });\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.defineProperty(Blob, \"prototype\", {\n  value: Blob.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nBlob.prototype.slice = function slice() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 1\",\n        clamp: true\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    if (curArg !== undefined) {\n      curArg = conversions[\"long long\"](curArg, {\n        context: \"Failed to execute 'slice' on 'Blob': parameter 2\",\n        clamp: true\n      });\n    }\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[2];\n    if (curArg !== undefined) {\n      curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to execute 'slice' on 'Blob': parameter 3\" });\n    }\n    args.push(curArg);\n  }\n  return utils.tryWrapperForImpl(this[impl].slice(...args));\n};\n\nObject.defineProperty(Blob.prototype, \"size\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"size\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Blob.prototype, \"type\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"type\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n  value: \"Blob\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'Blob'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(Blob.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {},\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: Blob,\n  expose: {\n    Window: { Blob },\n    Worker: { Blob }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../file-api/Blob-impl.js\");\n"]},"metadata":{},"sourceType":"script"}
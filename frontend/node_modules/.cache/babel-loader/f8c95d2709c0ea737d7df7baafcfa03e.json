{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar DOMException = require(\"domexception\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar notImplemented = require(\"../../browser/not-implemented\");\n\nvar _require = require(\"../../utils\"),\n    reflectURLAttribute = _require.reflectURLAttribute;\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start: function start() {\n      return 0;\n    },\n    end: function end() {\n      return 0;\n    }\n  };\n}\n\nvar HTMLMediaElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLMediaElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLMediaElementImpl);\n\n  function HTMLMediaElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLMediaElementImpl);\n\n    _this = _super.call(this, args, privateData);\n    _this._muted = false;\n    _this._volume = 1.0;\n    _this.readyState = 0;\n    _this.networkState = 0;\n    _this.currentTime = 0;\n    _this.currentSrc = \"\";\n    _this.buffered = getTimeRangeDummy();\n    _this.seeking = false;\n    _this.duration = 0;\n    _this.paused = true;\n    _this.played = getTimeRangeDummy();\n    _this.seekable = getTimeRangeDummy();\n    _this.ended = false;\n    _this.audioTracks = [];\n    _this.videoTracks = [];\n    _this.textTracks = [];\n    return _this;\n  } // Implemented accoring to W3C Draft 22 August 2012\n\n\n  _createClass(HTMLMediaElementImpl, [{\n    key: \"_dispatchRateChange\",\n    value: function _dispatchRateChange() {\n      var ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n\n      ev.initEvent(\"ratechange\", false, false);\n      this.dispatchEvent(ev);\n    }\n  }, {\n    key: \"_dispatchVolumeChange\",\n    value: function _dispatchVolumeChange() {\n      var ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n\n      ev.initEvent(\"volumechange\", false, false);\n      this.dispatchEvent(ev);\n    }\n  }, {\n    key: \"load\",\n    // Not (yet) implemented according to spec\n    // Should return sane default values\n    value: function load() {\n      notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"canPlayType\",\n    value: function canPlayType() {\n      return \"\";\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"addTextTrack\",\n    value: function addTextTrack() {\n      notImplemented(\"HTMLMediaElement.prototype.addNextTrack\", this._ownerDocument._defaultView);\n    }\n  }, {\n    key: \"defaultPlaybackRate\",\n    set: function set(v) {\n      if (v === 0.0) {\n        throw new DOMException(\"The operation is not supported.\", \"NotSupportedError\");\n      }\n\n      if (this._defaultPlaybackRate !== v) {\n        this._defaultPlaybackRate = v;\n\n        this._dispatchRateChange();\n      }\n    },\n    get: function get() {\n      if (this._defaultPlaybackRate === undefined) {\n        return 1.0;\n      }\n\n      return this._defaultPlaybackRate;\n    }\n  }, {\n    key: \"playbackRate\",\n    get: function get() {\n      if (this._playbackRate === undefined) {\n        return 1.0;\n      }\n\n      return this._playbackRate;\n    },\n    set: function set(v) {\n      if (v !== this._playbackRate) {\n        this._playbackRate = v;\n\n        this._dispatchRateChange();\n      }\n    }\n  }, {\n    key: \"muted\",\n    get: function get() {\n      return this._muted;\n    },\n    set: function set(v) {\n      if (v !== this._muted) {\n        this._muted = v;\n\n        this._dispatchVolumeChange();\n      }\n    }\n  }, {\n    key: \"defaultMuted\",\n    get: function get() {\n      return this.getAttribute(\"muted\") !== null;\n    },\n    set: function set(v) {\n      if (v) {\n        this.setAttribute(\"muted\", v);\n      } else {\n        this.removeAttribute(\"muted\");\n      }\n    }\n  }, {\n    key: \"volume\",\n    get: function get() {\n      return this._volume;\n    },\n    set: function set(v) {\n      if (v < 0 || v > 1) {\n        throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n      }\n\n      if (this._volume !== v) {\n        this._volume = v;\n\n        this._dispatchVolumeChange();\n      }\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return reflectURLAttribute(this, \"src\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"src\", value);\n    }\n  }]);\n\n  return HTMLMediaElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLMediaElement-impl.js"],"names":["DOMException","require","HTMLElementImpl","implementation","notImplemented","reflectURLAttribute","getTimeRangeDummy","length","start","end","HTMLMediaElementImpl","args","privateData","_muted","_volume","readyState","networkState","currentTime","currentSrc","buffered","seeking","duration","paused","played","seekable","ended","audioTracks","videoTracks","textTracks","ev","_ownerDocument","createEvent","initEvent","dispatchEvent","_defaultView","v","_defaultPlaybackRate","_dispatchRateChange","undefined","_playbackRate","_dispatchVolumeChange","getAttribute","setAttribute","removeAttribute","value","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst DOMException = require(\"domexception\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst notImplemented = require(\"../../browser/not-implemented\");\nconst { reflectURLAttribute } = require(\"../../utils\");\n\nfunction getTimeRangeDummy() {\n  return {\n    length: 0,\n    start() {\n      return 0;\n    },\n    end() {\n      return 0;\n    }\n  };\n}\n\nclass HTMLMediaElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._muted = false;\n    this._volume = 1.0;\n    this.readyState = 0;\n    this.networkState = 0;\n    this.currentTime = 0;\n    this.currentSrc = \"\";\n    this.buffered = getTimeRangeDummy();\n    this.seeking = false;\n    this.duration = 0;\n    this.paused = true;\n    this.played = getTimeRangeDummy();\n    this.seekable = getTimeRangeDummy();\n    this.ended = false;\n    this.audioTracks = [];\n    this.videoTracks = [];\n    this.textTracks = [];\n  }\n  // Implemented accoring to W3C Draft 22 August 2012\n  set defaultPlaybackRate(v) {\n    if (v === 0.0) {\n      throw new DOMException(\"The operation is not supported.\", \"NotSupportedError\");\n    }\n    if (this._defaultPlaybackRate !== v) {\n      this._defaultPlaybackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n\n  _dispatchRateChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"ratechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  get defaultPlaybackRate() {\n    if (this._defaultPlaybackRate === undefined) {\n      return 1.0;\n    }\n    return this._defaultPlaybackRate;\n  }\n  get playbackRate() {\n    if (this._playbackRate === undefined) {\n      return 1.0;\n    }\n    return this._playbackRate;\n  }\n  set playbackRate(v) {\n    if (v !== this._playbackRate) {\n      this._playbackRate = v;\n      this._dispatchRateChange();\n    }\n  }\n  get muted() {\n    return this._muted;\n  }\n  _dispatchVolumeChange() {\n    const ev = this._ownerDocument.createEvent(\"HTMLEvents\");\n    ev.initEvent(\"volumechange\", false, false);\n    this.dispatchEvent(ev);\n  }\n  set muted(v) {\n    if (v !== this._muted) {\n      this._muted = v;\n      this._dispatchVolumeChange();\n    }\n  }\n  get defaultMuted() {\n    return this.getAttribute(\"muted\") !== null;\n  }\n  set defaultMuted(v) {\n    if (v) {\n      this.setAttribute(\"muted\", v);\n    } else {\n      this.removeAttribute(\"muted\");\n    }\n  }\n  get volume() {\n    return this._volume;\n  }\n  set volume(v) {\n    if (v < 0 || v > 1) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    if (this._volume !== v) {\n      this._volume = v;\n      this._dispatchVolumeChange();\n    }\n  }\n\n  // Not (yet) implemented according to spec\n  // Should return sane default values\n  load() {\n    notImplemented(\"HTMLMediaElement.prototype.load\", this._ownerDocument._defaultView);\n  }\n  canPlayType() {\n    return \"\";\n  }\n  play() {\n    notImplemented(\"HTMLMediaElement.prototype.play\", this._ownerDocument._defaultView);\n  }\n  pause() {\n    notImplemented(\"HTMLMediaElement.prototype.pause\", this._ownerDocument._defaultView);\n  }\n  addTextTrack() {\n    notImplemented(\"HTMLMediaElement.prototype.addNextTrack\", this._ownerDocument._defaultView);\n  }\n\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLMediaElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
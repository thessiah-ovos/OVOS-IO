{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar NodeList = require(\"../generated/NodeList\");\n\nvar HTMLCollection = require(\"../generated/HTMLCollection\");\n\nvar _require = require(\"../helpers/selectors\"),\n    addNwsapi = _require.addNwsapi;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar _require3 = require(\"../../utils\"),\n    memoizeQuery = _require3.memoizeQuery;\n\nvar _require4 = require(\"../node\"),\n    convertNodesIntoNode = _require4.convertNodesIntoNode;\n\nvar ParentNodeImpl = /*#__PURE__*/function () {\n  function ParentNodeImpl() {\n    _classCallCheck(this, ParentNodeImpl);\n  }\n\n  _createClass(ParentNodeImpl, [{\n    key: \"append\",\n    value: function append() {\n      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n        nodes[_key] = arguments[_key];\n      }\n\n      this.appendChild(convertNodesIntoNode(this._ownerDocument, nodes));\n    }\n  }, {\n    key: \"prepend\",\n    value: function prepend() {\n      for (var _len2 = arguments.length, nodes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        nodes[_key2] = arguments[_key2];\n      }\n\n      this.insertBefore(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      var _this = this;\n\n      if (!this._childrenList) {\n        this._childrenList = HTMLCollection.createImpl([], {\n          element: this,\n          query: function query() {\n            return domSymbolTree.childrenToArray(_this, {\n              filter: function filter(node) {\n                return node.nodeType === NODE_TYPE.ELEMENT_NODE;\n              }\n            });\n          }\n        });\n      } else {\n        this._childrenList._update();\n      }\n\n      return this._childrenList;\n    }\n  }, {\n    key: \"firstElementChild\",\n    get: function get() {\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.childrenIterator(this)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n\n          if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            return child;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"lastElementChild\",\n    get: function get() {\n      var _iterator2 = _createForOfIteratorHelper(domSymbolTree.childrenIterator(this, {\n        reverse: true\n      })),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var child = _step2.value;\n\n          if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n            return child;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"childElementCount\",\n    get: function get() {\n      return this.children.length;\n    }\n  }]);\n\n  return ParentNodeImpl;\n}();\n\nParentNodeImpl.prototype.querySelector = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return null;\n  }\n\n  var matcher = addNwsapi(this);\n  return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n}); // WARNING: this returns a NodeList containing IDL wrappers instead of impls\n\nParentNodeImpl.prototype.querySelectorAll = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return NodeList.create([], {\n      nodes: []\n    });\n  }\n\n  var matcher = addNwsapi(this);\n  var list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n  return NodeList.create([], {\n    nodes: list.map(function (n) {\n      return idlUtils.tryImplForWrapper(n);\n    })\n  });\n});\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // The latter clause is true during initialization.\n  return !domSymbolTree.hasChildren(elImpl) || elImpl === elImpl._ownerDocument && !elImpl.documentElement;\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/ParentNode-impl.js"],"names":["idlUtils","require","NodeList","HTMLCollection","addNwsapi","domSymbolTree","NODE_TYPE","memoizeQuery","convertNodesIntoNode","ParentNodeImpl","nodes","appendChild","_ownerDocument","insertBefore","firstChild","_childrenList","createImpl","element","query","childrenToArray","filter","node","nodeType","ELEMENT_NODE","_update","childrenIterator","child","reverse","children","length","prototype","querySelector","selectors","shouldAlwaysSelectNothing","matcher","implForWrapper","first","wrapperForImpl","querySelectorAll","create","list","select","map","n","tryImplForWrapper","elImpl","hasChildren","documentElement","module","exports","implementation"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils\");\nconst NodeList = require(\"../generated/NodeList\");\nconst HTMLCollection = require(\"../generated/HTMLCollection\");\nconst { addNwsapi } = require(\"../helpers/selectors\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst { memoizeQuery } = require(\"../../utils\");\nconst { convertNodesIntoNode } = require(\"../node\");\n\nclass ParentNodeImpl {\n  get children() {\n    if (!this._childrenList) {\n      this._childrenList = HTMLCollection.createImpl([], {\n        element: this,\n        query: () => domSymbolTree.childrenToArray(this, {\n          filter: node => node.nodeType === NODE_TYPE.ELEMENT_NODE\n        })\n      });\n    } else {\n      this._childrenList._update();\n    }\n    return this._childrenList;\n  }\n\n  get firstElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this)) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get lastElementChild() {\n    for (const child of domSymbolTree.childrenIterator(this, { reverse: true })) {\n      if (child.nodeType === NODE_TYPE.ELEMENT_NODE) {\n        return child;\n      }\n    }\n\n    return null;\n  }\n\n  get childElementCount() {\n    return this.children.length;\n  }\n\n  append(...nodes) {\n    this.appendChild(convertNodesIntoNode(this._ownerDocument, nodes));\n  }\n\n  prepend(...nodes) {\n    this.insertBefore(convertNodesIntoNode(this._ownerDocument, nodes), this.firstChild);\n  }\n}\n\nParentNodeImpl.prototype.querySelector = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return null;\n  }\n  const matcher = addNwsapi(this);\n  return idlUtils.implForWrapper(matcher.first(selectors, idlUtils.wrapperForImpl(this)));\n});\n\n// WARNING: this returns a NodeList containing IDL wrappers instead of impls\nParentNodeImpl.prototype.querySelectorAll = memoizeQuery(function (selectors) {\n  if (shouldAlwaysSelectNothing(this)) {\n    return NodeList.create([], { nodes: [] });\n  }\n  const matcher = addNwsapi(this);\n  const list = matcher.select(selectors, idlUtils.wrapperForImpl(this));\n\n  return NodeList.create([], { nodes: list.map(n => idlUtils.tryImplForWrapper(n)) });\n});\n\nfunction shouldAlwaysSelectNothing(elImpl) {\n  // The latter clause is true during initialization.\n  return !domSymbolTree.hasChildren(elImpl) || (elImpl === elImpl._ownerDocument && !elImpl.documentElement);\n}\n\nmodule.exports = {\n  implementation: ParentNodeImpl\n};\n"]},"metadata":{},"sourceType":"script"}
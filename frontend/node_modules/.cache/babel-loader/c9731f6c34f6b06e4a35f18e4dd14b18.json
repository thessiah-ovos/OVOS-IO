{"ast":null,"code":"\"use strict\";\n\nvar vm = require(\"vm\");\n\nvar idlUtils = require(\"../living/generated/utils\");\n\nexports.availableDocumentFeatures = [\"FetchExternalResources\", \"SkipExternalResources\"];\nexports.defaultDocumentFeatures = {\n  FetchExternalResources: [\"script\", \"link\"],\n  // omitted by default: \"frame\"\n  SkipExternalResources: false\n};\n\nexports.applyDocumentFeatures = function (documentImpl) {\n  var features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var i = 0; i < exports.availableDocumentFeatures.length; ++i) {\n    var featureName = exports.availableDocumentFeatures[i];\n    var featureSource = void 0;\n\n    if (features[featureName] !== undefined) {\n      featureSource = features[featureName]; // We have to check the lowercase version also because the Document feature\n      // methods convert everything to lowercase.\n    } else if (typeof features[featureName.toLowerCase()] !== \"undefined\") {\n      featureSource = features[featureName.toLowerCase()];\n    } else if (exports.defaultDocumentFeatures[featureName]) {\n      featureSource = exports.defaultDocumentFeatures[featureName];\n    } else {\n      continue;\n    }\n\n    var implImpl = documentImpl._implementation;\n\n    implImpl._removeFeature(featureName);\n\n    if (featureSource !== undefined) {\n      if (Array.isArray(featureSource)) {\n        for (var j = 0; j < featureSource.length; ++j) {\n          implImpl._addFeature(featureName, featureSource[j]);\n        }\n      } else {\n        implImpl._addFeature(featureName, featureSource);\n      }\n    }\n  }\n};\n\nexports.contextifyWindow = function (window) {\n  if (vm.isContext(window)) {\n    return;\n  }\n\n  vm.createContext(window);\n  var documentImpl = idlUtils.implForWrapper(window._document);\n  documentImpl._defaultView = window._globalProxy = vm.runInContext(\"this\", window);\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/browser/documentfeatures.js"],"names":["vm","require","idlUtils","exports","availableDocumentFeatures","defaultDocumentFeatures","FetchExternalResources","SkipExternalResources","applyDocumentFeatures","documentImpl","features","i","length","featureName","featureSource","undefined","toLowerCase","implImpl","_implementation","_removeFeature","Array","isArray","j","_addFeature","contextifyWindow","window","isContext","createContext","implForWrapper","_document","_defaultView","_globalProxy","runInContext"],"mappings":"AAAA;;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,2BAAD,CAAxB;;AAEAE,OAAO,CAACC,yBAAR,GAAoC,CAClC,wBADkC,EAElC,uBAFkC,CAApC;AAKAD,OAAO,CAACE,uBAAR,GAAkC;AAChCC,EAAAA,sBAAsB,EAAE,CAAC,QAAD,EAAW,MAAX,CADQ;AACY;AAC5CC,EAAAA,qBAAqB,EAAE;AAFS,CAAlC;;AAKAJ,OAAO,CAACK,qBAAR,GAAgC,UAACC,YAAD,EAAiC;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AAC/D,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,OAAO,CAACC,yBAAR,CAAkCQ,MAAtD,EAA8D,EAAED,CAAhE,EAAmE;AACjE,QAAME,WAAW,GAAGV,OAAO,CAACC,yBAAR,CAAkCO,CAAlC,CAApB;AACA,QAAIG,aAAa,SAAjB;;AAEA,QAAIJ,QAAQ,CAACG,WAAD,CAAR,KAA0BE,SAA9B,EAAyC;AACvCD,MAAAA,aAAa,GAAGJ,QAAQ,CAACG,WAAD,CAAxB,CADuC,CAEvC;AACA;AACD,KAJD,MAIO,IAAI,OAAOH,QAAQ,CAACG,WAAW,CAACG,WAAZ,EAAD,CAAf,KAA+C,WAAnD,EAAgE;AACrEF,MAAAA,aAAa,GAAGJ,QAAQ,CAACG,WAAW,CAACG,WAAZ,EAAD,CAAxB;AACD,KAFM,MAEA,IAAIb,OAAO,CAACE,uBAAR,CAAgCQ,WAAhC,CAAJ,EAAkD;AACvDC,MAAAA,aAAa,GAAGX,OAAO,CAACE,uBAAR,CAAgCQ,WAAhC,CAAhB;AACD,KAFM,MAEA;AACL;AACD;;AAED,QAAMI,QAAQ,GAAGR,YAAY,CAACS,eAA9B;;AACAD,IAAAA,QAAQ,CAACE,cAAT,CAAwBN,WAAxB;;AAEA,QAAIC,aAAa,KAAKC,SAAtB,EAAiC;AAC/B,UAAIK,KAAK,CAACC,OAAN,CAAcP,aAAd,CAAJ,EAAkC;AAChC,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,aAAa,CAACF,MAAlC,EAA0C,EAAEU,CAA5C,EAA+C;AAC7CL,UAAAA,QAAQ,CAACM,WAAT,CAAqBV,WAArB,EAAkCC,aAAa,CAACQ,CAAD,CAA/C;AACD;AACF,OAJD,MAIO;AACLL,QAAAA,QAAQ,CAACM,WAAT,CAAqBV,WAArB,EAAkCC,aAAlC;AACD;AACF;AACF;AACF,CA9BD;;AAgCAX,OAAO,CAACqB,gBAAR,GAA2B,UAAAC,MAAM,EAAI;AACnC,MAAIzB,EAAE,CAAC0B,SAAH,CAAaD,MAAb,CAAJ,EAA0B;AACxB;AACD;;AAEDzB,EAAAA,EAAE,CAAC2B,aAAH,CAAiBF,MAAjB;AACA,MAAMhB,YAAY,GAAGP,QAAQ,CAAC0B,cAAT,CAAwBH,MAAM,CAACI,SAA/B,CAArB;AACApB,EAAAA,YAAY,CAACqB,YAAb,GAA4BL,MAAM,CAACM,YAAP,GAAsB/B,EAAE,CAACgC,YAAH,CAAgB,MAAhB,EAAwBP,MAAxB,CAAlD;AACD,CARD","sourcesContent":["\"use strict\";\nconst vm = require(\"vm\");\nconst idlUtils = require(\"../living/generated/utils\");\n\nexports.availableDocumentFeatures = [\n  \"FetchExternalResources\",\n  \"SkipExternalResources\"\n];\n\nexports.defaultDocumentFeatures = {\n  FetchExternalResources: [\"script\", \"link\"], // omitted by default: \"frame\"\n  SkipExternalResources: false\n};\n\nexports.applyDocumentFeatures = (documentImpl, features = {}) => {\n  for (let i = 0; i < exports.availableDocumentFeatures.length; ++i) {\n    const featureName = exports.availableDocumentFeatures[i];\n    let featureSource;\n\n    if (features[featureName] !== undefined) {\n      featureSource = features[featureName];\n      // We have to check the lowercase version also because the Document feature\n      // methods convert everything to lowercase.\n    } else if (typeof features[featureName.toLowerCase()] !== \"undefined\") {\n      featureSource = features[featureName.toLowerCase()];\n    } else if (exports.defaultDocumentFeatures[featureName]) {\n      featureSource = exports.defaultDocumentFeatures[featureName];\n    } else {\n      continue;\n    }\n\n    const implImpl = documentImpl._implementation;\n    implImpl._removeFeature(featureName);\n\n    if (featureSource !== undefined) {\n      if (Array.isArray(featureSource)) {\n        for (let j = 0; j < featureSource.length; ++j) {\n          implImpl._addFeature(featureName, featureSource[j]);\n        }\n      } else {\n        implImpl._addFeature(featureName, featureSource);\n      }\n    }\n  }\n};\n\nexports.contextifyWindow = window => {\n  if (vm.isContext(window)) {\n    return;\n  }\n\n  vm.createContext(window);\n  const documentImpl = idlUtils.implForWrapper(window._document);\n  documentImpl._defaultView = window._globalProxy = vm.runInContext(\"this\", window);\n};\n"]},"metadata":{},"sourceType":"script"}
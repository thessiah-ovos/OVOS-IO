{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertEventTarget = require(\"./EventTarget.js\").convert;\n\nvar UIEventInit = require(\"./UIEventInit.js\");\n\nmodule.exports = {\n  convertInherit: function convertInherit(obj, ret) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    UIEventInit.convertInherit(obj, ret, {\n      context: context\n    });\n    {\n      var key = \"relatedTarget\";\n      var value = obj === undefined || obj === null ? undefined : obj[key];\n\n      if (value !== undefined) {\n        if (value === null || value === undefined) {\n          value = null;\n        } else {\n          value = convertEventTarget(value, {\n            context: context + \" has member relatedTarget that\"\n          });\n        }\n\n        ret[key] = value;\n      } else {\n        ret[key] = null;\n      }\n    }\n  },\n  convert: function convert(obj) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$context = _ref2.context,\n        context = _ref2$context === void 0 ? \"The provided value\" : _ref2$context;\n\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(\"\".concat(context, \" is not an object.\"));\n    }\n\n    var ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, {\n      context: context\n    });\n    return ret;\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/FocusEventInit.js"],"names":["conversions","require","utils","convertEventTarget","convert","UIEventInit","module","exports","convertInherit","obj","ret","context","key","value","undefined","TypeError","Object","create"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAME,kBAAkB,GAAGF,OAAO,CAAC,kBAAD,CAAP,CAA4BG,OAAvD;;AACA,IAAMC,WAAW,GAAGJ,OAAO,CAAC,kBAAD,CAA3B;;AAEAK,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cADe,0BACAC,GADA,EACKC,GADL,EACmD;AAAA,mFAAJ,EAAI;AAAA,4BAAvCC,OAAuC;AAAA,QAAvCA,OAAuC,6BAA7B,oBAA6B;;AAChEN,IAAAA,WAAW,CAACG,cAAZ,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAArC;AAEA;AACE,UAAMC,GAAG,GAAG,eAAZ;AACA,UAAIC,KAAK,GAAGJ,GAAG,KAAKK,SAAR,IAAqBL,GAAG,KAAK,IAA7B,GAAoCK,SAApC,GAAgDL,GAAG,CAACG,GAAD,CAA/D;;AACA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAID,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAKC,SAAhC,EAA2C;AACzCD,UAAAA,KAAK,GAAG,IAAR;AACD,SAFD,MAEO;AACLA,UAAAA,KAAK,GAAGV,kBAAkB,CAACU,KAAD,EAAQ;AAAEF,YAAAA,OAAO,EAAEA,OAAO,GAAG;AAArB,WAAR,CAA1B;AACD;;AACDD,QAAAA,GAAG,CAACE,GAAD,CAAH,GAAWC,KAAX;AACD,OAPD,MAOO;AACLH,QAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,IAAX;AACD;AACF;AACF,GAlBc;AAoBfR,EAAAA,OApBe,mBAoBPK,GApBO,EAoBuC;AAAA,oFAAJ,EAAI;AAAA,8BAAvCE,OAAuC;AAAA,QAAvCA,OAAuC,8BAA7B,oBAA6B;;AACpD,QAAIF,GAAG,KAAKK,SAAR,IAAqB,OAAOL,GAAP,KAAe,QAApC,IAAgD,OAAOA,GAAP,KAAe,UAAnE,EAA+E;AAC7E,YAAM,IAAIM,SAAJ,WAAiBJ,OAAjB,wBAAN;AACD;;AAED,QAAMD,GAAG,GAAGM,MAAM,CAACC,MAAP,CAAc,IAAd,CAAZ;AACAX,IAAAA,MAAM,CAACC,OAAP,CAAeC,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwC;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAAxC;AACA,WAAOD,GAAP;AACD;AA5Bc,CAAjB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertEventTarget = require(\"./EventTarget.js\").convert;\nconst UIEventInit = require(\"./UIEventInit.js\");\n\nmodule.exports = {\n  convertInherit(obj, ret, { context = \"The provided value\" } = {}) {\n    UIEventInit.convertInherit(obj, ret, { context });\n\n    {\n      const key = \"relatedTarget\";\n      let value = obj === undefined || obj === null ? undefined : obj[key];\n      if (value !== undefined) {\n        if (value === null || value === undefined) {\n          value = null;\n        } else {\n          value = convertEventTarget(value, { context: context + \" has member relatedTarget that\" });\n        }\n        ret[key] = value;\n      } else {\n        ret[key] = null;\n      }\n    }\n  },\n\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(`${context} is not an object.`);\n    }\n\n    const ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, { context });\n    return ret;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar convertProgressEventInit = require(\"./ProgressEventInit.js\").convert;\n\nvar impl = utils.implSymbol;\n\nvar Event = require(\"./Event.js\");\n\nfunction ProgressEvent(type) {\n  if ((this instanceof ProgressEvent ? this.constructor : void 0) === undefined) {\n    throw new TypeError(\"Failed to construct 'ProgressEvent'. Please use the 'new' operator; this constructor \" + \"cannot be called as a function.\");\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'ProgressEvent': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n\n  var args = [];\n  {\n    var curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, {\n      context: \"Failed to construct 'ProgressEvent': parameter 1\"\n    });\n    args.push(curArg);\n  }\n  {\n    var _curArg = arguments[1];\n    _curArg = convertProgressEventInit(_curArg, {\n      context: \"Failed to construct 'ProgressEvent': parameter 2\"\n    });\n    args.push(_curArg);\n  }\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(ProgressEvent.prototype, Event.interface.prototype);\nObject.setPrototypeOf(ProgressEvent, Event.interface);\nObject.defineProperty(ProgressEvent, \"prototype\", {\n  value: ProgressEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\nObject.defineProperty(ProgressEvent.prototype, \"lengthComputable\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"lengthComputable\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(ProgressEvent.prototype, \"loaded\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"loaded\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(ProgressEvent.prototype, \"total\", {\n  get: function get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"total\"];\n  },\n  enumerable: true,\n  configurable: true\n});\nObject.defineProperty(ProgressEvent.prototype, Symbol.toStringTag, {\n  value: \"ProgressEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\nvar iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is: function is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n\n      var _iterator = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var isMixedInto = _step.value;\n\n          if (isMixedInto(obj)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    return false;\n  },\n  isImpl: function isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      var wrapper = utils.wrapperForImpl(obj);\n\n      var _iterator2 = _createForOfIteratorHelper(module.exports._mixedIntoPredicates),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var isMixedInto = _step2.value;\n\n          if (isMixedInto(wrapper)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return false;\n  },\n  convert: function convert(obj) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n\n    throw new TypeError(\"\".concat(context, \" is not of type 'ProgressEvent'.\"));\n  },\n  create: function create(constructorArgs, privateData) {\n    var obj = Object.create(ProgressEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl: function createImpl(constructorArgs, privateData) {\n    var obj = Object.create(ProgressEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup: function _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup: function setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n    obj[impl][utils.wrapperSymbol] = obj;\n\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n\n    return obj;\n  },\n  interface: ProgressEvent,\n  expose: {\n    Window: {\n      ProgressEvent: ProgressEvent\n    },\n    DedicatedWorker: {\n      ProgressEvent: ProgressEvent\n    },\n    SharedWorker: {\n      ProgressEvent: ProgressEvent\n    }\n  }\n}; // iface\n\nmodule.exports = iface;\n\nvar Impl = require(\"../events/ProgressEvent-impl.js\");","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/ProgressEvent.js"],"names":["conversions","require","utils","convertProgressEventInit","convert","impl","implSymbol","Event","ProgressEvent","type","undefined","TypeError","arguments","length","args","curArg","context","push","iface","setup","Object","setPrototypeOf","prototype","interface","defineProperty","value","writable","enumerable","configurable","get","module","exports","is","Symbol","toStringTag","_mixedIntoPredicates","obj","hasOwn","Impl","implementation","isMixedInto","isImpl","wrapper","wrapperForImpl","implForWrapper","create","constructorArgs","privateData","createImpl","_internalSetup","wrapperSymbol","init","expose","Window","DedicatedWorker","SharedWorker"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst convertProgressEventInit = require(\"./ProgressEventInit.js\").convert;\nconst impl = utils.implSymbol;\nconst Event = require(\"./Event.js\");\n\nfunction ProgressEvent(type) {\n  if (new.target === undefined) {\n    throw new TypeError(\n      \"Failed to construct 'ProgressEvent'. Please use the 'new' operator; this constructor \" +\n        \"cannot be called as a function.\"\n    );\n  }\n\n  if (arguments.length < 1) {\n    throw new TypeError(\n      \"Failed to construct 'ProgressEvent': 1 argument required, but only \" + arguments.length + \" present.\"\n    );\n  }\n  const args = [];\n  {\n    let curArg = arguments[0];\n    curArg = conversions[\"DOMString\"](curArg, { context: \"Failed to construct 'ProgressEvent': parameter 1\" });\n    args.push(curArg);\n  }\n  {\n    let curArg = arguments[1];\n    curArg = convertProgressEventInit(curArg, { context: \"Failed to construct 'ProgressEvent': parameter 2\" });\n    args.push(curArg);\n  }\n\n  iface.setup(this, args);\n}\n\nObject.setPrototypeOf(ProgressEvent.prototype, Event.interface.prototype);\nObject.setPrototypeOf(ProgressEvent, Event.interface);\n\nObject.defineProperty(ProgressEvent, \"prototype\", {\n  value: ProgressEvent.prototype,\n  writable: false,\n  enumerable: false,\n  configurable: false\n});\n\nObject.defineProperty(ProgressEvent.prototype, \"lengthComputable\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"lengthComputable\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProgressEvent.prototype, \"loaded\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"loaded\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProgressEvent.prototype, \"total\", {\n  get() {\n    if (!this || !module.exports.is(this)) {\n      throw new TypeError(\"Illegal invocation\");\n    }\n\n    return this[impl][\"total\"];\n  },\n\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(ProgressEvent.prototype, Symbol.toStringTag, {\n  value: \"ProgressEvent\",\n  writable: false,\n  enumerable: false,\n  configurable: true\n});\n\nconst iface = {\n  // When an interface-module that implements this interface as a mixin is loaded, it will append its own `.is()`\n  // method into this array. It allows objects that directly implements *those* interfaces to be recognized as\n  // implementing this mixin interface.\n  _mixedIntoPredicates: [],\n  is(obj) {\n    if (obj) {\n      if (utils.hasOwn(obj, impl) && obj[impl] instanceof Impl.implementation) {\n        return true;\n      }\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(obj)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  isImpl(obj) {\n    if (obj) {\n      if (obj instanceof Impl.implementation) {\n        return true;\n      }\n\n      const wrapper = utils.wrapperForImpl(obj);\n      for (const isMixedInto of module.exports._mixedIntoPredicates) {\n        if (isMixedInto(wrapper)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  },\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (module.exports.is(obj)) {\n      return utils.implForWrapper(obj);\n    }\n    throw new TypeError(`${context} is not of type 'ProgressEvent'.`);\n  },\n\n  create(constructorArgs, privateData) {\n    let obj = Object.create(ProgressEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  createImpl(constructorArgs, privateData) {\n    let obj = Object.create(ProgressEvent.prototype);\n    obj = this.setup(obj, constructorArgs, privateData);\n    return utils.implForWrapper(obj);\n  },\n  _internalSetup(obj) {\n    Event._internalSetup(obj);\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n\n    privateData.wrapper = obj;\n\n    this._internalSetup(obj);\n    Object.defineProperty(obj, impl, {\n      value: new Impl.implementation(constructorArgs, privateData),\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n\n    obj[impl][utils.wrapperSymbol] = obj;\n    if (Impl.init) {\n      Impl.init(obj[impl], privateData);\n    }\n    return obj;\n  },\n  interface: ProgressEvent,\n  expose: {\n    Window: { ProgressEvent },\n    DedicatedWorker: { ProgressEvent },\n    SharedWorker: { ProgressEvent }\n  }\n}; // iface\nmodule.exports = iface;\n\nconst Impl = require(\"../events/ProgressEvent-impl.js\");\n"]},"metadata":{},"sourceType":"script"}
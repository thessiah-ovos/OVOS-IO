{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree;\n\nvar NODE_TYPE = require(\"../node-type\");\n\nvar NodeImpl = require(\"./Node-impl\").implementation;\n\nvar NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\n\nvar ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nvar DocumentFragmentImpl = /*#__PURE__*/function (_NodeImpl) {\n  _inherits(DocumentFragmentImpl, _NodeImpl);\n\n  var _super = _createSuper(DocumentFragmentImpl);\n\n  function DocumentFragmentImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, DocumentFragmentImpl);\n\n    _this = _super.call(this, args, privateData);\n    _this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n    return _this;\n  } // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n\n\n  _createClass(DocumentFragmentImpl, [{\n    key: \"getElementById\",\n    value: function getElementById(id) {\n      if (id === \"\") {\n        return null;\n      }\n\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.treeIterator(this)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var descendant = _step.value;\n\n          if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n            return descendant;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }]);\n\n  return DocumentFragmentImpl;\n}(NodeImpl);\n\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/DocumentFragment-impl.js"],"names":["require","mixin","domSymbolTree","NODE_TYPE","NodeImpl","implementation","NonElementParentNodeImpl","ParentNodeImpl","DocumentFragmentImpl","args","privateData","nodeType","DOCUMENT_FRAGMENT_NODE","id","treeIterator","descendant","ELEMENT_NODE","getAttributeNS","prototype","module","exports"],"mappings":"AAAA;;;;;;;;;;;;eACkBA,OAAO,CAAC,aAAD,C;IAAjBC,K,YAAAA,K;;gBACkBD,OAAO,CAAC,+BAAD,C;IAAzBE,a,aAAAA,a;;AACR,IAAMC,SAAS,GAAGH,OAAO,CAAC,cAAD,CAAzB;;AACA,IAAMI,QAAQ,GAAGJ,OAAO,CAAC,aAAD,CAAP,CAAuBK,cAAxC;;AACA,IAAMC,wBAAwB,GAAGN,OAAO,CAAC,6BAAD,CAAP,CAAuCK,cAAxE;;AACA,IAAME,cAAc,GAAGP,OAAO,CAAC,mBAAD,CAAP,CAA6BK,cAApD;;IAEMG,oB;;;;;AACJ,gCAAYC,IAAZ,EAAkBC,WAAlB,EAA+B;AAAA;;AAAA;;AAC7B,8BAAMD,IAAN,EAAYC,WAAZ;AAEA,UAAKC,QAAL,GAAgBR,SAAS,CAACS,sBAA1B;AAH6B;AAI9B,G,CAED;;;;;mCACeC,E,EAAI;AACjB,UAAIA,EAAE,KAAK,EAAX,EAAe;AACb,eAAO,IAAP;AACD;;AAHgB,iDAKQX,aAAa,CAACY,YAAd,CAA2B,IAA3B,CALR;AAAA;;AAAA;AAKjB,4DAA2D;AAAA,cAAhDC,UAAgD;;AACzD,cAAIA,UAAU,CAACJ,QAAX,KAAwBR,SAAS,CAACa,YAAlC,IAAkDD,UAAU,CAACE,cAAX,CAA0B,IAA1B,EAAgC,IAAhC,MAA0CJ,EAAhG,EAAoG;AAClG,mBAAOE,UAAP;AACD;AACF;AATgB;AAAA;AAAA;AAAA;AAAA;;AAWjB,aAAO,IAAP;AACD;;;;EApBgCX,Q;;AAuBnCH,KAAK,CAACO,oBAAoB,CAACU,SAAtB,EAAiCZ,wBAAwB,CAACY,SAA1D,CAAL;AACAjB,KAAK,CAACO,oBAAoB,CAACU,SAAtB,EAAiCX,cAAc,CAACW,SAAhD,CAAL;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACff,EAAAA,cAAc,EAAEG;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree } = require(\"../helpers/internal-constants\");\nconst NODE_TYPE = require(\"../node-type\");\nconst NodeImpl = require(\"./Node-impl\").implementation;\nconst NonElementParentNodeImpl = require(\"./NonElementParentNode-impl\").implementation;\nconst ParentNodeImpl = require(\"./ParentNode-impl\").implementation;\n\nclass DocumentFragmentImpl extends NodeImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this.nodeType = NODE_TYPE.DOCUMENT_FRAGMENT_NODE;\n  }\n\n  // This is implemented separately for Document (which has a _ids cache) and DocumentFragment (which does not).\n  getElementById(id) {\n    if (id === \"\") {\n      return null;\n    }\n\n    for (const descendant of domSymbolTree.treeIterator(this)) {\n      if (descendant.nodeType === NODE_TYPE.ELEMENT_NODE && descendant.getAttributeNS(null, \"id\") === id) {\n        return descendant;\n      }\n    }\n\n    return null;\n  }\n}\n\nmixin(DocumentFragmentImpl.prototype, NonElementParentNodeImpl.prototype);\nmixin(DocumentFragmentImpl.prototype, ParentNodeImpl.prototype);\n\nmodule.exports = {\n  implementation: DocumentFragmentImpl\n};\n"]},"metadata":{},"sourceType":"script"}
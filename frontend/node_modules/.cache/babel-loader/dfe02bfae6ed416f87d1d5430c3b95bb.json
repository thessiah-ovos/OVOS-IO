{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar whatwgURL = require(\"whatwg-url\");\n\nvar DOMException = require(\"domexception\");\n\nvar _require = require(\"../helpers/document-base-url\"),\n    documentBaseURL = _require.documentBaseURL,\n    parseURLToResultingURLRecord = _require.parseURLToResultingURLRecord;\n\nvar _require2 = require(\"./navigation\"),\n    navigate = _require2.navigate; // Not implemented: use of entry settings object's API base URL in href setter, assign, and replace. Instead we just\n// use the document base URL. The difference matters in the case of cross-frame calls.\n\n\nexports.implementation = /*#__PURE__*/function () {\n  function LocationImpl(args, privateData) {\n    _classCallCheck(this, LocationImpl);\n\n    this._relevantDocument = privateData.relevantDocument;\n    this.url = null;\n  }\n\n  _createClass(LocationImpl, [{\n    key: \"_locationObjectSetterNavigate\",\n    value: function _locationObjectSetterNavigate(url) {\n      // Not implemented: extra steps here to determine replacement flag.\n      return this._locationObjectNavigate(url);\n    }\n  }, {\n    key: \"_locationObjectNavigate\",\n    value: function _locationObjectNavigate(url) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$replacement = _ref.replacement,\n          replacement = _ref$replacement === void 0 ? false : _ref$replacement;\n\n      // Not implemented: the setup for calling navigate, which doesn't apply to our stub navigate anyway.\n      navigate(this._relevantDocument._defaultView, url, {\n        replacement: replacement,\n        exceptionsEnabled: true\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.href;\n    }\n  }, {\n    key: \"assign\",\n    value: function assign(url) {\n      // Should be entry settings object; oh well\n      var parsedURL = parseURLToResultingURLRecord(url, this._relevantDocument);\n\n      if (parsedURL === null) {\n        throw new DOMException(\"Could not resolve the given string \\\"\".concat(url, \"\\\" relative to the \") + \"base URL \\\"\".concat(this._relevantDocument.URL, \"\\\"\"), \"SyntaxError\");\n      }\n\n      this._locationObjectNavigate(parsedURL);\n    }\n  }, {\n    key: \"replace\",\n    value: function replace(url) {\n      // Should be entry settings object; oh well\n      var parsedURL = parseURLToResultingURLRecord(url, this._relevantDocument);\n\n      if (parsedURL === null) {\n        throw new DOMException(\"Could not resolve the given string \\\"\".concat(url, \"\\\" relative to the \") + \"base URL \\\"\".concat(this._relevantDocument.URL, \"\\\"\"), \"SyntaxError\");\n      }\n\n      this._locationObjectNavigate(parsedURL, {\n        replacement: true\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var flags = {\n        replace: true,\n        reloadTriggered: true,\n        exceptionsEnabled: true\n      };\n      navigate(this._relevantDocument._defaultView, this._url, flags);\n    }\n  }, {\n    key: \"_url\",\n    get: function get() {\n      return this._relevantDocument._URL;\n    }\n  }, {\n    key: \"href\",\n    get: function get() {\n      return whatwgURL.serializeURL(this._url);\n    },\n    set: function set(v) {\n      var newURL = whatwgURL.parseURL(v, {\n        baseURL: documentBaseURL(this._relevantDocument)\n      });\n\n      if (newURL === null) {\n        throw new TypeError(\"Could not parse \\\"\".concat(v, \"\\\" as a URL\"));\n      }\n\n      this._locationObjectSetterNavigate(newURL);\n    }\n  }, {\n    key: \"origin\",\n    get: function get() {\n      return whatwgURL.serializeURLOrigin(this._url);\n    }\n  }, {\n    key: \"protocol\",\n    get: function get() {\n      return this._url.scheme + \":\";\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n      var possibleFailure = whatwgURL.basicURLParse(v + \":\", {\n        url: copyURL,\n        stateOverride: \"scheme start\"\n      });\n\n      if (possibleFailure === null) {\n        throw new TypeError(\"Could not parse the URL after setting the procol to \\\"\".concat(v, \"\\\"\"));\n      }\n\n      if (copyURL.scheme !== \"http\" && copyURL.scheme !== \"https\") {\n        return;\n      }\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      var url = this._url;\n\n      if (url.host === null) {\n        return \"\";\n      }\n\n      if (url.port === null) {\n        return whatwgURL.serializeHost(url.host);\n      }\n\n      return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (copyURL.cannotBeABaseURL) {\n        return;\n      }\n\n      whatwgURL.basicURLParse(v, {\n        url: copyURL,\n        stateOverride: \"host\"\n      });\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"hostname\",\n    get: function get() {\n      if (this._url.host === null) {\n        return \"\";\n      }\n\n      return whatwgURL.serializeHost(this._url.host);\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (copyURL.cannotBeABaseURL) {\n        return;\n      }\n\n      whatwgURL.basicURLParse(v, {\n        url: copyURL,\n        stateOverride: \"hostname\"\n      });\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"port\",\n    get: function get() {\n      if (this._url.port === null) {\n        return \"\";\n      }\n\n      return whatwgURL.serializeInteger(this._url.port);\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (copyURL.host === null || copyURL.cannotBeABaseURL || copyURL.scheme === \"file\") {\n        return;\n      }\n\n      whatwgURL.basicURLParse(v, {\n        url: copyURL,\n        stateOverride: \"port\"\n      });\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"pathname\",\n    get: function get() {\n      var url = this._url;\n\n      if (url.cannotBeABaseURL) {\n        return url.path[0];\n      }\n\n      return \"/\" + url.path.join(\"/\");\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (copyURL.cannotBeABaseURL) {\n        return;\n      }\n\n      copyURL.path = [];\n      whatwgURL.basicURLParse(v, {\n        url: copyURL,\n        stateOverride: \"path start\"\n      });\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"search\",\n    get: function get() {\n      if (this._url.query === null || this._url.query === \"\") {\n        return \"\";\n      }\n\n      return \"?\" + this._url.query;\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (v === \"\") {\n        copyURL.query = null;\n      } else {\n        var input = v[0] === \"?\" ? v.substring(1) : v;\n        copyURL.query = \"\";\n        whatwgURL.basicURLParse(input, {\n          url: copyURL,\n          stateOverride: \"query\",\n          encodingOverride: this._relevantDocument.charset\n        });\n      }\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }, {\n    key: \"hash\",\n    get: function get() {\n      if (this._url.fragment === null || this._url.fragment === \"\") {\n        return \"\";\n      }\n\n      return \"#\" + this._url.fragment;\n    },\n    set: function set(v) {\n      var copyURL = Object.assign({}, this._url);\n\n      if (copyURL.scheme === \"javascript\") {\n        return;\n      }\n\n      if (v === \"\") {\n        copyURL.fragment = null;\n      } else {\n        var input = v[0] === \"#\" ? v.substring(1) : v;\n        copyURL.fragment = \"\";\n        whatwgURL.basicURLParse(input, {\n          url: copyURL,\n          stateOverride: \"fragment\"\n        });\n      }\n\n      this._locationObjectSetterNavigate(copyURL);\n    }\n  }]);\n\n  return LocationImpl;\n}();","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/window/Location-impl.js"],"names":["whatwgURL","require","DOMException","documentBaseURL","parseURLToResultingURLRecord","navigate","exports","implementation","args","privateData","_relevantDocument","relevantDocument","url","_locationObjectNavigate","replacement","_defaultView","exceptionsEnabled","href","parsedURL","URL","flags","replace","reloadTriggered","_url","_URL","serializeURL","v","newURL","parseURL","baseURL","TypeError","_locationObjectSetterNavigate","serializeURLOrigin","scheme","copyURL","Object","assign","possibleFailure","basicURLParse","stateOverride","host","port","serializeHost","serializeInteger","cannotBeABaseURL","path","join","query","input","substring","encodingOverride","charset","fragment"],"mappings":"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","sourcesContent":["\"use strict\";\nconst whatwgURL = require(\"whatwg-url\");\nconst DOMException = require(\"domexception\");\nconst { documentBaseURL, parseURLToResultingURLRecord } = require(\"../helpers/document-base-url\");\nconst { navigate } = require(\"./navigation\");\n\n// Not implemented: use of entry settings object's API base URL in href setter, assign, and replace. Instead we just\n// use the document base URL. The difference matters in the case of cross-frame calls.\n\nexports.implementation = class LocationImpl {\n  constructor(args, privateData) {\n    this._relevantDocument = privateData.relevantDocument;\n    this.url = null;\n  }\n\n  get _url() {\n    return this._relevantDocument._URL;\n  }\n\n  _locationObjectSetterNavigate(url) {\n    // Not implemented: extra steps here to determine replacement flag.\n\n    return this._locationObjectNavigate(url);\n  }\n\n  _locationObjectNavigate(url, { replacement = false } = {}) {\n    // Not implemented: the setup for calling navigate, which doesn't apply to our stub navigate anyway.\n\n    navigate(this._relevantDocument._defaultView, url, { replacement, exceptionsEnabled: true });\n  }\n\n  toString() {\n    return this.href;\n  }\n\n  get href() {\n    return whatwgURL.serializeURL(this._url);\n  }\n  set href(v) {\n    const newURL = whatwgURL.parseURL(v, { baseURL: documentBaseURL(this._relevantDocument) });\n    if (newURL === null) {\n      throw new TypeError(`Could not parse \"${v}\" as a URL`);\n    }\n\n    this._locationObjectSetterNavigate(newURL);\n  }\n\n  get origin() {\n    return whatwgURL.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n  set protocol(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    const possibleFailure = whatwgURL.basicURLParse(v + \":\", { url: copyURL, stateOverride: \"scheme start\" });\n    if (possibleFailure === null) {\n      throw new TypeError(`Could not parse the URL after setting the procol to \"${v}\"`);\n    }\n\n    if (copyURL.scheme !== \"http\" && copyURL.scheme !== \"https\") {\n      return;\n    }\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n    if (url.port === null) {\n      return whatwgURL.serializeHost(url.host);\n    }\n\n    return whatwgURL.serializeHost(url.host) + \":\" + whatwgURL.serializeInteger(url.port);\n  }\n  set host(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (copyURL.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url: copyURL, stateOverride: \"host\" });\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeHost(this._url.host);\n  }\n  set hostname(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (copyURL.cannotBeABaseURL) {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url: copyURL, stateOverride: \"hostname\" });\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return whatwgURL.serializeInteger(this._url.port);\n  }\n  set port(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (copyURL.host === null || copyURL.cannotBeABaseURL || copyURL.scheme === \"file\") {\n      return;\n    }\n\n    whatwgURL.basicURLParse(v, { url: copyURL, stateOverride: \"port\" });\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get pathname() {\n    const url = this._url;\n\n    if (url.cannotBeABaseURL) {\n      return url.path[0];\n    }\n\n    return \"/\" + url.path.join(\"/\");\n  }\n  set pathname(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (copyURL.cannotBeABaseURL) {\n      return;\n    }\n\n    copyURL.path = [];\n    whatwgURL.basicURLParse(v, { url: copyURL, stateOverride: \"path start\" });\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n  set search(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (v === \"\") {\n      copyURL.query = null;\n    } else {\n      const input = v[0] === \"?\" ? v.substring(1) : v;\n      copyURL.query = \"\";\n      whatwgURL.basicURLParse(input, {\n        url: copyURL,\n        stateOverride: \"query\",\n        encodingOverride: this._relevantDocument.charset\n      });\n    }\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n  set hash(v) {\n    const copyURL = Object.assign({}, this._url);\n\n    if (copyURL.scheme === \"javascript\") {\n      return;\n    }\n\n    if (v === \"\") {\n      copyURL.fragment = null;\n    } else {\n      const input = v[0] === \"#\" ? v.substring(1) : v;\n      copyURL.fragment = \"\";\n      whatwgURL.basicURLParse(input, { url: copyURL, stateOverride: \"fragment\" });\n    }\n\n    this._locationObjectSetterNavigate(copyURL);\n  }\n\n  assign(url) {\n    // Should be entry settings object; oh well\n    const parsedURL = parseURLToResultingURLRecord(url, this._relevantDocument);\n\n    if (parsedURL === null) {\n      throw new DOMException(`Could not resolve the given string \"${url}\" relative to the ` +\n        `base URL \"${this._relevantDocument.URL}\"`, \"SyntaxError\");\n    }\n\n    this._locationObjectNavigate(parsedURL);\n  }\n\n  replace(url) {\n    // Should be entry settings object; oh well\n    const parsedURL = parseURLToResultingURLRecord(url, this._relevantDocument);\n\n    if (parsedURL === null) {\n      throw new DOMException(`Could not resolve the given string \"${url}\" relative to the ` +\n        `base URL \"${this._relevantDocument.URL}\"`, \"SyntaxError\");\n    }\n\n    this._locationObjectNavigate(parsedURL, { replacement: true });\n  }\n\n  reload() {\n    const flags = { replace: true, reloadTriggered: true, exceptionsEnabled: true };\n    navigate(this._relevantDocument._defaultView, this._url, flags);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
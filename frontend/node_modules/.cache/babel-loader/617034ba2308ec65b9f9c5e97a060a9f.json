{"ast":null,"code":"import _slicedToArray from\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import playerContext from'./playerContext';import playerReducer from'./playerReducer';import{songsArr}from'./songs';import{SET_CURRENT_SONG,TOGGLE_RANDOM,TOGGLE_REPEAT,TOGGLE_PLAYING}from'./types';var PlayerState=function PlayerState(props){var initialState={currentSong:0,songs:songsArr,repeat:false,random:false,playing:false,audio:null};var _useReducer=useReducer(playerReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Set playing state\nvar togglePlaying=function togglePlaying(){return dispatch({type:TOGGLE_PLAYING,data:state.playing?false:true});};// Set current song\nvar SetCurrent=function SetCurrent(id){return dispatch({type:SET_CURRENT_SONG,data:id});};// Prev song\nvar prevSong=function prevSong(){if(state.currentSong===0){SetCurrent(state.songs.length-1);}else{SetCurrent(state.currentSong-1);}};// Next song\nvar nextSong=function nextSong(){if(state.currentSong===state.songs.length-1){SetCurrent(0);}else{SetCurrent(state.currentSong+1);}};// Repeat and Random\nvar toggleRepeat=function toggleRepeat(id){return dispatch({type:TOGGLE_REPEAT,data:state.repeat?false:true});};var toggleRandom=function toggleRandom(id){return dispatch({type:TOGGLE_RANDOM,data:state.random?false:true});};// End of Song\nvar handleEnd=function handleEnd(){// Check for random and repeat options\nif(state.random){return dispatch({type:SET_CURRENT_SONG,data:~~(Math.random()*state.songs.length)});}else{if(state.repeat){nextSong();}else if(state.currentSong===state.songs.length-1){return;}else{nextSong();}}};return/*#__PURE__*/React.createElement(playerContext.Provider,{value:{currentSong:state.currentSong,songs:state.songs,repeat:state.repeat,random:state.random,playing:state.playing,audio:state.audio,nextSong:nextSong,prevSong:prevSong,SetCurrent:SetCurrent,toggleRandom:toggleRandom,toggleRepeat:toggleRepeat,togglePlaying:togglePlaying,handleEnd:handleEnd}},props.children);};export default PlayerState;","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/src/contexts/PlayerState.js"],"names":["React","useReducer","playerContext","playerReducer","songsArr","SET_CURRENT_SONG","TOGGLE_RANDOM","TOGGLE_REPEAT","TOGGLE_PLAYING","PlayerState","props","initialState","currentSong","songs","repeat","random","playing","audio","state","dispatch","togglePlaying","type","data","SetCurrent","id","prevSong","length","nextSong","toggleRepeat","toggleRandom","handleEnd","Math","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\r\nimport playerContext from './playerContext';\r\nimport playerReducer from './playerReducer';\r\nimport { songsArr } from './songs';\r\n\r\nimport {\r\n  SET_CURRENT_SONG,\r\n  TOGGLE_RANDOM,\r\n  TOGGLE_REPEAT,\r\n  TOGGLE_PLAYING\r\n} from './types'\r\n\r\nconst PlayerState = props => {\r\n  const initialState = {\r\n    currentSong: 0,\r\n    songs: songsArr,\r\n    repeat: false,\r\n    random: false,\r\n    playing: false,\r\n    audio: null\r\n  }\r\n  const [state, dispatch] = useReducer(playerReducer, initialState);\r\n\r\n  // Set playing state\r\n  const togglePlaying = () => dispatch({ type: TOGGLE_PLAYING, data: state.playing ? false : true })\r\n  // Set current song\r\n  const SetCurrent = id => dispatch({ type: SET_CURRENT_SONG, data: id })\r\n\r\n  // Prev song\r\n  const prevSong = () => {\r\n    if (state.currentSong === 0) {\r\n      SetCurrent(state.songs.length - 1)\r\n    } else {\r\n      SetCurrent(state.currentSong - 1)\r\n    }\r\n  }\r\n  // Next song\r\n  const nextSong = () => {\r\n    if (state.currentSong === state.songs.length - 1) {\r\n      SetCurrent(0)\r\n    } else {\r\n      SetCurrent(state.currentSong + 1)\r\n    }\r\n  }\r\n\r\n  // Repeat and Random\r\n  const toggleRepeat = (id) => dispatch({ type: TOGGLE_REPEAT, data: state.repeat ? false : true })\r\n  const toggleRandom = (id) => dispatch({ type: TOGGLE_RANDOM, data: state.random ? false : true })\r\n\r\n\r\n  // End of Song\r\n  const handleEnd = () => {\r\n    // Check for random and repeat options\r\n    if (state.random) {\r\n      return dispatch({ type: SET_CURRENT_SONG, data: ~~(Math.random() * state.songs.length) })\r\n    } else {\r\n      if (state.repeat) {\r\n        nextSong()\r\n      } else if ((state.currentSong === state.songs.length - 1)) {\r\n        return\r\n      } else {\r\n        nextSong();\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return <playerContext.Provider\r\n    value={{\r\n      currentSong: state.currentSong,\r\n      songs: state.songs,\r\n      repeat: state.repeat,\r\n      random: state.random,\r\n      playing: state.playing,\r\n      audio: state.audio,\r\n      nextSong,\r\n      prevSong,\r\n      SetCurrent,\r\n      toggleRandom,\r\n      toggleRepeat,\r\n      togglePlaying,\r\n      handleEnd\r\n    }}>\r\n\r\n    {props.children}\r\n\r\n  </playerContext.Provider>\r\n}\r\n\r\nexport default PlayerState;"]},"metadata":{},"sourceType":"module"}
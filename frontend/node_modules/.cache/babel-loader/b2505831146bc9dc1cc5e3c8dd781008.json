{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar resourceLoader = require(\"../../browser/resource-loader\");\n\nvar _require = require(\"../../utils\"),\n    Canvas = _require.Canvas,\n    reflectURLAttribute = _require.reflectURLAttribute;\n\nvar HTMLImageElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLImageElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLImageElementImpl);\n\n  function HTMLImageElementImpl() {\n    _classCallCheck(this, HTMLImageElementImpl);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(HTMLImageElementImpl, [{\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldVal) {\n      var _this = this;\n\n      if (name === \"src\" && value !== oldVal) {\n        var document = this._ownerDocument;\n\n        if (Canvas && document.implementation._hasFeature(\"FetchExternalResources\", \"img\")) {\n          var error;\n\n          if (!this._image) {\n            this._image = new Canvas.Image(); // Install an error handler that just remembers the error. It is then\n            // thrown in the callback of resourceLoader.load() below.\n\n            this._image.onerror = function (err) {\n              error = err;\n            };\n          }\n\n          this._currentSrc = null;\n\n          if (this.hasAttribute(\"src\")) {\n            resourceLoader.load(this, this.src, {}, function (data, url, response) {\n              if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n                throw new Error(\"Status code: \" + response.statusCode);\n              }\n\n              error = null;\n              _this._image.source = data;\n\n              if (error) {\n                throw new Error(error);\n              }\n\n              _this._currentSrc = value;\n            });\n          } else {\n            this._image.source = undefined;\n          }\n        }\n      }\n\n      _get(_getPrototypeOf(HTMLImageElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldVal);\n    }\n  }, {\n    key: \"_accept\",\n    get: function get() {\n      return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return reflectURLAttribute(this, \"src\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"src\", value);\n    }\n  }, {\n    key: \"srcset\",\n    get: function get() {\n      return conversions.USVString(this.getAttribute(\"srcset\"));\n    },\n    set: function set(value) {\n      this.setAttribute(\"srcset\", value);\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      // Just like on browsers, if no width / height is defined, we fall back on the\n      // dimensions of the internal image data.\n      return this.hasAttribute(\"height\") ? conversions[\"unsigned long\"](this.getAttribute(\"height\")) : this.naturalHeight;\n    },\n    set: function set(V) {\n      this.setAttribute(\"height\", String(V));\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.hasAttribute(\"width\") ? conversions[\"unsigned long\"](this.getAttribute(\"width\")) : this.naturalWidth;\n    },\n    set: function set(V) {\n      this.setAttribute(\"width\", String(V));\n    }\n  }, {\n    key: \"naturalHeight\",\n    get: function get() {\n      return this._image ? this._image.height : 0;\n    }\n  }, {\n    key: \"naturalWidth\",\n    get: function get() {\n      return this._image ? this._image.width : 0;\n    }\n  }, {\n    key: \"complete\",\n    get: function get() {\n      return Boolean(this._image && this._image.complete);\n    }\n  }, {\n    key: \"currentSrc\",\n    get: function get() {\n      return this._currentSrc || \"\";\n    }\n  }, {\n    key: \"lowsrc\",\n    get: function get() {\n      return reflectURLAttribute(this, \"lowsrc\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"lowsrc\", value);\n    }\n  }, {\n    key: \"longDesc\",\n    get: function get() {\n      return reflectURLAttribute(this, \"longdesc\");\n    },\n    set: function set(value) {\n      this.setAttribute(\"longdesc\", value);\n    }\n  }]);\n\n  return HTMLImageElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLImageElement-impl.js"],"names":["conversions","require","HTMLElementImpl","implementation","resourceLoader","Canvas","reflectURLAttribute","HTMLImageElementImpl","name","value","oldVal","document","_ownerDocument","_hasFeature","error","_image","Image","onerror","err","_currentSrc","hasAttribute","load","src","data","url","response","statusCode","undefined","Error","source","setAttribute","USVString","getAttribute","naturalHeight","V","String","naturalWidth","height","width","Boolean","complete","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AACA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,IAAMC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAtD;;AACA,IAAMC,cAAc,GAAGH,OAAO,CAAC,+BAAD,CAA9B;;eACwCA,OAAO,CAAC,aAAD,C;IAAvCI,M,YAAAA,M;IAAQC,mB,YAAAA,mB;;IAEVC,oB;;;;;;;;;;;;;kCACUC,I,EAAMC,K,EAAOC,M,EAAQ;AAAA;;AACjC,UAAIF,IAAI,KAAK,KAAT,IAAkBC,KAAK,KAAKC,MAAhC,EAAwC;AACtC,YAAMC,QAAQ,GAAG,KAAKC,cAAtB;;AACA,YAAIP,MAAM,IAAIM,QAAQ,CAACR,cAAT,CAAwBU,WAAxB,CAAoC,wBAApC,EAA8D,KAA9D,CAAd,EAAoF;AAClF,cAAIC,KAAJ;;AACA,cAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,iBAAKA,MAAL,GAAc,IAAIV,MAAM,CAACW,KAAX,EAAd,CADgB,CAEhB;AACA;;AACA,iBAAKD,MAAL,CAAYE,OAAZ,GAAsB,UAAUC,GAAV,EAAe;AACnCJ,cAAAA,KAAK,GAAGI,GAAR;AACD,aAFD;AAGD;;AACD,eAAKC,WAAL,GAAmB,IAAnB;;AACA,cAAI,KAAKC,YAAL,CAAkB,KAAlB,CAAJ,EAA8B;AAC5BhB,YAAAA,cAAc,CAACiB,IAAf,CAAoB,IAApB,EAA0B,KAAKC,GAA/B,EAAoC,EAApC,EAAwC,UAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAyB;AAC/D,kBAAIA,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwBC,SAApC,IAAiDF,QAAQ,CAACC,UAAT,KAAwB,GAA7E,EAAkF;AAChF,sBAAM,IAAIE,KAAJ,CAAU,kBAAkBH,QAAQ,CAACC,UAArC,CAAN;AACD;;AACDZ,cAAAA,KAAK,GAAG,IAAR;AACA,cAAA,KAAI,CAACC,MAAL,CAAYc,MAAZ,GAAqBN,IAArB;;AACA,kBAAIT,KAAJ,EAAW;AACT,sBAAM,IAAIc,KAAJ,CAAUd,KAAV,CAAN;AACD;;AACD,cAAA,KAAI,CAACK,WAAL,GAAmBV,KAAnB;AACD,aAVD;AAWD,WAZD,MAYO;AACL,iBAAKM,MAAL,CAAYc,MAAZ,GAAqBF,SAArB;AACD;AACF;AACF;;AAED,8FAAoBnB,IAApB,EAA0BC,KAA1B,EAAiCC,MAAjC;AACD;;;wBAEa;AACZ,aAAO,mCAAP;AACD;;;wBAES;AACR,aAAOJ,mBAAmB,CAAC,IAAD,EAAO,KAAP,CAA1B;AACD,K;sBAEOG,K,EAAO;AACb,WAAKqB,YAAL,CAAkB,KAAlB,EAAyBrB,KAAzB;AACD;;;wBAEY;AACX,aAAOT,WAAW,CAAC+B,SAAZ,CAAsB,KAAKC,YAAL,CAAkB,QAAlB,CAAtB,CAAP;AACD,K;sBAEUvB,K,EAAO;AAChB,WAAKqB,YAAL,CAAkB,QAAlB,EAA4BrB,KAA5B;AACD;;;wBAEY;AACX;AACA;AACA,aAAO,KAAKW,YAAL,CAAkB,QAAlB,IACApB,WAAW,CAAC,eAAD,CAAX,CAA6B,KAAKgC,YAAL,CAAkB,QAAlB,CAA7B,CADA,GAEA,KAAKC,aAFZ;AAGD,K;sBAEUC,C,EAAG;AACZ,WAAKJ,YAAL,CAAkB,QAAlB,EAA4BK,MAAM,CAACD,CAAD,CAAlC;AACD;;;wBAEW;AACV,aAAO,KAAKd,YAAL,CAAkB,OAAlB,IACApB,WAAW,CAAC,eAAD,CAAX,CAA6B,KAAKgC,YAAL,CAAkB,OAAlB,CAA7B,CADA,GAEA,KAAKI,YAFZ;AAGD,K;sBAESF,C,EAAG;AACX,WAAKJ,YAAL,CAAkB,OAAlB,EAA2BK,MAAM,CAACD,CAAD,CAAjC;AACD;;;wBAEmB;AAClB,aAAO,KAAKnB,MAAL,GAAc,KAAKA,MAAL,CAAYsB,MAA1B,GAAmC,CAA1C;AACD;;;wBAEkB;AACjB,aAAO,KAAKtB,MAAL,GAAc,KAAKA,MAAL,CAAYuB,KAA1B,GAAkC,CAAzC;AACD;;;wBAEc;AACb,aAAOC,OAAO,CAAC,KAAKxB,MAAL,IAAe,KAAKA,MAAL,CAAYyB,QAA5B,CAAd;AACD;;;wBAEgB;AACf,aAAO,KAAKrB,WAAL,IAAoB,EAA3B;AACD;;;wBAEY;AACX,aAAOb,mBAAmB,CAAC,IAAD,EAAO,QAAP,CAA1B;AACD,K;sBAEUG,K,EAAO;AAChB,WAAKqB,YAAL,CAAkB,QAAlB,EAA4BrB,KAA5B;AACD;;;wBAEc;AACb,aAAOH,mBAAmB,CAAC,IAAD,EAAO,UAAP,CAA1B;AACD,K;sBAEYG,K,EAAO;AAClB,WAAKqB,YAAL,CAAkB,UAAlB,EAA8BrB,KAA9B;AACD;;;;EA5GgCP,e;;AA+GnCuC,MAAM,CAACC,OAAP,GAAiB;AACfvC,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\nconst conversions = require(\"webidl-conversions\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst resourceLoader = require(\"../../browser/resource-loader\");\nconst { Canvas, reflectURLAttribute } = require(\"../../utils\");\n\nclass HTMLImageElementImpl extends HTMLElementImpl {\n  _attrModified(name, value, oldVal) {\n    if (name === \"src\" && value !== oldVal) {\n      const document = this._ownerDocument;\n      if (Canvas && document.implementation._hasFeature(\"FetchExternalResources\", \"img\")) {\n        let error;\n        if (!this._image) {\n          this._image = new Canvas.Image();\n          // Install an error handler that just remembers the error. It is then\n          // thrown in the callback of resourceLoader.load() below.\n          this._image.onerror = function (err) {\n            error = err;\n          };\n        }\n        this._currentSrc = null;\n        if (this.hasAttribute(\"src\")) {\n          resourceLoader.load(this, this.src, {}, (data, url, response) => {\n            if (response && response.statusCode !== undefined && response.statusCode !== 200) {\n              throw new Error(\"Status code: \" + response.statusCode);\n            }\n            error = null;\n            this._image.source = data;\n            if (error) {\n              throw new Error(error);\n            }\n            this._currentSrc = value;\n          });\n        } else {\n          this._image.source = undefined;\n        }\n      }\n    }\n\n    super._attrModified(name, value, oldVal);\n  }\n\n  get _accept() {\n    return \"image/png,image/*;q=0.8,*/*;q=0.5\";\n  }\n\n  get src() {\n    return reflectURLAttribute(this, \"src\");\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  get srcset() {\n    return conversions.USVString(this.getAttribute(\"srcset\"));\n  }\n\n  set srcset(value) {\n    this.setAttribute(\"srcset\", value);\n  }\n\n  get height() {\n    // Just like on browsers, if no width / height is defined, we fall back on the\n    // dimensions of the internal image data.\n    return this.hasAttribute(\"height\") ?\n           conversions[\"unsigned long\"](this.getAttribute(\"height\")) :\n           this.naturalHeight;\n  }\n\n  set height(V) {\n    this.setAttribute(\"height\", String(V));\n  }\n\n  get width() {\n    return this.hasAttribute(\"width\") ?\n           conversions[\"unsigned long\"](this.getAttribute(\"width\")) :\n           this.naturalWidth;\n  }\n\n  set width(V) {\n    this.setAttribute(\"width\", String(V));\n  }\n\n  get naturalHeight() {\n    return this._image ? this._image.height : 0;\n  }\n\n  get naturalWidth() {\n    return this._image ? this._image.width : 0;\n  }\n\n  get complete() {\n    return Boolean(this._image && this._image.complete);\n  }\n\n  get currentSrc() {\n    return this._currentSrc || \"\";\n  }\n\n  get lowsrc() {\n    return reflectURLAttribute(this, \"lowsrc\");\n  }\n\n  set lowsrc(value) {\n    this.setAttribute(\"lowsrc\", value);\n  }\n\n  get longDesc() {\n    return reflectURLAttribute(this, \"longdesc\");\n  }\n\n  set longDesc(value) {\n    this.setAttribute(\"longdesc\", value);\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLImageElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar ValidityState = require(\"../generated/ValidityState\");\n\nvar Event = require(\"../generated/Event\");\n\nvar _require = require(\"../helpers/form-controls\"),\n    isDisabled = _require.isDisabled;\n\nvar _require2 = require(\"../helpers/traversal\"),\n    closest = _require2.closest;\n\nexports.implementation = /*#__PURE__*/function () {\n  function DefaultConstraintValidationImpl() {\n    _classCallCheck(this, DefaultConstraintValidationImpl);\n  }\n\n  _createClass(DefaultConstraintValidationImpl, [{\n    key: \"checkValidity\",\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n    value: function checkValidity() {\n      if (!this._isCandidateForConstraintValidation()) {\n        return true;\n      }\n\n      if (this._satisfiesConstraints()) {\n        return true;\n      }\n\n      this.dispatchEvent(Event.createImpl([\"invalid\", {\n        cancelable: true\n      }]));\n      return false;\n    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n\n  }, {\n    key: \"setCustomValidity\",\n    value: function setCustomValidity(message) {\n      this._customValidityErrorMessage = message;\n    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n    // Since jsdom has no user interaction, it's the same as #checkValidity\n\n  }, {\n    key: \"reportValidity\",\n    value: function reportValidity() {\n      return this.checkValidity();\n    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n\n  }, {\n    key: \"_isCandidateForConstraintValidation\",\n    value: function _isCandidateForConstraintValidation() {\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n      return !isDisabled(this) && // If an element has a datalist element ancestor,\n      // it is barred from constraint validation.\n      closest(this, \"datalist\") === null && !this._barredFromConstraintValidationSpecialization();\n    }\n  }, {\n    key: \"_isBarredFromConstraintValidation\",\n    value: function _isBarredFromConstraintValidation() {\n      return !this._isCandidateForConstraintValidation();\n    }\n  }, {\n    key: \"_satisfiesConstraints\",\n    value: function _satisfiesConstraints() {\n      return this.validity.valid;\n    }\n  }, {\n    key: \"willValidate\",\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n    get: function get() {\n      return this._isCandidateForConstraintValidation();\n    }\n  }, {\n    key: \"validity\",\n    get: function get() {\n      if (!this._validity) {\n        this._validity = ValidityState.createImpl(this);\n      }\n\n      return this._validity;\n    }\n  }, {\n    key: \"validationMessage\",\n    get: function get() {\n      var validity = this.validity;\n\n      if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n        return \"\";\n      }\n\n      var isSufferingFromCustomError = validity.customError;\n\n      if (isSufferingFromCustomError) {\n        return this._customValidityErrorMessage;\n      }\n\n      return \"Constraints not satisfied\";\n    }\n  }]);\n\n  return DefaultConstraintValidationImpl;\n}();","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/constraint-validation/DefaultConstraintValidation-impl.js"],"names":["ValidityState","require","Event","isDisabled","closest","exports","implementation","_isCandidateForConstraintValidation","_satisfiesConstraints","dispatchEvent","createImpl","cancelable","message","_customValidityErrorMessage","checkValidity","_barredFromConstraintValidationSpecialization","validity","valid","_validity","isSufferingFromCustomError","customError"],"mappings":"AAAA;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,4BAAD,CAA7B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,oBAAD,CAArB;;eACuBA,OAAO,CAAC,0BAAD,C;IAAtBE,U,YAAAA,U;;gBACYF,OAAO,CAAC,sBAAD,C;IAAnBG,O,aAAAA,O;;AAERC,OAAO,CAACC,cAAR;AAAA;AAAA;AAAA;;AAAA;AAAA;AAaE;AAbF,oCAckB;AACd,UAAI,CAAC,KAAKC,mCAAL,EAAL,EAAiD;AAC/C,eAAO,IAAP;AACD;;AACD,UAAI,KAAKC,qBAAL,EAAJ,EAAkC;AAChC,eAAO,IAAP;AACD;;AACD,WAAKC,aAAL,CAAmBP,KAAK,CAACQ,UAAN,CAAiB,CAAC,SAAD,EAAY;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAZ,CAAjB,CAAnB;AACA,aAAO,KAAP;AACD,KAvBH,CAyBE;;AAzBF;AAAA;AAAA,sCA0BoBC,OA1BpB,EA0B6B;AACzB,WAAKC,2BAAL,GAAmCD,OAAnC;AACD,KA5BH,CA8BE;AACA;;AA/BF;AAAA;AAAA,qCAgCmB;AACf,aAAO,KAAKE,aAAL,EAAP;AACD,KAlCH,CAoCE;;AApCF;AAAA;AAAA,0DAiDwC;AACpC;AACA,aAAO,CAACX,UAAU,CAAC,IAAD,CAAX,IACL;AACA;AACAC,MAAAA,OAAO,CAAC,IAAD,EAAO,UAAP,CAAP,KAA8B,IAHzB,IAIL,CAAC,KAAKW,6CAAL,EAJH;AAKD;AAxDH;AAAA;AAAA,wDA0DsC;AAClC,aAAO,CAAC,KAAKR,mCAAL,EAAR;AACD;AA5DH;AAAA;AAAA,4CA8D0B;AACtB,aAAO,KAAKS,QAAL,CAAcC,KAArB;AACD;AAhEH;AAAA;AACE;AADF,wBAEqB;AACjB,aAAO,KAAKV,mCAAL,EAAP;AACD;AAJH;AAAA;AAAA,wBAMiB;AACb,UAAI,CAAC,KAAKW,SAAV,EAAqB;AACnB,aAAKA,SAAL,GAAiBlB,aAAa,CAACU,UAAd,CAAyB,IAAzB,CAAjB;AACD;;AACD,aAAO,KAAKQ,SAAZ;AACD;AAXH;AAAA;AAAA,wBAqC0B;AAAA,UACdF,QADc,GACD,IADC,CACdA,QADc;;AAEtB,UAAI,CAAC,KAAKT,mCAAL,EAAD,IAA+C,KAAKC,qBAAL,EAAnD,EAAiF;AAC/E,eAAO,EAAP;AACD;;AACD,UAAMW,0BAA0B,GAAGH,QAAQ,CAACI,WAA5C;;AACA,UAAID,0BAAJ,EAAgC;AAC9B,eAAO,KAAKN,2BAAZ;AACD;;AACD,aAAO,2BAAP;AACD;AA/CH;;AAAA;AAAA","sourcesContent":["\"use strict\";\n\nconst ValidityState = require(\"../generated/ValidityState\");\nconst Event = require(\"../generated/Event\");\nconst { isDisabled } = require(\"../helpers/form-controls\");\nconst { closest } = require(\"../helpers/traversal\");\n\nexports.implementation = class DefaultConstraintValidationImpl {\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate\n  get willValidate() {\n    return this._isCandidateForConstraintValidation();\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this);\n    }\n    return this._validity;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity\n  checkValidity() {\n    if (!this._isCandidateForConstraintValidation()) {\n      return true;\n    }\n    if (this._satisfiesConstraints()) {\n      return true;\n    }\n    this.dispatchEvent(Event.createImpl([\"invalid\", { cancelable: true }]));\n    return false;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity\n  setCustomValidity(message) {\n    this._customValidityErrorMessage = message;\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity\n  // Since jsdom has no user interaction, it's the same as #checkValidity\n  reportValidity() {\n    return this.checkValidity();\n  }\n\n  // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage\n  get validationMessage() {\n    const { validity } = this;\n    if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {\n      return \"\";\n    }\n    const isSufferingFromCustomError = validity.customError;\n    if (isSufferingFromCustomError) {\n      return this._customValidityErrorMessage;\n    }\n    return \"Constraints not satisfied\";\n  }\n\n  _isCandidateForConstraintValidation() {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return !isDisabled(this) &&\n      // If an element has a datalist element ancestor,\n      // it is barred from constraint validation.\n      closest(this, \"datalist\") === null &&\n      !this._barredFromConstraintValidationSpecialization();\n  }\n\n  _isBarredFromConstraintValidation() {\n    return !this._isCandidateForConstraintValidation();\n  }\n\n  _satisfiesConstraints() {\n    return this.validity.valid;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar stableSortBy = require(\"lodash.sortby\");\n\nvar urlencoded = require(\"./urlencoded\");\n\nexports.implementation = /*#__PURE__*/function () {\n  function URLSearchParamsImpl(constructorArgs, _ref) {\n    var _ref$doNotStripQMark = _ref.doNotStripQMark,\n        doNotStripQMark = _ref$doNotStripQMark === void 0 ? false : _ref$doNotStripQMark;\n\n    _classCallCheck(this, URLSearchParamsImpl);\n\n    var init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      var _iterator = _createForOfIteratorHelper(init),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pair = _step.value;\n\n          if (pair.length !== 2) {\n            throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" + \"contain exactly two elements.\");\n          }\n\n          this._list.push([pair[0], pair[1]]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (var _i = 0, _Object$keys = Object.keys(init); _i < _Object$keys.length; _i++) {\n        var name = _Object$keys[_i];\n        var value = init[name];\n\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencoded(init);\n    }\n  }\n\n  _createClass(URLSearchParamsImpl, [{\n    key: \"_updateSteps\",\n    value: function _updateSteps() {\n      if (this._url !== null) {\n        var query = urlencoded.serializeUrlencoded(this._list);\n\n        if (query === \"\") {\n          query = null;\n        }\n\n        this._url._url.query = query;\n      }\n    }\n  }, {\n    key: \"append\",\n    value: function append(name, value) {\n      this._list.push([name, value]);\n\n      this._updateSteps();\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(name) {\n      var i = 0;\n\n      while (i < this._list.length) {\n        if (this._list[i][0] === name) {\n          this._list.splice(i, 1);\n        } else {\n          i++;\n        }\n      }\n\n      this._updateSteps();\n    }\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _iterator2 = _createForOfIteratorHelper(this._list),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var tuple = _step2.value;\n\n          if (tuple[0] === name) {\n            return tuple[1];\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll(name) {\n      var output = [];\n\n      var _iterator3 = _createForOfIteratorHelper(this._list),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var tuple = _step3.value;\n\n          if (tuple[0] === name) {\n            output.push(tuple[1]);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n\n      return output;\n    }\n  }, {\n    key: \"has\",\n    value: function has(name) {\n      var _iterator4 = _createForOfIteratorHelper(this._list),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var tuple = _step4.value;\n\n          if (tuple[0] === name) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var found = false;\n      var i = 0;\n\n      while (i < this._list.length) {\n        if (this._list[i][0] === name) {\n          if (found) {\n            this._list.splice(i, 1);\n          } else {\n            found = true;\n            this._list[i][1] = value;\n            i++;\n          }\n        } else {\n          i++;\n        }\n      }\n\n      if (!found) {\n        this._list.push([name, value]);\n      }\n\n      this._updateSteps();\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      this._list = stableSortBy(this._list, [0]);\n\n      this._updateSteps();\n    }\n  }, {\n    key: Symbol.iterator,\n    value: function value() {\n      return this._list[Symbol.iterator]();\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return urlencoded.serializeUrlencoded(this._list);\n    }\n  }]);\n\n  return URLSearchParamsImpl;\n}();","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/whatwg-url/lib/URLSearchParams-impl.js"],"names":["stableSortBy","require","urlencoded","exports","implementation","constructorArgs","doNotStripQMark","init","_list","_url","slice","Array","isArray","pair","length","TypeError","push","Object","getPrototypeOf","keys","name","value","parseUrlencoded","query","serializeUrlencoded","_updateSteps","i","splice","tuple","output","found","Symbol","iterator"],"mappings":"AAAA;;;;;;;;AACA,IAAMA,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA5B;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,cAAD,CAA1B;;AAEAE,OAAO,CAACC,cAAR;AACE,+BAAYC,eAAZ,QAA0D;AAAA,oCAA3BC,eAA2B;AAAA,QAA3BA,eAA2B,qCAAT,KAAS;;AAAA;;AACxD,QAAIC,IAAI,GAAGF,eAAe,CAAC,CAAD,CAA1B;AACA,SAAKG,KAAL,GAAa,EAAb;AACA,SAAKC,IAAL,GAAY,IAAZ;;AAEA,QAAI,CAACH,eAAD,IAAoB,OAAOC,IAAP,KAAgB,QAApC,IAAgDA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhE,EAAqE;AACnEA,MAAAA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAW,CAAX,CAAP;AACD;;AAED,QAAIC,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAJ,EAAyB;AAAA,iDACJA,IADI;AAAA;;AAAA;AACvB,4DAAyB;AAAA,cAAdM,IAAc;;AACvB,cAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,kBAAM,IAAIC,SAAJ,CAAc,oFACA,+BADd,CAAN;AAED;;AACD,eAAKP,KAAL,CAAWQ,IAAX,CAAgB,CAACH,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAhB;AACD;AAPsB;AAAA;AAAA;AAAA;AAAA;AAQxB,KARD,MAQO,IAAI,OAAON,IAAP,KAAgB,QAAhB,IAA4BU,MAAM,CAACC,cAAP,CAAsBX,IAAtB,MAAgC,IAAhE,EAAsE;AAC3E,sCAAmBU,MAAM,CAACE,IAAP,CAAYZ,IAAZ,CAAnB,kCAAsC;AAAjC,YAAMa,IAAI,mBAAV;AACH,YAAMC,KAAK,GAAGd,IAAI,CAACa,IAAD,CAAlB;;AACA,aAAKZ,KAAL,CAAWQ,IAAX,CAAgB,CAACI,IAAD,EAAOC,KAAP,CAAhB;AACD;AACF,KALM,MAKA;AACL,WAAKb,KAAL,GAAaN,UAAU,CAACoB,eAAX,CAA2Bf,IAA3B,CAAb;AACD;AACF;;AA1BH;AAAA;AAAA,mCA4BiB;AACb,UAAI,KAAKE,IAAL,KAAc,IAAlB,EAAwB;AACtB,YAAIc,KAAK,GAAGrB,UAAU,CAACsB,mBAAX,CAA+B,KAAKhB,KAApC,CAAZ;;AACA,YAAIe,KAAK,KAAK,EAAd,EAAkB;AAChBA,UAAAA,KAAK,GAAG,IAAR;AACD;;AACD,aAAKd,IAAL,CAAUA,IAAV,CAAec,KAAf,GAAuBA,KAAvB;AACD;AACF;AApCH;AAAA;AAAA,2BAsCSH,IAtCT,EAsCeC,KAtCf,EAsCsB;AAClB,WAAKb,KAAL,CAAWQ,IAAX,CAAgB,CAACI,IAAD,EAAOC,KAAP,CAAhB;;AACA,WAAKI,YAAL;AACD;AAzCH;AAAA;AAAA,4BA2CSL,IA3CT,EA2Ce;AACX,UAAIM,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG,KAAKlB,KAAL,CAAWM,MAAtB,EAA8B;AAC5B,YAAI,KAAKN,KAAL,CAAWkB,CAAX,EAAc,CAAd,MAAqBN,IAAzB,EAA+B;AAC7B,eAAKZ,KAAL,CAAWmB,MAAX,CAAkBD,CAAlB,EAAqB,CAArB;AACD,SAFD,MAEO;AACLA,UAAAA,CAAC;AACF;AACF;;AACD,WAAKD,YAAL;AACD;AArDH;AAAA;AAAA,wBAuDML,IAvDN,EAuDY;AAAA,kDACY,KAAKZ,KADjB;AAAA;;AAAA;AACR,+DAAgC;AAAA,cAArBoB,KAAqB;;AAC9B,cAAIA,KAAK,CAAC,CAAD,CAAL,KAAaR,IAAjB,EAAuB;AACrB,mBAAOQ,KAAK,CAAC,CAAD,CAAZ;AACD;AACF;AALO;AAAA;AAAA;AAAA;AAAA;;AAMR,aAAO,IAAP;AACD;AA9DH;AAAA;AAAA,2BAgESR,IAhET,EAgEe;AACX,UAAMS,MAAM,GAAG,EAAf;;AADW,kDAES,KAAKrB,KAFd;AAAA;;AAAA;AAEX,+DAAgC;AAAA,cAArBoB,KAAqB;;AAC9B,cAAIA,KAAK,CAAC,CAAD,CAAL,KAAaR,IAAjB,EAAuB;AACrBS,YAAAA,MAAM,CAACb,IAAP,CAAYY,KAAK,CAAC,CAAD,CAAjB;AACD;AACF;AANU;AAAA;AAAA;AAAA;AAAA;;AAOX,aAAOC,MAAP;AACD;AAxEH;AAAA;AAAA,wBA0EMT,IA1EN,EA0EY;AAAA,kDACY,KAAKZ,KADjB;AAAA;;AAAA;AACR,+DAAgC;AAAA,cAArBoB,KAAqB;;AAC9B,cAAIA,KAAK,CAAC,CAAD,CAAL,KAAaR,IAAjB,EAAuB;AACrB,mBAAO,IAAP;AACD;AACF;AALO;AAAA;AAAA;AAAA;AAAA;;AAMR,aAAO,KAAP;AACD;AAjFH;AAAA;AAAA,wBAmFMA,IAnFN,EAmFYC,KAnFZ,EAmFmB;AACf,UAAIS,KAAK,GAAG,KAAZ;AACA,UAAIJ,CAAC,GAAG,CAAR;;AACA,aAAOA,CAAC,GAAG,KAAKlB,KAAL,CAAWM,MAAtB,EAA8B;AAC5B,YAAI,KAAKN,KAAL,CAAWkB,CAAX,EAAc,CAAd,MAAqBN,IAAzB,EAA+B;AAC7B,cAAIU,KAAJ,EAAW;AACT,iBAAKtB,KAAL,CAAWmB,MAAX,CAAkBD,CAAlB,EAAqB,CAArB;AACD,WAFD,MAEO;AACLI,YAAAA,KAAK,GAAG,IAAR;AACA,iBAAKtB,KAAL,CAAWkB,CAAX,EAAc,CAAd,IAAmBL,KAAnB;AACAK,YAAAA,CAAC;AACF;AACF,SARD,MAQO;AACLA,UAAAA,CAAC;AACF;AACF;;AACD,UAAI,CAACI,KAAL,EAAY;AACV,aAAKtB,KAAL,CAAWQ,IAAX,CAAgB,CAACI,IAAD,EAAOC,KAAP,CAAhB;AACD;;AACD,WAAKI,YAAL;AACD;AAvGH;AAAA;AAAA,2BAyGS;AACL,WAAKjB,KAAL,GAAaR,YAAY,CAAC,KAAKQ,KAAN,EAAa,CAAC,CAAD,CAAb,CAAzB;;AACA,WAAKiB,YAAL;AACD;AA5GH;AAAA,SA8GGM,MAAM,CAACC,QA9GV;AAAA,4BA8GsB;AAClB,aAAO,KAAKxB,KAAL,CAAWuB,MAAM,CAACC,QAAlB,GAAP;AACD;AAhHH;AAAA;AAAA,+BAkHa;AACT,aAAO9B,UAAU,CAACsB,mBAAX,CAA+B,KAAKhB,KAApC,CAAP;AACD;AApHH;;AAAA;AAAA","sourcesContent":["\"use strict\";\nconst stableSortBy = require(\"lodash.sortby\");\nconst urlencoded = require(\"./urlencoded\");\n\nexports.implementation = class URLSearchParamsImpl {\n  constructor(constructorArgs, { doNotStripQMark = false }) {\n    let init = constructorArgs[0];\n    this._list = [];\n    this._url = null;\n\n    if (!doNotStripQMark && typeof init === \"string\" && init[0] === \"?\") {\n      init = init.slice(1);\n    }\n\n    if (Array.isArray(init)) {\n      for (const pair of init) {\n        if (pair.length !== 2) {\n          throw new TypeError(\"Failed to construct 'URLSearchParams': parameter 1 sequence's element does not \" +\n                              \"contain exactly two elements.\");\n        }\n        this._list.push([pair[0], pair[1]]);\n      }\n    } else if (typeof init === \"object\" && Object.getPrototypeOf(init) === null) {\n      for (const name of Object.keys(init)) {\n        const value = init[name];\n        this._list.push([name, value]);\n      }\n    } else {\n      this._list = urlencoded.parseUrlencoded(init);\n    }\n  }\n\n  _updateSteps() {\n    if (this._url !== null) {\n      let query = urlencoded.serializeUrlencoded(this._list);\n      if (query === \"\") {\n        query = null;\n      }\n      this._url._url.query = query;\n    }\n  }\n\n  append(name, value) {\n    this._list.push([name, value]);\n    this._updateSteps();\n  }\n\n  delete(name) {\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        this._list.splice(i, 1);\n      } else {\n        i++;\n      }\n    }\n    this._updateSteps();\n  }\n\n  get(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return tuple[1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    const output = [];\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        output.push(tuple[1]);\n      }\n    }\n    return output;\n  }\n\n  has(name) {\n    for (const tuple of this._list) {\n      if (tuple[0] === name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  set(name, value) {\n    let found = false;\n    let i = 0;\n    while (i < this._list.length) {\n      if (this._list[i][0] === name) {\n        if (found) {\n          this._list.splice(i, 1);\n        } else {\n          found = true;\n          this._list[i][1] = value;\n          i++;\n        }\n      } else {\n        i++;\n      }\n    }\n    if (!found) {\n      this._list.push([name, value]);\n    }\n    this._updateSteps();\n  }\n\n  sort() {\n    this._list = stableSortBy(this._list, [0]);\n    this._updateSteps();\n  }\n\n  [Symbol.iterator]() {\n    return this._list[Symbol.iterator]();\n  }\n\n  toString() {\n    return urlencoded.serializeUrlencoded(this._list);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
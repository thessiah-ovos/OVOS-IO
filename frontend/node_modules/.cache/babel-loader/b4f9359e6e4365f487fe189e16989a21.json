{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar conversions = require(\"webidl-conversions\");\n\nvar DOMException = require(\"domexception\");\n\nvar Event = require(\"../generated/Event\");\n\nvar FileList = require(\"../generated/FileList\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar idlUtils = require(\"../generated/utils\");\n\nvar DefaultConstraintValidationImpl = require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\n\nvar ValidityState = require(\"../generated/ValidityState\");\n\nvar _require = require(\"../../utils\"),\n    mixin = _require.mixin;\n\nvar _require2 = require(\"../helpers/internal-constants\"),\n    domSymbolTree = _require2.domSymbolTree,\n    cloningSteps = _require2.cloningSteps;\n\nvar _require3 = require(\"../helpers/traversal\"),\n    closest = _require3.closest;\n\nvar _require4 = require(\"../helpers/form-controls\"),\n    getLabelsForLabelable = _require4.getLabelsForLabelable;\n\nvar _require5 = require(\"../helpers/form-controls\"),\n    isDisabled = _require5.isDisabled,\n    isValidEmailAddress = _require5.isValidEmailAddress,\n    isValidAbsoluteURL = _require5.isValidAbsoluteURL,\n    sanitizeValueByType = _require5.sanitizeValueByType;\n\nvar _require6 = require(\"../helpers/strings\"),\n    parseFloatingPointNumber = _require6.parseFloatingPointNumber,\n    asciiCaseInsensitiveMatch = _require6.asciiCaseInsensitiveMatch,\n    splitOnCommas = _require6.splitOnCommas;\n\nvar _require7 = require(\"../helpers/dates-and-times\"),\n    parseDateString = _require7.parseDateString,\n    parseLocalDateAndTimeString = _require7.parseLocalDateAndTimeString,\n    parseMonthString = _require7.parseMonthString,\n    parseTimeString = _require7.parseTimeString,\n    parseWeekString = _require7.parseWeekString;\n\nvar filesSymbol = Symbol(\"files\");\nvar selectAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\", \"email\", \"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"color\", \"file\", \"number\"]);\nvar variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\"]);\nvar maxMinStepTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"datetime\"]); // https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\n\nvar applicableTypesForAttribute = {\n  max: maxMinStepTypes,\n  min: maxMinStepTypes,\n  step: maxMinStepTypes,\n  pattern: new Set([\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"])\n};\n\nfunction allowSelect(type) {\n  return selectAllowedTypes.has(type.toLowerCase());\n}\n\nfunction allowVariableLengthSelection(type) {\n  return variableLengthSelectionAllowedTypes.has(type.toLowerCase());\n}\n\nvar valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nvar valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\n\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n\n  if (type === \"file\") {\n    return \"filename\";\n  }\n\n  return \"value\";\n} // Necessary because Date.UTC() treats year within [0, 99] as [1900, 1999].\n\n\nfunction getUTCMs(year) {\n  var month = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var day = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var hour = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var minute = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  var second = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var millisecond = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n\n  if (year > 99 || year < 0) {\n    return Date.UTC(year, month - 1, day, hour, minute, second, millisecond);\n  }\n\n  var d = new Date(0);\n  d.setUTCFullYear(year);\n  d.setUTCMonth(month - 1);\n  d.setUTCDate(day);\n  d.setUTCHours(hour);\n  d.setUTCMinutes(minute);\n  d.setUTCSeconds(second, millisecond);\n  return d.valueOf();\n}\n\nvar dayOfWeekRelMondayLUT = [-1, 0, 1, 2, 3, -3, -2];\nvar convertStringToNumberByTypeMap = new Map([[// https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):concept-input-value-string-number\n\"date\", function (input) {\n  var date = parseDateString(input);\n\n  if (date === null) {\n    return NaN;\n  }\n\n  return getUTCMs(date.year, date.month, date.day);\n}], [// https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):concept-input-value-string-number\n\"month\", function (input) {\n  var date = parseMonthString(input);\n\n  if (date === null) {\n    return NaN;\n  }\n\n  return (date.year - 1970) * 12 + (date.month - 1);\n}], [// https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):concept-input-value-string-number\n\"week\", function (input) {\n  var date = parseWeekString(input);\n\n  if (date === null) {\n    return NaN;\n  }\n\n  var dateObj = new Date(getUTCMs(date.year)); // An HTML week starts on Monday, while 0 represents Sunday. Account for such.\n\n  var dayOfWeekRelMonday = dayOfWeekRelMondayLUT[dateObj.getUTCDay()];\n  return dateObj.setUTCDate(1 + 7 * (date.week - 1) - dayOfWeekRelMonday);\n}], [// https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):concept-input-value-string-number\n\"time\", function (input) {\n  var time = parseTimeString(input);\n\n  if (time === null) {\n    return NaN;\n  }\n\n  return ((time.hour * 60 + time.minute) * 60 + time.second) * 1000 + time.millisecond;\n}], [// https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):concept-input-value-string-number\n\"datetime-local\", function (input) {\n  var dateAndTime = parseLocalDateAndTimeString(input);\n\n  if (dateAndTime === null) {\n    return NaN;\n  }\n\n  var _dateAndTime$date = dateAndTime.date,\n      year = _dateAndTime$date.year,\n      month = _dateAndTime$date.month,\n      day = _dateAndTime$date.day,\n      _dateAndTime$time = dateAndTime.time,\n      hour = _dateAndTime$time.hour,\n      minute = _dateAndTime$time.minute,\n      second = _dateAndTime$time.second,\n      millisecond = _dateAndTime$time.millisecond; // Doesn't quite matter whether or not UTC is used, since the offset from 1970-01-01 local time is returned.\n\n  return getUTCMs(year, month, day, hour, minute, second, millisecond);\n}], // https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):concept-input-value-string-number\n[\"number\", parseFloatingPointNumber], // https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):concept-input-value-string-number\n[\"range\", parseFloatingPointNumber]]);\n\nvar HTMLInputElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLInputElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLInputElementImpl);\n\n  function HTMLInputElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLInputElementImpl);\n\n    _this = _super.call(this, args, privateData);\n    _this._selectionStart = _this._selectionEnd = 0;\n    _this._selectionDirection = \"none\";\n    _this._value = null;\n    _this._dirtyValue = false;\n    _this._checkedness = false;\n    _this._dirtyCheckedness = false; // This is used to implement the canceled activation steps for radio inputs:\n    // \"The canceled activation steps consist of setting the checkedness and the element's indeterminate IDL\n    // attribute back to the values they had before the pre-click activation steps were run.\"\n\n    _this._preCheckedRadioState = null;\n    _this.indeterminate = false;\n    _this._customValidityErrorMessage = \"\";\n    _this._labels = null;\n    return _this;\n  } // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n\n\n  _createClass(HTMLInputElementImpl, [{\n    key: \"_getValue\",\n    value: function _getValue() {\n      return this._value;\n    }\n  }, {\n    key: \"_preClickActivationSteps\",\n    value: function _preClickActivationSteps() {\n      if (this.type === \"checkbox\") {\n        this.checked = !this.checked;\n      } else if (this.type === \"radio\") {\n        this._preCheckedRadioState = this.checked;\n        this.checked = true;\n      }\n    }\n  }, {\n    key: \"_canceledActivationSteps\",\n    value: function _canceledActivationSteps() {\n      if (this.type === \"checkbox\") {\n        this.checked = !this.checked;\n      } else if (this.type === \"radio\") {\n        if (this._preCheckedRadioState !== null) {\n          this.checked = this._preCheckedRadioState;\n          this._preCheckedRadioState = null;\n        }\n      }\n    }\n  }, {\n    key: \"_activationBehavior\",\n    value: function _activationBehavior() {\n      if (isDisabled(this)) {\n        return;\n      }\n\n      if (this.type === \"checkbox\" || this.type === \"radio\" && !this._preCheckedRadioState) {\n        var inputEvent = Event.createImpl([\"input\", {\n          isTrusted: true,\n          bubbles: true,\n          cancelable: true\n        }], {});\n        this.dispatchEvent(inputEvent);\n        var changeEvent = Event.createImpl([\"change\", {\n          bubbles: true,\n          cancelable: true\n        }], {});\n        this.dispatchEvent(changeEvent);\n      } else if (this.type === \"submit\") {\n        var form = this.form;\n\n        if (form) {\n          form._doSubmit();\n        }\n      }\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name) {\n      var wrapper = idlUtils.wrapperForImpl(this);\n\n      if (!this._dirtyValue && name === \"value\") {\n        this._value = sanitizeValueByType(this, wrapper.defaultValue);\n      }\n\n      if (!this._dirtyCheckedness && name === \"checked\") {\n        this._checkedness = wrapper.defaultChecked;\n\n        if (this._checkedness) {\n          this._removeOtherRadioCheckedness();\n        }\n      }\n\n      if (name === \"name\" || name === \"type\") {\n        if (this._checkedness) {\n          this._removeOtherRadioCheckedness();\n        }\n      }\n\n      _get(_getPrototypeOf(HTMLInputElementImpl.prototype), \"_attrModified\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"_formReset\",\n    value: function _formReset() {\n      var wrapper = idlUtils.wrapperForImpl(this);\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n      this._dirtyValue = false;\n      this._checkedness = wrapper.defaultChecked;\n      this._dirtyCheckedness = false;\n\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n  }, {\n    key: \"_changedFormOwner\",\n    value: function _changedFormOwner() {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n  }, {\n    key: \"_removeOtherRadioCheckedness\",\n    value: function _removeOtherRadioCheckedness() {\n      var _iterator = _createForOfIteratorHelper(this._otherRadioGroupElements),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var radioGroupElement = _step.value;\n          radioGroupElement._checkedness = false;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"_isRadioGroupChecked\",\n    value: function _isRadioGroupChecked() {\n      if (this.checked) {\n        return true;\n      }\n\n      return this._otherRadioGroupElements.some(function (radioGroupElement) {\n        return radioGroupElement.checked;\n      });\n    }\n  }, {\n    key: \"_dispatchSelectEvent\",\n    value: function _dispatchSelectEvent() {\n      var event = this._ownerDocument.createEvent(\"HTMLEvents\");\n\n      event.initEvent(\"select\", true, true);\n      this.dispatchEvent(event);\n    }\n  }, {\n    key: \"_getValueLength\",\n    value: function _getValueLength() {\n      return typeof this.value === \"string\" ? this.value.length : 0;\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      if (!allowSelect(this.type)) {\n        return;\n      }\n\n      this._selectionStart = 0;\n      this._selectionEnd = this._getValueLength();\n      this._selectionDirection = \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(start, end, dir) {\n      if (!allowVariableLengthSelection(this.type)) {\n        throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n      }\n\n      this._selectionEnd = Math.min(end, this._getValueLength());\n      this._selectionStart = Math.min(start, this._selectionEnd);\n      this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n\n      this._dispatchSelectEvent();\n    }\n  }, {\n    key: \"setRangeText\",\n    value: function setRangeText(repl, start, end) {\n      var selectionMode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"preserve\";\n\n      if (!allowVariableLengthSelection(this.type)) {\n        throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n      }\n\n      if (arguments.length < 2) {\n        start = this._selectionStart;\n        end = this._selectionEnd;\n      } else if (start > end) {\n        throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n      }\n\n      start = Math.min(start, this._getValueLength());\n      end = Math.min(end, this._getValueLength());\n      var val = this.value;\n      var selStart = this._selectionStart;\n      var selEnd = this._selectionEnd;\n      this.value = val.slice(0, start) + repl + val.slice(end);\n      var newEnd = start + this.value.length;\n\n      if (selectionMode === \"select\") {\n        this.setSelectionRange(start, newEnd);\n      } else if (selectionMode === \"start\") {\n        this.setSelectionRange(start, start);\n      } else if (selectionMode === \"end\") {\n        this.setSelectionRange(newEnd, newEnd);\n      } else {\n        // preserve\n        var delta = repl.length - (end - start);\n\n        if (selStart > end) {\n          selStart += delta;\n        } else if (selStart > start) {\n          selStart = start;\n        }\n\n        if (selEnd > end) {\n          selEnd += delta;\n        } else if (selEnd > start) {\n          selEnd = newEnd;\n        }\n\n        this.setSelectionRange(selStart, selEnd);\n      }\n    }\n  }, {\n    key: \"_attributeApplies\",\n    value: function _attributeApplies(attribute) {\n      return applicableTypesForAttribute[attribute].has(this.type);\n    }\n  }, {\n    key: \"_barredFromConstraintValidationSpecialization\",\n    value: function _barredFromConstraintValidationSpecialization() {\n      // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n      // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n      // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n      var willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]); // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n\n      var readOnly = this.hasAttribute(\"readonly\"); // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n\n      return willNotValidateTypes.has(this.type) || readOnly;\n    }\n  }, {\n    key: cloningSteps,\n    value: function value(copy, node) {\n      copy._value = node._value;\n      copy._checkedness = node._checkedness;\n      copy._dirtyValue = node._dirtyValue;\n      copy._dirtyCheckedness = node._dirtyCheckedness;\n    }\n  }, {\n    key: \"_convertStringToNumber\",\n    get: function get() {\n      return convertStringToNumberByTypeMap.get(this.type);\n    }\n  }, {\n    key: \"_otherRadioGroupElements\",\n    get: function get() {\n      var wrapper = idlUtils.wrapperForImpl(this);\n      var root = this._radioButtonGroupRoot;\n\n      if (!root) {\n        return [];\n      }\n\n      var result = [];\n      var name = wrapper.name.toLowerCase();\n      var descendants = domSymbolTree.treeIterator(root);\n\n      var _iterator2 = _createForOfIteratorHelper(descendants),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var candidate = _step2.value;\n\n          if (candidate._radioButtonGroupRoot !== root) {\n            continue;\n          }\n\n          var candidateWrapper = idlUtils.wrapperForImpl(candidate);\n\n          if (!candidateWrapper.name || candidateWrapper.name.toLowerCase() !== name) {\n            continue;\n          }\n\n          if (candidate !== this) {\n            result.push(candidate);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_radioButtonGroupRoot\",\n    get: function get() {\n      var wrapper = idlUtils.wrapperForImpl(this);\n\n      if (this.type !== \"radio\" || !wrapper.name) {\n        return null;\n      }\n\n      var e = domSymbolTree.parent(this);\n\n      while (e) {\n        // root node of this home sub tree\n        // or the form element we belong to\n        if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n          return e;\n        }\n\n        e = domSymbolTree.parent(e);\n      }\n\n      return null;\n    }\n  }, {\n    key: \"labels\",\n    get: function get() {\n      return getLabelsForLabelable(this);\n    }\n  }, {\n    key: \"form\",\n    get: function get() {\n      return closest(this, \"form\");\n    }\n  }, {\n    key: \"checked\",\n    get: function get() {\n      return this._checkedness;\n    },\n    set: function set(checked) {\n      this._checkedness = Boolean(checked);\n      this._dirtyCheckedness = true;\n\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      switch (valueAttributeMode(this.type)) {\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n        case \"value\":\n          return this._value !== null ? this._value : \"\";\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n\n        case \"default\":\n          {\n            var attr = this.getAttribute(\"value\");\n            return attr !== null ? attr : \"\";\n          }\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n\n        case \"default/on\":\n          {\n            var _attr = this.getAttribute(\"value\");\n\n            return _attr !== null ? _attr : \"on\";\n          }\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n\n        case \"filename\":\n          return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n\n        default:\n          throw new Error(\"jsdom internal error: unknown value attribute mode\");\n      }\n    },\n    set: function set(val) {\n      switch (valueAttributeMode(this.type)) {\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n        case \"value\":\n          {\n            var oldValue = this._value;\n\n            if (val === null) {\n              this._value = null;\n            } else {\n              this._value = sanitizeValueByType(this, String(val));\n            }\n\n            this._dirtyValue = true;\n\n            if (oldValue !== this._value) {\n              this._selectionStart = 0;\n              this._selectionEnd = 0;\n              this._selectionDirection = \"none\";\n            }\n\n            break;\n          }\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n\n        case \"default\":\n        case \"default/on\":\n          this.setAttribute(\"value\", val);\n          break;\n        // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n\n        case \"filename\":\n          if (val === \"\") {\n            this.files.length = 0;\n          } else {\n            throw new DOMException(\"This input element accepts a filename, which may only be programmatically set to \" + \"the empty string.\", \"InvalidStateError\");\n          }\n\n          break;\n\n        default:\n          throw new Error(\"jsdom internal error: unknown value attribute mode\");\n      }\n    }\n  }, {\n    key: \"files\",\n    get: function get() {\n      if (this.type === \"file\") {\n        this[filesSymbol] = this[filesSymbol] || FileList.createImpl();\n      } else {\n        this[filesSymbol] = null;\n      }\n\n      return this[filesSymbol];\n    },\n    set: function set(value) {\n      if (this.type === \"file\" && value !== null) {\n        this[filesSymbol] = value;\n      }\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      var type = this.getAttribute(\"type\");\n      return type ? type.toLowerCase() : \"text\";\n    },\n    set: function set(type) {\n      this.setAttribute(\"type\", type);\n    }\n  }, {\n    key: \"selectionStart\",\n    get: function get() {\n      if (!allowVariableLengthSelection(this.type)) {\n        return null;\n      }\n\n      return this._selectionStart;\n    },\n    set: function set(start) {\n      if (!allowVariableLengthSelection(this.type)) {\n        throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n      }\n\n      this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n    }\n  }, {\n    key: \"selectionEnd\",\n    get: function get() {\n      if (!allowVariableLengthSelection(this.type)) {\n        return null;\n      }\n\n      return this._selectionEnd;\n    },\n    set: function set(end) {\n      if (!allowVariableLengthSelection(this.type)) {\n        throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n      }\n\n      this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n    }\n  }, {\n    key: \"selectionDirection\",\n    get: function get() {\n      if (!allowVariableLengthSelection(this.type)) {\n        return null;\n      }\n\n      return this._selectionDirection;\n    },\n    set: function set(dir) {\n      if (!allowVariableLengthSelection(this.type)) {\n        throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n      }\n\n      this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n    }\n  }, {\n    key: \"maxLength\",\n    set: function set(value) {\n      if (value < 0) {\n        throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n      }\n\n      this.setAttribute(\"maxlength\", String(value));\n    },\n    get: function get() {\n      if (!this.hasAttribute(\"maxlength\")) {\n        return 524288; // stole this from chrome\n      }\n\n      return parseInt(this.getAttribute(\"maxlength\"));\n    }\n  }, {\n    key: \"minLength\",\n    set: function set(value) {\n      if (value < 0) {\n        throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n      }\n\n      this.setAttribute(\"minlength\", String(value));\n    },\n    get: function get() {\n      if (!this.hasAttribute(\"minlength\")) {\n        return 0;\n      }\n\n      return parseInt(this.getAttribute(\"minlength\"));\n    }\n  }, {\n    key: \"size\",\n    get: function get() {\n      if (!this.hasAttribute(\"size\")) {\n        return 20;\n      }\n\n      return parseInt(this.getAttribute(\"size\"));\n    },\n    set: function set(value) {\n      if (value <= 0) {\n        throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n      }\n\n      this.setAttribute(\"size\", String(value));\n    }\n  }, {\n    key: \"src\",\n    get: function get() {\n      return conversions.USVString(this.getAttribute(\"src\"));\n    },\n    set: function set(value) {\n      this.setAttribute(\"src\", value);\n    } // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n\n  }, {\n    key: \"_minimum\",\n    get: function get() {\n      var min = this._defaultMinimum;\n      var attr = this.getAttribute(\"min\");\n      var convertStringToNumber = this._convertStringToNumber;\n\n      if (attr !== null && convertStringToNumber !== undefined) {\n        var parsed = convertStringToNumber(attr);\n\n        if (!isNaN(parsed)) {\n          min = parsed;\n        }\n      }\n\n      return min;\n    }\n  }, {\n    key: \"_maximum\",\n    get: function get() {\n      var max = this._defaultMaximum;\n      var attr = this.getAttribute(\"max\");\n      var convertStringToNumber = this._convertStringToNumber;\n\n      if (attr !== null && convertStringToNumber !== undefined) {\n        var parsed = convertStringToNumber(attr);\n\n        if (!isNaN(parsed)) {\n          max = parsed;\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_defaultMinimum\",\n    get: function get() {\n      if (this.type === \"range\") {\n        return 0;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_defaultMaximum\",\n    get: function get() {\n      if (this.type === \"range\") {\n        return 100;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_parsedValue\",\n    get: function get() {\n      var converter = this._convertStringToNumber;\n\n      if (converter !== undefined) {\n        return converter(this.value);\n      }\n\n      return this.value;\n    } // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n\n  }, {\n    key: \"_step\",\n    get: function get() {\n      var step = this._defaultStep;\n\n      if (this.hasAttribute(\"step\") && !asciiCaseInsensitiveMatch(this.getAttribute(\"step\"), \"any\")) {\n        var parsedStep = parseFloatingPointNumber(this.getAttribute(\"step\"));\n\n        if (!isNaN(parsedStep) && parsedStep > 0) {\n          step = parsedStep;\n        }\n      }\n\n      return step;\n    } // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n\n  }, {\n    key: \"_stepScaleFactor\",\n    get: function get() {\n      var dayInMilliseconds = 24 * 60 * 60 * 1000;\n\n      switch (this.type) {\n        case \"week\":\n          return 7 * dayInMilliseconds;\n\n        case \"date\":\n          return dayInMilliseconds;\n\n        case \"datetime-local\":\n        case \"datetime\":\n        case \"time\":\n          return 1000;\n      }\n\n      return 1;\n    } // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n\n  }, {\n    key: \"_defaultStep\",\n    get: function get() {\n      if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n        return 60;\n      }\n\n      return 1;\n    } // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n\n  }, {\n    key: \"_stepBase\",\n    get: function get() {\n      var _this2 = this;\n\n      var parseAttribute = function parseAttribute(attributeName) {\n        return parseFloatingPointNumber(_this2.getAttribute(attributeName));\n      };\n\n      if (this.hasAttribute(\"min\")) {\n        var min = parseAttribute(\"min\");\n\n        if (!isNaN(min)) {\n          return min;\n        }\n      }\n\n      if (this.hasAttribute(\"value\")) {\n        var value = parseAttribute(\"value\");\n\n        if (!isNaN(value)) {\n          return value;\n        }\n      }\n\n      return this._defaultStepBase;\n    } // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n\n  }, {\n    key: \"_defaultStepBase\",\n    get: function get() {\n      if (this.type === \"week\") {\n        // The start of week 1970-W01\n        return 259200000;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"validity\",\n    get: function get() {\n      var _this3 = this;\n\n      if (!this._validity) {\n        this._validity = ValidityState.createImpl(this, {\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n          valueMissing: function valueMissing() {\n            if (!_this3.hasAttribute(\"required\")) {\n              return false;\n            }\n\n            if (_this3.type === \"checkbox\") {\n              // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n              // Constraint validation: If the element is required and its checkedness is\n              // false, then the element is suffering from being missing.\n              return !_this3.checked;\n            } else if (_this3.type === \"radio\") {\n              // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n              // Constraint validation: If an element in the radio button group is required,\n              // and all of the input elements in the radio button group have a checkedness\n              // that is false, then the element is suffering from being missing.\n              return !_this3._isRadioGroupChecked();\n            }\n\n            return _this3.value === \"\";\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n          // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n          // to be set to false.\n          tooLong: function tooLong() {\n            return false;\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n          tooShort: function tooShort() {\n            return false;\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n          // https://html.spec.whatwg.org/multipage/input.html#attr-input-max\n          rangeOverflow: function rangeOverflow() {\n            return _this3._attributeApplies(\"max\") && _this3._maximum !== null && _this3._parsedValue > _this3._maximum;\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n          // https://html.spec.whatwg.org/multipage/input.html#attr-input-min\n          rangeUnderflow: function rangeUnderflow() {\n            return _this3._attributeApplies(\"min\") && _this3._minimum !== null && _this3._parsedValue < _this3._minimum;\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n          patternMismatch: function patternMismatch() {\n            if (!_this3.hasAttribute(\"pattern\") || !_this3._attributeApplies(\"pattern\") || _this3.value === \"\") {\n              return false;\n            }\n\n            var regExp;\n\n            try {\n              regExp = new RegExp(_this3.getAttribute(\"pattern\"), \"u\");\n            } catch (e) {\n              return false;\n            }\n\n            if (_this3.type === \"email\" && _this3.hasAttribute(\"multiple\")) {\n              return splitOnCommas(_this3.value).every(function (value) {\n                return regExp.test(value);\n              });\n            }\n\n            return !regExp.test(_this3.value);\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n          // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n          stepMismatch: function stepMismatch() {\n            // Constraint validation: When the element has an allowed value step, and the result of applying\n            // the algorithm to convert a string to a number to the string given by the element's value is a\n            // number, and that number subtracted from the step base is not an integral multiple of the\n            // allowed value step, the element is suffering from a step mismatch.\n            if (!_this3._attributeApplies(\"step\")) {\n              return false;\n            }\n\n            var step = parseFloatingPointNumber(_this3.getAttribute(\"step\"));\n\n            if (isNaN(step) || step <= 0) {\n              return false;\n            }\n\n            var number = _this3._parsedValue;\n\n            if (isNaN(number) || _this3.value === \"\") {\n              return false;\n            }\n\n            if (_this3._type === \"month\") {\n              number = parseMonthString(_this3.value).month - 1;\n            }\n\n            return number % (_this3._stepBase - _this3._step * _this3._stepScaleFactor) !== 0;\n          },\n          // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n          typeMismatch: function typeMismatch() {\n            if (_this3.value === \"\") {\n              return false;\n            }\n\n            if (_this3.type === \"email\") {\n              // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n              // Constraint validation [multiple=false]: While the value of the element is neither the empty\n              // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n              // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n              // the element is suffering from a type mismatch.\n              return !isValidEmailAddress(_this3.value, _this3.hasAttribute(\"multiple\"));\n            } else if (_this3.type === \"url\") {\n              // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n              // Constraint validation: While the value of the element is neither the empty string\n              // nor a valid absolute URL, the element is suffering from a type mismatch.\n              return !isValidAbsoluteURL(_this3.value);\n            }\n\n            return false;\n          }\n        });\n      }\n\n      return this._validity;\n    }\n  }]);\n\n  return HTMLInputElementImpl;\n}(HTMLElementImpl);\n\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLInputElement-impl.js"],"names":["conversions","require","DOMException","Event","FileList","HTMLElementImpl","implementation","idlUtils","DefaultConstraintValidationImpl","ValidityState","mixin","domSymbolTree","cloningSteps","closest","getLabelsForLabelable","isDisabled","isValidEmailAddress","isValidAbsoluteURL","sanitizeValueByType","parseFloatingPointNumber","asciiCaseInsensitiveMatch","splitOnCommas","parseDateString","parseLocalDateAndTimeString","parseMonthString","parseTimeString","parseWeekString","filesSymbol","Symbol","selectAllowedTypes","Set","variableLengthSelectionAllowedTypes","maxMinStepTypes","applicableTypesForAttribute","max","min","step","pattern","allowSelect","type","has","toLowerCase","allowVariableLengthSelection","valueAttributeDefaultMode","valueAttributeDefaultOnMode","valueAttributeMode","getUTCMs","year","month","day","hour","minute","second","millisecond","Date","UTC","d","setUTCFullYear","setUTCMonth","setUTCDate","setUTCHours","setUTCMinutes","setUTCSeconds","valueOf","dayOfWeekRelMondayLUT","convertStringToNumberByTypeMap","Map","input","date","NaN","dateObj","dayOfWeekRelMonday","getUTCDay","week","time","dateAndTime","HTMLInputElementImpl","args","privateData","_selectionStart","_selectionEnd","_selectionDirection","_value","_dirtyValue","_checkedness","_dirtyCheckedness","_preCheckedRadioState","indeterminate","_customValidityErrorMessage","_labels","checked","inputEvent","createImpl","isTrusted","bubbles","cancelable","dispatchEvent","changeEvent","form","_doSubmit","name","wrapper","wrapperForImpl","defaultValue","defaultChecked","_removeOtherRadioCheckedness","apply","arguments","_otherRadioGroupElements","radioGroupElement","some","event","_ownerDocument","createEvent","initEvent","value","length","_getValueLength","_dispatchSelectEvent","start","end","dir","Math","repl","selectionMode","val","selStart","selEnd","slice","newEnd","setSelectionRange","delta","attribute","willNotValidateTypes","readOnly","hasAttribute","copy","node","get","root","_radioButtonGroupRoot","result","descendants","treeIterator","candidate","candidateWrapper","push","e","parent","nodeName","toUpperCase","Boolean","attr","getAttribute","files","Error","oldValue","String","setAttribute","parseInt","USVString","_defaultMinimum","convertStringToNumber","_convertStringToNumber","undefined","parsed","isNaN","_defaultMaximum","converter","_defaultStep","parsedStep","dayInMilliseconds","parseAttribute","attributeName","_defaultStepBase","_validity","valueMissing","_isRadioGroupChecked","tooLong","tooShort","rangeOverflow","_attributeApplies","_maximum","_parsedValue","rangeUnderflow","_minimum","patternMismatch","regExp","RegExp","every","test","stepMismatch","number","_type","_stepBase","_step","_stepScaleFactor","typeMismatch","prototype","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst conversions = require(\"webidl-conversions\");\nconst DOMException = require(\"domexception\");\nconst Event = require(\"../generated/Event\");\nconst FileList = require(\"../generated/FileList\");\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\nconst idlUtils = require(\"../generated/utils\");\nconst DefaultConstraintValidationImpl =\n  require(\"../constraint-validation/DefaultConstraintValidation-impl\").implementation;\nconst ValidityState = require(\"../generated/ValidityState\");\nconst { mixin } = require(\"../../utils\");\nconst { domSymbolTree, cloningSteps } = require(\"../helpers/internal-constants\");\nconst { closest } = require(\"../helpers/traversal\");\nconst { getLabelsForLabelable } = require(\"../helpers/form-controls\");\nconst {\n  isDisabled,\n  isValidEmailAddress,\n  isValidAbsoluteURL,\n  sanitizeValueByType\n} = require(\"../helpers/form-controls\");\nconst {\n  parseFloatingPointNumber,\n  asciiCaseInsensitiveMatch,\n  splitOnCommas\n} = require(\"../helpers/strings\");\nconst {\n  parseDateString,\n  parseLocalDateAndTimeString,\n  parseMonthString,\n  parseTimeString,\n  parseWeekString\n} = require(\"../helpers/dates-and-times\");\n\nconst filesSymbol = Symbol(\"files\");\n\nconst selectAllowedTypes = new Set([\n  \"text\", \"search\", \"tel\", \"url\", \"password\", \"email\", \"date\", \"month\", \"week\",\n  \"time\", \"datetime-local\", \"color\", \"file\", \"number\"\n]);\n\nconst variableLengthSelectionAllowedTypes = new Set([\"text\", \"search\", \"tel\", \"url\", \"password\"]);\n\nconst maxMinStepTypes = new Set([\"date\", \"month\", \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"datetime\"]);\n\n// https://html.spec.whatwg.org/multipage/input.html#concept-input-apply\nconst applicableTypesForAttribute = {\n  max: maxMinStepTypes,\n  min: maxMinStepTypes,\n  step: maxMinStepTypes,\n  pattern: new Set([\"text\", \"search\", \"tel\", \"url\", \"email\", \"password\"])\n};\n\nfunction allowSelect(type) {\n  return selectAllowedTypes.has(type.toLowerCase());\n}\n\nfunction allowVariableLengthSelection(type) {\n  return variableLengthSelectionAllowedTypes.has(type.toLowerCase());\n}\n\nconst valueAttributeDefaultMode = new Set([\"hidden\", \"submit\", \"image\", \"reset\", \"button\"]);\nconst valueAttributeDefaultOnMode = new Set([\"checkbox\", \"radio\"]);\n\nfunction valueAttributeMode(type) {\n  if (valueAttributeDefaultMode.has(type)) {\n    return \"default\";\n  }\n  if (valueAttributeDefaultOnMode.has(type)) {\n    return \"default/on\";\n  }\n  if (type === \"file\") {\n    return \"filename\";\n  }\n  return \"value\";\n}\n\n// Necessary because Date.UTC() treats year within [0, 99] as [1900, 1999].\nfunction getUTCMs(year, month = 1, day = 1, hour = 0, minute = 0, second = 0, millisecond = 0) {\n  if (year > 99 || year < 0) {\n    return Date.UTC(year, month - 1, day, hour, minute, second, millisecond);\n  }\n  const d = new Date(0);\n  d.setUTCFullYear(year);\n  d.setUTCMonth(month - 1);\n  d.setUTCDate(day);\n  d.setUTCHours(hour);\n  d.setUTCMinutes(minute);\n  d.setUTCSeconds(second, millisecond);\n  return d.valueOf();\n}\n\nconst dayOfWeekRelMondayLUT = [-1, 0, 1, 2, 3, -3, -2];\n\nconst convertStringToNumberByTypeMap = new Map([\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date):concept-input-value-string-number\n    \"date\", input => {\n      const date = parseDateString(input);\n      if (date === null) {\n        return NaN;\n      }\n      return getUTCMs(date.year, date.month, date.day);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#month-state-(type=month):concept-input-value-string-number\n    \"month\", input => {\n      const date = parseMonthString(input);\n      if (date === null) {\n        return NaN;\n      }\n      return (date.year - 1970) * 12 + (date.month - 1);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#week-state-(type=week):concept-input-value-string-number\n    \"week\", input => {\n      const date = parseWeekString(input);\n      if (date === null) {\n        return NaN;\n      }\n      const dateObj = new Date(getUTCMs(date.year));\n      // An HTML week starts on Monday, while 0 represents Sunday. Account for such.\n      const dayOfWeekRelMonday = dayOfWeekRelMondayLUT[dateObj.getUTCDay()];\n      return dateObj.setUTCDate(1 + 7 * (date.week - 1) - dayOfWeekRelMonday);\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#time-state-(type=time):concept-input-value-string-number\n    \"time\", input => {\n      const time = parseTimeString(input);\n      if (time === null) {\n        return NaN;\n      }\n      return ((time.hour * 60 + time.minute) * 60 + time.second) * 1000 + time.millisecond;\n    }\n  ],\n  [\n    // https://html.spec.whatwg.org/multipage/input.html#local-date-and-time-state-(type=datetime-local):concept-input-value-string-number\n    \"datetime-local\", input => {\n      const dateAndTime = parseLocalDateAndTimeString(input);\n      if (dateAndTime === null) {\n        return NaN;\n      }\n      const { date: { year, month, day }, time: { hour, minute, second, millisecond } } = dateAndTime;\n      // Doesn't quite matter whether or not UTC is used, since the offset from 1970-01-01 local time is returned.\n      return getUTCMs(year, month, day, hour, minute, second, millisecond);\n    }\n  ],\n  // https://html.spec.whatwg.org/multipage/input.html#number-state-(type=number):concept-input-value-string-number\n  [\"number\", parseFloatingPointNumber],\n  // https://html.spec.whatwg.org/multipage/input.html#range-state-(type=range):concept-input-value-string-number\n  [\"range\", parseFloatingPointNumber]\n]);\n\nclass HTMLInputElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._selectionStart = this._selectionEnd = 0;\n    this._selectionDirection = \"none\";\n    this._value = null;\n    this._dirtyValue = false;\n    this._checkedness = false;\n    this._dirtyCheckedness = false;\n\n    // This is used to implement the canceled activation steps for radio inputs:\n    // \"The canceled activation steps consist of setting the checkedness and the element's indeterminate IDL\n    // attribute back to the values they had before the pre-click activation steps were run.\"\n    this._preCheckedRadioState = null;\n\n    this.indeterminate = false;\n\n    this._customValidityErrorMessage = \"\";\n\n    this._labels = null;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-value-string-number\n  get _convertStringToNumber() {\n    return convertStringToNumberByTypeMap.get(this.type);\n  }\n\n  _getValue() {\n    return this._value;\n  }\n\n  _preClickActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      this._preCheckedRadioState = this.checked;\n      this.checked = true;\n    }\n  }\n\n  _canceledActivationSteps() {\n    if (this.type === \"checkbox\") {\n      this.checked = !this.checked;\n    } else if (this.type === \"radio\") {\n      if (this._preCheckedRadioState !== null) {\n        this.checked = this._preCheckedRadioState;\n        this._preCheckedRadioState = null;\n      }\n    }\n  }\n\n  _activationBehavior() {\n    if (isDisabled(this)) {\n      return;\n    }\n\n    if (this.type === \"checkbox\" || (this.type === \"radio\" && !this._preCheckedRadioState)) {\n      const inputEvent = Event.createImpl([\"input\", { isTrusted: true, bubbles: true, cancelable: true }], {});\n      this.dispatchEvent(inputEvent);\n\n      const changeEvent = Event.createImpl([\"change\", { bubbles: true, cancelable: true }], {});\n      this.dispatchEvent(changeEvent);\n    } else if (this.type === \"submit\") {\n      const { form } = this;\n      if (form) {\n        form._doSubmit();\n      }\n    }\n  }\n\n  _attrModified(name) {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (!this._dirtyValue && name === \"value\") {\n      this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    }\n    if (!this._dirtyCheckedness && name === \"checked\") {\n      this._checkedness = wrapper.defaultChecked;\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    if (name === \"name\" || name === \"type\") {\n      if (this._checkedness) {\n        this._removeOtherRadioCheckedness();\n      }\n    }\n\n    super._attrModified.apply(this, arguments);\n  }\n\n  _formReset() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    this._value = sanitizeValueByType(this, wrapper.defaultValue);\n    this._dirtyValue = false;\n    this._checkedness = wrapper.defaultChecked;\n    this._dirtyCheckedness = false;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  _changedFormOwner() {\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get _otherRadioGroupElements() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    const root = this._radioButtonGroupRoot;\n    if (!root) {\n      return [];\n    }\n\n    const result = [];\n\n    const name = wrapper.name.toLowerCase();\n\n    const descendants = domSymbolTree.treeIterator(root);\n    for (const candidate of descendants) {\n      if (candidate._radioButtonGroupRoot !== root) {\n        continue;\n      }\n\n      const candidateWrapper = idlUtils.wrapperForImpl(candidate);\n      if (!candidateWrapper.name || candidateWrapper.name.toLowerCase() !== name) {\n        continue;\n      }\n\n      if (candidate !== this) {\n        result.push(candidate);\n      }\n    }\n    return result;\n  }\n\n  _removeOtherRadioCheckedness() {\n    for (const radioGroupElement of this._otherRadioGroupElements) {\n      radioGroupElement._checkedness = false;\n    }\n  }\n\n  get _radioButtonGroupRoot() {\n    const wrapper = idlUtils.wrapperForImpl(this);\n    if (this.type !== \"radio\" || !wrapper.name) {\n      return null;\n    }\n\n    let e = domSymbolTree.parent(this);\n    while (e) {\n      // root node of this home sub tree\n      // or the form element we belong to\n      if (!domSymbolTree.parent(e) || e.nodeName.toUpperCase() === \"FORM\") {\n        return e;\n      }\n      e = domSymbolTree.parent(e);\n    }\n    return null;\n  }\n\n  _isRadioGroupChecked() {\n    if (this.checked) {\n      return true;\n    }\n    return this._otherRadioGroupElements.some(radioGroupElement => radioGroupElement.checked);\n  }\n\n  get labels() {\n    return getLabelsForLabelable(this);\n  }\n\n  get form() {\n    return closest(this, \"form\");\n  }\n\n  get checked() {\n    return this._checkedness;\n  }\n\n  set checked(checked) {\n    this._checkedness = Boolean(checked);\n    this._dirtyCheckedness = true;\n    if (this._checkedness) {\n      this._removeOtherRadioCheckedness();\n    }\n  }\n\n  get value() {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\":\n        return this._value !== null ? this._value : \"\";\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      case \"default\": {\n        const attr = this.getAttribute(\"value\");\n        return attr !== null ? attr : \"\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default/on\": {\n        const attr = this.getAttribute(\"value\");\n        return attr !== null ? attr : \"on\";\n      }\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        return this.files.length ? \"C:\\\\fakepath\\\\\" + this.files[0].name : \"\";\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  set value(val) {\n    switch (valueAttributeMode(this.type)) {\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-value\n      case \"value\": {\n        const oldValue = this._value;\n        if (val === null) {\n          this._value = null;\n        } else {\n          this._value = sanitizeValueByType(this, String(val));\n        }\n        this._dirtyValue = true;\n\n        if (oldValue !== this._value) {\n          this._selectionStart = 0;\n          this._selectionEnd = 0;\n          this._selectionDirection = \"none\";\n        }\n        break;\n      }\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-default-on\n      case \"default\":\n      case \"default/on\":\n        this.setAttribute(\"value\", val);\n        break;\n\n      // https://html.spec.whatwg.org/multipage/input.html#dom-input-value-filename\n      case \"filename\":\n        if (val === \"\") {\n          this.files.length = 0;\n        } else {\n          throw new DOMException(\"This input element accepts a filename, which may only be programmatically set to \" +\n            \"the empty string.\", \"InvalidStateError\");\n        }\n        break;\n\n      default:\n        throw new Error(\"jsdom internal error: unknown value attribute mode\");\n    }\n  }\n\n  get files() {\n    if (this.type === \"file\") {\n      this[filesSymbol] = this[filesSymbol] || FileList.createImpl();\n    } else {\n      this[filesSymbol] = null;\n    }\n    return this[filesSymbol];\n  }\n\n  set files(value) {\n    if (this.type === \"file\" && value !== null) {\n      this[filesSymbol] = value;\n    }\n  }\n\n  get type() {\n    const type = this.getAttribute(\"type\");\n    return type ? type.toLowerCase() : \"text\";\n  }\n\n  set type(type) {\n    this.setAttribute(\"type\", type);\n  }\n\n  _dispatchSelectEvent() {\n    const event = this._ownerDocument.createEvent(\"HTMLEvents\");\n    event.initEvent(\"select\", true, true);\n    this.dispatchEvent(event);\n  }\n\n  _getValueLength() {\n    return typeof this.value === \"string\" ? this.value.length : 0;\n  }\n\n  select() {\n    if (!allowSelect(this.type)) {\n      return;\n    }\n\n    this._selectionStart = 0;\n    this._selectionEnd = this._getValueLength();\n    this._selectionDirection = \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  get selectionStart() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionStart;\n  }\n\n  set selectionStart(start) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(start, Math.max(start, this._selectionEnd), this._selectionDirection);\n  }\n\n  get selectionEnd() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionEnd;\n  }\n\n  set selectionEnd(end) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(this._selectionStart, end, this._selectionDirection);\n  }\n\n  get selectionDirection() {\n    if (!allowVariableLengthSelection(this.type)) {\n      return null;\n    }\n\n    return this._selectionDirection;\n  }\n\n  set selectionDirection(dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this.setSelectionRange(this._selectionStart, this._selectionEnd, dir);\n  }\n\n  setSelectionRange(start, end, dir) {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    this._selectionEnd = Math.min(end, this._getValueLength());\n    this._selectionStart = Math.min(start, this._selectionEnd);\n    this._selectionDirection = dir === \"forward\" || dir === \"backward\" ? dir : \"none\";\n    this._dispatchSelectEvent();\n  }\n\n  setRangeText(repl, start, end, selectionMode = \"preserve\") {\n    if (!allowVariableLengthSelection(this.type)) {\n      throw new DOMException(\"The object is in an invalid state.\", \"InvalidStateError\");\n    }\n\n    if (arguments.length < 2) {\n      start = this._selectionStart;\n      end = this._selectionEnd;\n    } else if (start > end) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n\n    start = Math.min(start, this._getValueLength());\n    end = Math.min(end, this._getValueLength());\n\n    const val = this.value;\n    let selStart = this._selectionStart;\n    let selEnd = this._selectionEnd;\n\n    this.value = val.slice(0, start) + repl + val.slice(end);\n\n    const newEnd = start + this.value.length;\n\n    if (selectionMode === \"select\") {\n      this.setSelectionRange(start, newEnd);\n    } else if (selectionMode === \"start\") {\n      this.setSelectionRange(start, start);\n    } else if (selectionMode === \"end\") {\n      this.setSelectionRange(newEnd, newEnd);\n    } else { // preserve\n      const delta = repl.length - (end - start);\n\n      if (selStart > end) {\n        selStart += delta;\n      } else if (selStart > start) {\n        selStart = start;\n      }\n\n      if (selEnd > end) {\n        selEnd += delta;\n      } else if (selEnd > start) {\n        selEnd = newEnd;\n      }\n\n      this.setSelectionRange(selStart, selEnd);\n    }\n  }\n\n  set maxLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"maxlength\", String(value));\n  }\n\n  get maxLength() {\n    if (!this.hasAttribute(\"maxlength\")) {\n      return 524288; // stole this from chrome\n    }\n    return parseInt(this.getAttribute(\"maxlength\"));\n  }\n\n  set minLength(value) {\n    if (value < 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"minlength\", String(value));\n  }\n\n  get minLength() {\n    if (!this.hasAttribute(\"minlength\")) {\n      return 0;\n    }\n    return parseInt(this.getAttribute(\"minlength\"));\n  }\n\n  get size() {\n    if (!this.hasAttribute(\"size\")) {\n      return 20;\n    }\n    return parseInt(this.getAttribute(\"size\"));\n  }\n\n  set size(value) {\n    if (value <= 0) {\n      throw new DOMException(\"The index is not in the allowed range.\", \"IndexSizeError\");\n    }\n    this.setAttribute(\"size\", String(value));\n  }\n\n  get src() {\n    return conversions.USVString(this.getAttribute(\"src\"));\n  }\n\n  set src(value) {\n    this.setAttribute(\"src\", value);\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#the-min-and-max-attributes\n  get _minimum() {\n    let min = this._defaultMinimum;\n    const attr = this.getAttribute(\"min\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        min = parsed;\n      }\n    }\n    return min;\n  }\n\n  get _maximum() {\n    let max = this._defaultMaximum;\n    const attr = this.getAttribute(\"max\");\n    const convertStringToNumber = this._convertStringToNumber;\n    if (attr !== null && convertStringToNumber !== undefined) {\n      const parsed = convertStringToNumber(attr);\n      if (!isNaN(parsed)) {\n        max = parsed;\n      }\n    }\n    return max;\n  }\n\n  get _defaultMinimum() {\n    if (this.type === \"range\") {\n      return 0;\n    }\n    return null;\n  }\n\n  get _defaultMaximum() {\n    if (this.type === \"range\") {\n      return 100;\n    }\n    return null;\n  }\n\n  get _parsedValue() {\n    const converter = this._convertStringToNumber;\n    if (converter !== undefined) {\n      return converter(this.value);\n    }\n    return this.value;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n  get _step() {\n    let step = this._defaultStep;\n    if (this.hasAttribute(\"step\") && !asciiCaseInsensitiveMatch(this.getAttribute(\"step\"), \"any\")) {\n      const parsedStep = parseFloatingPointNumber(this.getAttribute(\"step\"));\n      if (!isNaN(parsedStep) && parsedStep > 0) {\n        step = parsedStep;\n      }\n    }\n    return step;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-scale\n  get _stepScaleFactor() {\n    const dayInMilliseconds = 24 * 60 * 60 * 1000;\n    switch (this.type) {\n      case \"week\":\n        return 7 * dayInMilliseconds;\n      case \"date\":\n        return dayInMilliseconds;\n      case \"datetime-local\":\n      case \"datetime\":\n      case \"time\":\n        return 1000;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default\n  get _defaultStep() {\n    if (this.type === \"datetime-local\" || this.type === \"datetime\" || this.type === \"time\") {\n      return 60;\n    }\n    return 1;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-min-zero\n  get _stepBase() {\n    const parseAttribute = attributeName => parseFloatingPointNumber(this.getAttribute(attributeName));\n    if (this.hasAttribute(\"min\")) {\n      const min = parseAttribute(\"min\");\n      if (!isNaN(min)) {\n        return min;\n      }\n    }\n    if (this.hasAttribute(\"value\")) {\n      const value = parseAttribute(\"value\");\n      if (!isNaN(value)) {\n        return value;\n      }\n    }\n    return this._defaultStepBase;\n  }\n\n  // https://html.spec.whatwg.org/multipage/input.html#concept-input-step-default-base\n  get _defaultStepBase() {\n    if (this.type === \"week\") {\n      // The start of week 1970-W01\n      return 259200000;\n    }\n    return 0;\n  }\n\n  _attributeApplies(attribute) {\n    return applicableTypesForAttribute[attribute].has(this.type);\n  }\n\n  _barredFromConstraintValidationSpecialization() {\n    // https://html.spec.whatwg.org/multipage/input.html#hidden-state-(type=hidden)\n    // https://html.spec.whatwg.org/multipage/input.html#reset-button-state-(type=reset)\n    // https://html.spec.whatwg.org/multipage/input.html#button-state-(type=button)\n    const willNotValidateTypes = new Set([\"hidden\", \"reset\", \"button\"]);\n    // https://html.spec.whatwg.org/multipage/input.html#attr-input-readonly\n    const readOnly = this.hasAttribute(\"readonly\");\n\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled\n    return willNotValidateTypes.has(this.type) || readOnly;\n  }\n\n  get validity() {\n    if (!this._validity) {\n      this._validity = ValidityState.createImpl(this, {\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-missing\n        valueMissing: () => {\n          if (!this.hasAttribute(\"required\")) {\n            return false;\n          }\n          if (this.type === \"checkbox\") {\n            // https://html.spec.whatwg.org/multipage/input.html#checkbox-state-(type=checkbox)\n            // Constraint validation: If the element is required and its checkedness is\n            // false, then the element is suffering from being missing.\n            return !this.checked;\n          } else if (this.type === \"radio\") {\n            // https://html.spec.whatwg.org/multipage/input.html#radio-button-state-(type=radio)\n            // Constraint validation: If an element in the radio button group is required,\n            // and all of the input elements in the radio button group have a checkedness\n            // that is false, then the element is suffering from being missing.\n            return !this._isRadioGroupChecked();\n          }\n          return this.value === \"\";\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-long\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-maxlength\n        // jsdom has no way at the moment to emulate a user interaction, so tooLong/tooShort have\n        // to be set to false.\n        tooLong: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-being-too-short\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-minlength\n        tooShort: () => false,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-overflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-max\n        rangeOverflow: () => this._attributeApplies(\"max\") && this._maximum !== null &&\n          this._parsedValue > this._maximum,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-an-underflow\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-min\n        rangeUnderflow: () => this._attributeApplies(\"min\") && this._minimum !== null &&\n          this._parsedValue < this._minimum,\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-pattern-mismatch\n        patternMismatch: () => {\n          if (!this.hasAttribute(\"pattern\") || !this._attributeApplies(\"pattern\") || this.value === \"\") {\n            return false;\n          }\n          let regExp;\n          try {\n            regExp = new RegExp(this.getAttribute(\"pattern\"), \"u\");\n          } catch (e) {\n            return false;\n          }\n          if (this.type === \"email\" && this.hasAttribute(\"multiple\")) {\n            return splitOnCommas(this.value).every(value => regExp.test(value));\n          }\n          return !regExp.test(this.value);\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-step-mismatch\n        // https://html.spec.whatwg.org/multipage/input.html#attr-input-step\n        stepMismatch: () => {\n          // Constraint validation: When the element has an allowed value step, and the result of applying\n          // the algorithm to convert a string to a number to the string given by the element's value is a\n          // number, and that number subtracted from the step base is not an integral multiple of the\n          // allowed value step, the element is suffering from a step mismatch.\n          if (!this._attributeApplies(\"step\")) {\n            return false;\n          }\n          const step = parseFloatingPointNumber(this.getAttribute(\"step\"));\n          if (isNaN(step) || step <= 0) {\n            return false;\n          }\n\n          let number = this._parsedValue;\n          if (isNaN(number) || this.value === \"\") {\n            return false;\n          }\n          if (this._type === \"month\") {\n            number = parseMonthString(this.value).month - 1;\n          }\n          return number % (this._stepBase - (this._step * this._stepScaleFactor)) !== 0;\n        },\n\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-type-mismatch\n        typeMismatch: () => {\n          if (this.value === \"\") {\n            return false;\n          }\n          if (this.type === \"email\") {\n            // https://html.spec.whatwg.org/multipage/input.html#e-mail-state-(type=email)\n            // Constraint validation [multiple=false]: While the value of the element is neither the empty\n            // string nor a single valid e - mail address, the element is suffering from a type mismatch.\n\n            // Constraint validation [multiple=true]: While the value of the element is not a valid e-mail address list,\n            // the element is suffering from a type mismatch.\n            return !isValidEmailAddress(this.value, this.hasAttribute(\"multiple\"));\n          } else if (this.type === \"url\") {\n            // https://html.spec.whatwg.org/multipage/input.html#url-state-(type=url)\n            // Constraint validation: While the value of the element is neither the empty string\n            // nor a valid absolute URL, the element is suffering from a type mismatch.\n            return !isValidAbsoluteURL(this.value);\n          }\n          return false;\n        }\n      });\n    }\n    return this._validity;\n  }\n\n  [cloningSteps](copy, node) {\n    copy._value = node._value;\n    copy._checkedness = node._checkedness;\n    copy._dirtyValue = node._dirtyValue;\n    copy._dirtyCheckedness = node._dirtyCheckedness;\n  }\n}\n\nmixin(HTMLInputElementImpl.prototype, DefaultConstraintValidationImpl.prototype);\n\nmodule.exports = {\n  implementation: HTMLInputElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
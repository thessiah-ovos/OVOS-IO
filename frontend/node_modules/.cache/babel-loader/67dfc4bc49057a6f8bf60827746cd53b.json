{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _get = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/get\");\n\nvar _getPrototypeOf = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar Event = require(\"../generated/Event.js\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar HTMLDetailsElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLDetailsElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLDetailsElementImpl);\n\n  function HTMLDetailsElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLDetailsElementImpl);\n\n    _this = _super.call(this, args, privateData);\n    _this._taskQueue = null;\n    return _this;\n  }\n\n  _createClass(HTMLDetailsElementImpl, [{\n    key: \"_dispatchToggleEvent\",\n    value: function _dispatchToggleEvent() {\n      this._taskQueue = null;\n\n      this._dispatch(Event.createImpl([\"toggle\", {\n        bubbles: false,\n        cancelable: false\n      }], {\n        isTrusted: true\n      }));\n    }\n  }, {\n    key: \"_attrModified\",\n    value: function _attrModified(name, value, oldValue) {\n      _get(_getPrototypeOf(HTMLDetailsElementImpl.prototype), \"_attrModified\", this).call(this, name, value, oldValue);\n\n      if (name === \"open\" && this._taskQueue === null) {\n        // Check that the attribute is added or removed, not merely changed\n        if (value !== oldValue && value !== null && oldValue === null || value === null && oldValue !== null) {\n          this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n        }\n      }\n    }\n  }]);\n\n  return HTMLDetailsElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLDetailsElement-impl.js"],"names":["Event","require","HTMLElementImpl","implementation","HTMLDetailsElementImpl","args","privateData","_taskQueue","_dispatch","createImpl","bubbles","cancelable","isTrusted","name","value","oldValue","setTimeout","_dispatchToggleEvent","bind","module","exports"],"mappings":"AAAA;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,uBAAD,CAArB;;AAEA,IAAMC,eAAe,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BE,cAAtD;;IAEMC,sB;;;;;AACJ,kCAAYC,IAAZ,EAAkBC,WAAlB,EAA+B;AAAA;;AAAA;;AAC7B,8BAAMD,IAAN,EAAYC,WAAZ;AAEA,UAAKC,UAAL,GAAkB,IAAlB;AAH6B;AAI9B;;;;2CAEsB;AACrB,WAAKA,UAAL,GAAkB,IAAlB;;AAEA,WAAKC,SAAL,CAAeR,KAAK,CAACS,UAAN,CACb,CACE,QADF,EAEE;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,UAAU,EAAE;AAA9B,OAFF,CADa,EAKb;AAAEC,QAAAA,SAAS,EAAE;AAAb,OALa,CAAf;AAOD;;;kCAEaC,I,EAAMC,K,EAAOC,Q,EAAU;AACnC,gGAAoBF,IAApB,EAA0BC,KAA1B,EAAiCC,QAAjC;;AAEA,UAAIF,IAAI,KAAK,MAAT,IAAmB,KAAKN,UAAL,KAAoB,IAA3C,EAAiD;AAC/C;AACA,YAAKO,KAAK,KAAKC,QAAV,IAAsBD,KAAK,KAAK,IAAhC,IAAwCC,QAAQ,KAAK,IAAtD,IACCD,KAAK,KAAK,IAAV,IAAkBC,QAAQ,KAAK,IADpC,EAC2C;AACzC,eAAKR,UAAL,GAAkBS,UAAU,CAAC,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAAD,EAAuC,CAAvC,CAA5B;AACD;AACF;AACF;;;;EA7BkChB,e;;AAgCrCiB,MAAM,CAACC,OAAP,GAAiB;AACfjB,EAAAA,cAAc,EAAEC;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst Event = require(\"../generated/Event.js\");\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nclass HTMLDetailsElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n\n    this._taskQueue = null;\n  }\n\n  _dispatchToggleEvent() {\n    this._taskQueue = null;\n\n    this._dispatch(Event.createImpl(\n      [\n        \"toggle\",\n        { bubbles: false, cancelable: false }\n      ],\n      { isTrusted: true }\n    ));\n  }\n\n  _attrModified(name, value, oldValue) {\n    super._attrModified(name, value, oldValue);\n\n    if (name === \"open\" && this._taskQueue === null) {\n      // Check that the attribute is added or removed, not merely changed\n      if ((value !== oldValue && value !== null && oldValue === null) ||\n          (value === null && oldValue !== null)) {\n        this._taskQueue = setTimeout(this._dispatchToggleEvent.bind(this), 0);\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLDetailsElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
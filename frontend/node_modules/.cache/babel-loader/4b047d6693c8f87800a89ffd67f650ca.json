{"ast":null,"code":"import { BEAT_DETAILS_REQUEST, BEAT_DETAILS_SUCCESS, BEAT_DETAILS_FAIL, BEAT_SAVE_REQUEST, BEAT_SAVE_SUCCESS, BEAT_SAVE_FAIL, BEAT_DELETE_REQUEST, BEAT_DELETE_SUCCESS, BEAT_DELETE_FAIL } from '../constants/beatConstants';\nimport { BEAT_LIST_REQUEST, BEAT_LIST_SUCCESS, BEAT_LIST_FAIL } from '../constants/beatConstants';\nimport axios from 'axios';\nimport Axios from 'axios';\n\nconst listBeats = () => async dispatch => {\n  try {\n    dispatch({\n      type: BEAT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: BEAT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BEAT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveBeat = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BEAT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: BEAT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          Authorization: 'Bearer ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: BEAT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: BEAT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsBeat = beatId => async dispatch => {\n  try {\n    dispatch({\n      type: BEAT_DETAILS_REQUEST,\n      payload: beatId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + beatId);\n    dispatch({\n      type: BEAT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BEAT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteBeat = beatId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: BEAT_DELETE_REQUEST,\n      payload: beatId\n    });\n    const {\n      data\n    } = await axios.delete('/api/products/' + beatId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: BEAT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: BEAT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listBeats, detailsBeat, saveBeat, deleteBeat };","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/src/actions/beatActions.js"],"names":["BEAT_DETAILS_REQUEST","BEAT_DETAILS_SUCCESS","BEAT_DETAILS_FAIL","BEAT_SAVE_REQUEST","BEAT_SAVE_SUCCESS","BEAT_SAVE_FAIL","BEAT_DELETE_REQUEST","BEAT_DELETE_SUCCESS","BEAT_DELETE_FAIL","BEAT_LIST_REQUEST","BEAT_LIST_SUCCESS","BEAT_LIST_FAIL","axios","Axios","listBeats","dispatch","type","data","get","payload","error","message","saveBeat","product","getState","userSignin","userInfo","_id","post","headers","Authorization","token","put","detailsBeat","beatId","deleteBeat","delete","success"],"mappings":"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","sourcesContent":["import { BEAT_DETAILS_REQUEST, BEAT_DETAILS_SUCCESS, BEAT_DETAILS_FAIL, BEAT_SAVE_REQUEST, BEAT_SAVE_SUCCESS, BEAT_SAVE_FAIL, BEAT_DELETE_REQUEST, BEAT_DELETE_SUCCESS, BEAT_DELETE_FAIL } from '../constants/beatConstants';\r\nimport { BEAT_LIST_REQUEST, BEAT_LIST_SUCCESS, BEAT_LIST_FAIL } from '../constants/beatConstants';\r\nimport axios from 'axios';\r\nimport Axios from 'axios';\r\n\r\nconst listBeats = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: BEAT_LIST_REQUEST });\r\n        const { data } = await axios.get(\"/api/products\");\r\n        dispatch({ type: BEAT_LIST_SUCCESS, payload: data });\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: BEAT_LIST_FAIL, payload: error.message });\r\n\r\n    }\r\n\r\n};\r\n\r\nconst saveBeat = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: BEAT_SAVE_REQUEST, payload: product });\r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      if (!product._id) {\r\n        const { data } = await Axios.post('/api/products', product, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        });\r\n        dispatch({ type: BEAT_SAVE_SUCCESS, payload: data });\r\n      } else {\r\n        const { data } = await Axios.put(\r\n          '/api/products/' + product._id,\r\n          product,\r\n          {\r\n            headers: {\r\n              Authorization: 'Bearer ' + userInfo.token,\r\n            },\r\n          }\r\n        );\r\n        dispatch({ type: BEAT_SAVE_SUCCESS, payload: data });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: BEAT_SAVE_FAIL, payload: error.message });\r\n    }\r\n  };\r\n\r\nconst detailsBeat = (beatId) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: BEAT_DETAILS_REQUEST, payload: beatId });\r\n        const { data } = await axios.get(\"/api/products/\" + beatId);\r\n        dispatch({type: BEAT_DETAILS_SUCCESS, payload: data });\r\n    }\r\n    catch (error) {\r\n        dispatch({ type: BEAT_DETAILS_FAIL, payload: error.message });\r\n    }\r\n};\r\n\r\nconst deleteBeat = (beatId) => async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        userSignin: { userInfo },\r\n      } = getState();\r\n      dispatch({ type: BEAT_DELETE_REQUEST, payload: beatId });\r\n      const { data } = await axios.delete('/api/products/' + beatId, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: BEAT_DELETE_SUCCESS, payload: data, success: true });\r\n    } catch (error) {\r\n      dispatch({ type: BEAT_DELETE_FAIL, payload: error.message });\r\n    }\r\n  };\r\n  \r\n\r\nexport { \r\n    listBeats,\r\n    detailsBeat,\r\n    saveBeat,\r\n    deleteBeat\r\n}"]},"metadata":{},"sourceType":"module"}
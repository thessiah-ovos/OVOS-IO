{"ast":null,"code":"\"use strict\";\n\nvar conversions = require(\"webidl-conversions\");\n\nvar utils = require(\"./utils.js\");\n\nvar BlobPropertyBag = require(\"./BlobPropertyBag.js\");\n\nmodule.exports = {\n  convertInherit: function convertInherit(obj, ret) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n        _ref$context = _ref.context,\n        context = _ref$context === void 0 ? \"The provided value\" : _ref$context;\n\n    BlobPropertyBag.convertInherit(obj, ret, {\n      context: context\n    });\n    {\n      var key = \"lastModified\";\n      var value = obj === undefined || obj === null ? undefined : obj[key];\n\n      if (value !== undefined) {\n        value = conversions[\"long long\"](value, {\n          context: context + \" has member lastModified that\"\n        });\n        ret[key] = value;\n      }\n    }\n  },\n  convert: function convert(obj) {\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        _ref2$context = _ref2.context,\n        context = _ref2$context === void 0 ? \"The provided value\" : _ref2$context;\n\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(\"\".concat(context, \" is not an object.\"));\n    }\n\n    var ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, {\n      context: context\n    });\n    return ret;\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/generated/FilePropertyBag.js"],"names":["conversions","require","utils","BlobPropertyBag","module","exports","convertInherit","obj","ret","context","key","value","undefined","convert","TypeError","Object","create"],"mappings":"AAAA;;AAEA,IAAMA,WAAW,GAAGC,OAAO,CAAC,oBAAD,CAA3B;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAArB;;AAEA,IAAME,eAAe,GAAGF,OAAO,CAAC,sBAAD,CAA/B;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACfC,EAAAA,cADe,0BACAC,GADA,EACKC,GADL,EACmD;AAAA,mFAAJ,EAAI;AAAA,4BAAvCC,OAAuC;AAAA,QAAvCA,OAAuC,6BAA7B,oBAA6B;;AAChEN,IAAAA,eAAe,CAACG,cAAhB,CAA+BC,GAA/B,EAAoCC,GAApC,EAAyC;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAAzC;AAEA;AACE,UAAMC,GAAG,GAAG,cAAZ;AACA,UAAIC,KAAK,GAAGJ,GAAG,KAAKK,SAAR,IAAqBL,GAAG,KAAK,IAA7B,GAAoCK,SAApC,GAAgDL,GAAG,CAACG,GAAD,CAA/D;;AACA,UAAIC,KAAK,KAAKC,SAAd,EAAyB;AACvBD,QAAAA,KAAK,GAAGX,WAAW,CAAC,WAAD,CAAX,CAAyBW,KAAzB,EAAgC;AAAEF,UAAAA,OAAO,EAAEA,OAAO,GAAG;AAArB,SAAhC,CAAR;AAEAD,QAAAA,GAAG,CAACE,GAAD,CAAH,GAAWC,KAAX;AACD;AACF;AACF,GAbc;AAefE,EAAAA,OAfe,mBAePN,GAfO,EAeuC;AAAA,oFAAJ,EAAI;AAAA,8BAAvCE,OAAuC;AAAA,QAAvCA,OAAuC,8BAA7B,oBAA6B;;AACpD,QAAIF,GAAG,KAAKK,SAAR,IAAqB,OAAOL,GAAP,KAAe,QAApC,IAAgD,OAAOA,GAAP,KAAe,UAAnE,EAA+E;AAC7E,YAAM,IAAIO,SAAJ,WAAiBL,OAAjB,wBAAN;AACD;;AAED,QAAMD,GAAG,GAAGO,MAAM,CAACC,MAAP,CAAc,IAAd,CAAZ;AACAZ,IAAAA,MAAM,CAACC,OAAP,CAAeC,cAAf,CAA8BC,GAA9B,EAAmCC,GAAnC,EAAwC;AAAEC,MAAAA,OAAO,EAAPA;AAAF,KAAxC;AACA,WAAOD,GAAP;AACD;AAvBc,CAAjB","sourcesContent":["\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\n\nconst BlobPropertyBag = require(\"./BlobPropertyBag.js\");\n\nmodule.exports = {\n  convertInherit(obj, ret, { context = \"The provided value\" } = {}) {\n    BlobPropertyBag.convertInherit(obj, ret, { context });\n\n    {\n      const key = \"lastModified\";\n      let value = obj === undefined || obj === null ? undefined : obj[key];\n      if (value !== undefined) {\n        value = conversions[\"long long\"](value, { context: context + \" has member lastModified that\" });\n\n        ret[key] = value;\n      }\n    }\n  },\n\n  convert(obj, { context = \"The provided value\" } = {}) {\n    if (obj !== undefined && typeof obj !== \"object\" && typeof obj !== \"function\") {\n      throw new TypeError(`${context} is not an object.`);\n    }\n\n    const ret = Object.create(null);\n    module.exports.convertInherit(obj, ret, { context });\n    return ret;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
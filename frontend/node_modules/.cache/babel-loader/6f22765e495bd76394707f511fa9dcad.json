{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nvar _require = require(\"../helpers/internal-constants\"),\n    cloningSteps = _require.cloningSteps,\n    domSymbolTree = _require.domSymbolTree;\n\nvar _require2 = require(\"../node\"),\n    clone = _require2.clone;\n\nvar HTMLTemplateElementImpl = /*#__PURE__*/function (_HTMLElementImpl) {\n  _inherits(HTMLTemplateElementImpl, _HTMLElementImpl);\n\n  var _super = _createSuper(HTMLTemplateElementImpl);\n\n  function HTMLTemplateElementImpl(args, privateData) {\n    var _this;\n\n    _classCallCheck(this, HTMLTemplateElementImpl);\n\n    _this = _super.call(this, args, privateData);\n    _this._templateContents = _this._ownerDocument.createDocumentFragment();\n    return _this;\n  }\n\n  _createClass(HTMLTemplateElementImpl, [{\n    key: cloningSteps,\n    value: function value(copy, node, document, cloneChildren) {\n      if (!cloneChildren) {\n        return;\n      }\n\n      var _iterator = _createForOfIteratorHelper(domSymbolTree.childrenIterator(node._templateContents)),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          var childCopy = clone(child, copy._templateContents._ownerDocument, true);\n\n          copy._templateContents.appendChild(childCopy);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"content\",\n    get: function get() {\n      return this._templateContents;\n    }\n  }]);\n\n  return HTMLTemplateElementImpl;\n}(HTMLElementImpl);\n\nmodule.exports = {\n  implementation: HTMLTemplateElementImpl\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLTemplateElement-impl.js"],"names":["HTMLElementImpl","require","implementation","cloningSteps","domSymbolTree","clone","HTMLTemplateElementImpl","args","privateData","_templateContents","_ownerDocument","createDocumentFragment","copy","node","document","cloneChildren","childrenIterator","child","childCopy","appendChild","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAAP,CAA8BC,cAAtD;;eAEwCD,OAAO,CAAC,+BAAD,C;IAAvCE,Y,YAAAA,Y;IAAcC,a,YAAAA,a;;gBACJH,OAAO,CAAC,SAAD,C;IAAjBI,K,aAAAA,K;;IAEFC,uB;;;;;AACJ,mCAAYC,IAAZ,EAAkBC,WAAlB,EAA+B;AAAA;;AAAA;;AAC7B,8BAAMD,IAAN,EAAYC,WAAZ;AACA,UAAKC,iBAAL,GAAyB,MAAKC,cAAL,CAAoBC,sBAApB,EAAzB;AAF6B;AAG9B;;;SAMAR,Y;0BAAcS,I,EAAMC,I,EAAMC,Q,EAAUC,a,EAAe;AAClD,UAAI,CAACA,aAAL,EAAoB;AAClB;AACD;;AAHiD,iDAK9BX,aAAa,CAACY,gBAAd,CAA+BH,IAAI,CAACJ,iBAApC,CAL8B;AAAA;;AAAA;AAKlD,4DAA4E;AAAA,cAAjEQ,KAAiE;AAC1E,cAAMC,SAAS,GAAGb,KAAK,CAACY,KAAD,EAAQL,IAAI,CAACH,iBAAL,CAAuBC,cAA/B,EAA+C,IAA/C,CAAvB;;AACAE,UAAAA,IAAI,CAACH,iBAAL,CAAuBU,WAAvB,CAAmCD,SAAnC;AACD;AARiD;AAAA;AAAA;AAAA;AAAA;AASnD;;;wBAba;AACZ,aAAO,KAAKT,iBAAZ;AACD;;;;EARmCT,e;;AAsBtCoB,MAAM,CAACC,OAAP,GAAiB;AACfnB,EAAAA,cAAc,EAAEI;AADD,CAAjB","sourcesContent":["\"use strict\";\n\nconst HTMLElementImpl = require(\"./HTMLElement-impl\").implementation;\n\nconst { cloningSteps, domSymbolTree } = require(\"../helpers/internal-constants\");\nconst { clone } = require(\"../node\");\n\nclass HTMLTemplateElementImpl extends HTMLElementImpl {\n  constructor(args, privateData) {\n    super(args, privateData);\n    this._templateContents = this._ownerDocument.createDocumentFragment();\n  }\n\n  get content() {\n    return this._templateContents;\n  }\n\n  [cloningSteps](copy, node, document, cloneChildren) {\n    if (!cloneChildren) {\n      return;\n    }\n\n    for (const child of domSymbolTree.childrenIterator(node._templateContents)) {\n      const childCopy = clone(child, copy._templateContents._ownerDocument, true);\n      copy._templateContents.appendChild(childCopy);\n    }\n  }\n}\n\nmodule.exports = {\n  implementation: HTMLTemplateElementImpl\n};\n"]},"metadata":{},"sourceType":"script"}
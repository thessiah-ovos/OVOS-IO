{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _require = require(\"./internal-constants\"),\n    domSymbolTree = _require.domSymbolTree;\n\nvar _require2 = require(\"../node-type\"),\n    DOCUMENT_NODE = _require2.DOCUMENT_NODE;\n\nvar _require3 = require(\"./namespaces\"),\n    HTML_NS = _require3.HTML_NS; // All these operate on and return impls, not wrappers!\n\n\nexports.closest = function (e, localName) {\n  while (e) {\n    if (e.localName === localName && e.namespaceURI === HTML_NS) {\n      return e;\n    }\n\n    e = domSymbolTree.parent(e);\n  }\n\n  return null;\n};\n\nexports.isConnected = function (node) {\n  while (node) {\n    if (node.nodeType === DOCUMENT_NODE) {\n      return true;\n    }\n\n    node = domSymbolTree.parent(node);\n  }\n\n  return false;\n};\n\nexports.childrenByHTMLLocalName = function (parent, localName) {\n  return domSymbolTree.childrenToArray(parent, {\n    filter: function filter(node) {\n      return node._localName === localName && node._namespaceURI === HTML_NS;\n    }\n  });\n};\n\nexports.descendantsByHTMLLocalName = function (parent, localName) {\n  return domSymbolTree.treeToArray(parent, {\n    filter: function filter(node) {\n      return node._localName === localName && node._namespaceURI === HTML_NS && node !== parent;\n    }\n  });\n};\n\nexports.childrenByHTMLLocalNames = function (parent, localNamesSet) {\n  return domSymbolTree.childrenToArray(parent, {\n    filter: function filter(node) {\n      return localNamesSet.has(node._localName) && node._namespaceURI === HTML_NS;\n    }\n  });\n};\n\nexports.descendantsByHTMLLocalNames = function (parent, localNamesSet) {\n  return domSymbolTree.treeToArray(parent, {\n    filter: function filter(node) {\n      return localNamesSet.has(node._localName) && node._namespaceURI === HTML_NS && node !== parent;\n    }\n  });\n};\n\nexports.firstChildWithHTMLLocalName = function (parent, localName) {\n  var iterator = domSymbolTree.childrenIterator(parent);\n\n  var _iterator = _createForOfIteratorHelper(iterator),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n\n      if (child._localName === localName && child._namespaceURI === HTML_NS) {\n        return child;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return null;\n};\n\nexports.firstChildWithHTMLLocalNames = function (parent, localNamesSet) {\n  var iterator = domSymbolTree.childrenIterator(parent);\n\n  var _iterator2 = _createForOfIteratorHelper(iterator),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var child = _step2.value;\n\n      if (localNamesSet.has(child._localName) && child._namespaceURI === HTML_NS) {\n        return child;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n};\n\nexports.firstDescendantWithHTMLLocalName = function (parent, localName) {\n  var iterator = domSymbolTree.treeIterator(parent);\n\n  var _iterator3 = _createForOfIteratorHelper(iterator),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var descendant = _step3.value;\n\n      if (descendant._localName === localName && descendant._namespaceURI === HTML_NS) {\n        return descendant;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/helpers/traversal.js"],"names":["require","domSymbolTree","DOCUMENT_NODE","HTML_NS","exports","closest","e","localName","namespaceURI","parent","isConnected","node","nodeType","childrenByHTMLLocalName","childrenToArray","filter","_localName","_namespaceURI","descendantsByHTMLLocalName","treeToArray","childrenByHTMLLocalNames","localNamesSet","has","descendantsByHTMLLocalNames","firstChildWithHTMLLocalName","iterator","childrenIterator","child","firstChildWithHTMLLocalNames","firstDescendantWithHTMLLocalName","treeIterator","descendant"],"mappings":"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","sourcesContent":["\"use strict\";\nconst { domSymbolTree } = require(\"./internal-constants\");\nconst { DOCUMENT_NODE } = require(\"../node-type\");\nconst { HTML_NS } = require(\"./namespaces\");\n\n// All these operate on and return impls, not wrappers!\n\nexports.closest = (e, localName) => {\n  while (e) {\n    if (e.localName === localName && e.namespaceURI === HTML_NS) {\n      return e;\n    }\n    e = domSymbolTree.parent(e);\n  }\n\n  return null;\n};\n\nexports.isConnected = node => {\n  while (node) {\n    if (node.nodeType === DOCUMENT_NODE) {\n      return true;\n    }\n    node = domSymbolTree.parent(node);\n  }\n  return false;\n};\n\nexports.childrenByHTMLLocalName = (parent, localName) => {\n  return domSymbolTree.childrenToArray(parent, { filter(node) {\n    return node._localName === localName && node._namespaceURI === HTML_NS;\n  } });\n};\n\nexports.descendantsByHTMLLocalName = (parent, localName) => {\n  return domSymbolTree.treeToArray(parent, { filter(node) {\n    return node._localName === localName && node._namespaceURI === HTML_NS && node !== parent;\n  } });\n};\n\nexports.childrenByHTMLLocalNames = (parent, localNamesSet) => {\n  return domSymbolTree.childrenToArray(parent, { filter(node) {\n    return localNamesSet.has(node._localName) && node._namespaceURI === HTML_NS;\n  } });\n};\n\nexports.descendantsByHTMLLocalNames = (parent, localNamesSet) => {\n  return domSymbolTree.treeToArray(parent, { filter(node) {\n    return localNamesSet.has(node._localName) &&\n           node._namespaceURI === HTML_NS &&\n           node !== parent;\n  } });\n};\n\nexports.firstChildWithHTMLLocalName = (parent, localName) => {\n  const iterator = domSymbolTree.childrenIterator(parent);\n  for (const child of iterator) {\n    if (child._localName === localName && child._namespaceURI === HTML_NS) {\n      return child;\n    }\n  }\n  return null;\n};\n\nexports.firstChildWithHTMLLocalNames = (parent, localNamesSet) => {\n  const iterator = domSymbolTree.childrenIterator(parent);\n  for (const child of iterator) {\n    if (localNamesSet.has(child._localName) && child._namespaceURI === HTML_NS) {\n      return child;\n    }\n  }\n  return null;\n};\n\nexports.firstDescendantWithHTMLLocalName = (parent, localName) => {\n  const iterator = domSymbolTree.treeIterator(parent);\n  for (const descendant of iterator) {\n    if (descendant._localName === localName && descendant._namespaceURI === HTML_NS) {\n      return descendant;\n    }\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar idlUtils = require(\"../generated/utils.js\");\n\nvar _require = require(\"../helpers/namespaces\"),\n    HTML_NS = _require.HTML_NS;\n\nexports.implementation = /*#__PURE__*/function () {\n  function HTMLCollectionImpl(args, privateData) {\n    _classCallCheck(this, HTMLCollectionImpl);\n\n    this._list = [];\n    this._version = -1;\n    this._element = privateData.element;\n    this._query = privateData.query;\n\n    this._update();\n  }\n\n  _createClass(HTMLCollectionImpl, [{\n    key: \"item\",\n    value: function item(index) {\n      this._update();\n\n      return this._list[index] || null;\n    }\n  }, {\n    key: \"namedItem\",\n    value: function namedItem(key) {\n      if (key === \"\") {\n        return null;\n      }\n\n      this._update();\n\n      var _iterator = _createForOfIteratorHelper(this._list),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var element = _step.value;\n\n          if (element.getAttribute(\"id\") === key) {\n            return element;\n          }\n\n          if (element._namespaceURI === HTML_NS) {\n            var name = element.getAttribute(\"name\");\n\n            if (name === key) {\n              return element;\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return null;\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      if (this._version < this._element._version) {\n        var snapshot = this._query();\n\n        for (var i = 0; i < snapshot.length; i++) {\n          this._list[i] = snapshot[i];\n        }\n\n        this._list.length = snapshot.length;\n        this._version = this._element._version;\n      }\n    }\n  }, {\n    key: Symbol.iterator,\n    // Inherit some useful functions from Array.\n    value: function value() {\n      this._update();\n\n      return this._list[Symbol.iterator]();\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      this._update();\n\n      return this._list.entries();\n    }\n  }, {\n    key: \"filter\",\n    value: function filter() {\n      var _this$_list;\n\n      this._update();\n\n      return (_this$_list = this._list).filter.apply(_this$_list, arguments);\n    }\n  }, {\n    key: \"map\",\n    value: function map() {\n      var _this$_list2;\n\n      this._update();\n\n      return (_this$_list2 = this._list).map.apply(_this$_list2, arguments);\n    }\n  }, {\n    key: \"indexOf\",\n    value: function indexOf() {\n      var _this$_list3;\n\n      this._update();\n\n      return (_this$_list3 = this._list).indexOf.apply(_this$_list3, arguments);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      this._update();\n\n      return this._list.length;\n    }\n  }, {\n    key: idlUtils.supportedPropertyIndices,\n    get: function get() {\n      this._update();\n\n      return this._list.keys();\n    }\n  }, {\n    key: idlUtils.supportedPropertyNames,\n    get: function get() {\n      this._update();\n\n      var result = new Set();\n\n      var _iterator2 = _createForOfIteratorHelper(this._list),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var element = _step2.value;\n          var id = element.getAttribute(\"id\");\n\n          if (id) {\n            result.add(id);\n          }\n\n          if (element._namespaceURI === HTML_NS) {\n            var name = element.getAttribute(\"name\");\n\n            if (name) {\n              result.add(name);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      return result;\n    }\n  }]);\n\n  return HTMLCollectionImpl;\n}();","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/HTMLCollection-impl.js"],"names":["idlUtils","require","HTML_NS","exports","implementation","args","privateData","_list","_version","_element","element","_query","query","_update","index","key","getAttribute","_namespaceURI","name","snapshot","i","length","Symbol","iterator","entries","filter","map","indexOf","supportedPropertyIndices","keys","supportedPropertyNames","result","Set","id","add"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst idlUtils = require(\"../generated/utils.js\");\nconst { HTML_NS } = require(\"../helpers/namespaces\");\n\nexports.implementation = class HTMLCollectionImpl {\n  constructor(args, privateData) {\n    this._list = [];\n    this._version = -1;\n    this._element = privateData.element;\n    this._query = privateData.query;\n    this._update();\n  }\n  get length() {\n    this._update();\n    return this._list.length;\n  }\n  item(index) {\n    this._update();\n    return this._list[index] || null;\n  }\n  namedItem(key) {\n    if (key === \"\") {\n      return null;\n    }\n    this._update();\n    for (const element of this._list) {\n      if (element.getAttribute(\"id\") === key) {\n        return element;\n      }\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n        if (name === key) {\n          return element;\n        }\n      }\n    }\n    return null;\n  }\n  _update() {\n    if (this._version < this._element._version) {\n      const snapshot = this._query();\n      for (let i = 0; i < snapshot.length; i++) {\n        this._list[i] = snapshot[i];\n      }\n      this._list.length = snapshot.length;\n      this._version = this._element._version;\n    }\n  }\n  get [idlUtils.supportedPropertyIndices]() {\n    this._update();\n    return this._list.keys();\n  }\n  get [idlUtils.supportedPropertyNames]() {\n    this._update();\n    const result = new Set();\n    for (const element of this._list) {\n      const id = element.getAttribute(\"id\");\n      if (id) {\n        result.add(id);\n      }\n      if (element._namespaceURI === HTML_NS) {\n        const name = element.getAttribute(\"name\");\n        if (name) {\n          result.add(name);\n        }\n      }\n    }\n    return result;\n  }\n\n  // Inherit some useful functions from Array.\n  [Symbol.iterator]() {\n    this._update();\n    return this._list[Symbol.iterator]();\n  }\n  entries() {\n    this._update();\n    return this._list.entries();\n  }\n  filter(...args) {\n    this._update();\n    return this._list.filter(...args);\n  }\n  map(...args) {\n    this._update();\n    return this._list.map(...args);\n  }\n  indexOf(...args) {\n    this._update();\n    return this._list.indexOf(...args);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}
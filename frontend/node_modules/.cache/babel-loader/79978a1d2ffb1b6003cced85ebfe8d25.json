{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require(\"../helpers/strings\"),\n    splitOnASCIIWhitespace = _require.splitOnASCIIWhitespace,\n    splitOnCommas = _require.splitOnCommas;\n\nvar _require2 = require(\"../helpers/svg/basic-types\"),\n    reserializeCommaSeparatedTokens = _require2.reserializeCommaSeparatedTokens,\n    reserializeSpaceSeparatedTokens = _require2.reserializeSpaceSeparatedTokens;\n\nvar SVGStringList = require(\"../generated/SVGStringList\");\n\nvar SVGTestsImpl = /*#__PURE__*/function () {\n  function SVGTestsImpl() {\n    _classCallCheck(this, SVGTestsImpl);\n  }\n\n  _createClass(SVGTestsImpl, [{\n    key: \"requiredExtensions\",\n    get: function get() {\n      return SVGStringList.createImpl([], {\n        element: this,\n        attribute: \"requiredExtensions\"\n      });\n    }\n  }, {\n    key: \"systemLanguage\",\n    get: function get() {\n      return SVGStringList.createImpl([], {\n        element: this,\n        attribute: \"systemLanguage\"\n      });\n    }\n  }]);\n\n  return SVGTestsImpl;\n}();\n\nSVGTestsImpl.attributeRegistry = new Map([// https://svgwg.org/svg2-draft/struct.html#RequiredExtensionsAttribute\n[\"requiredExtensions\", {\n  getValue: splitOnASCIIWhitespace,\n  serialize: reserializeSpaceSeparatedTokens,\n  initialValue: undefined\n}], // https://svgwg.org/svg2-draft/struct.html#SystemLanguageAttribute\n[\"systemLanguage\", {\n  getValue: splitOnCommas,\n  serialize: reserializeCommaSeparatedTokens,\n  initialValue: undefined\n}]]);\nexports.implementation = SVGTestsImpl;","map":{"version":3,"sources":["/mnt/c/Users/riche/ThessianSound/ThessianSoundLLC/frontend/node_modules/jsdom/lib/jsdom/living/nodes/SVGTests-impl.js"],"names":["require","splitOnASCIIWhitespace","splitOnCommas","reserializeCommaSeparatedTokens","reserializeSpaceSeparatedTokens","SVGStringList","SVGTestsImpl","createImpl","element","attribute","attributeRegistry","Map","getValue","serialize","initialValue","undefined","exports","implementation"],"mappings":"AAAA;;;;;;eAEkDA,OAAO,CAAC,oBAAD,C;IAAjDC,sB,YAAAA,sB;IAAwBC,a,YAAAA,a;;gBAC6CF,OAAO,CAAC,4BAAD,C;IAA5EG,+B,aAAAA,+B;IAAiCC,+B,aAAAA,+B;;AACzC,IAAMC,aAAa,GAAGL,OAAO,CAAC,4BAAD,CAA7B;;IAEMM,Y;;;;;;;wBACqB;AACvB,aAAOD,aAAa,CAACE,UAAd,CAAyB,EAAzB,EAA6B;AAClCC,QAAAA,OAAO,EAAE,IADyB;AAElCC,QAAAA,SAAS,EAAE;AAFuB,OAA7B,CAAP;AAID;;;wBAEoB;AACnB,aAAOJ,aAAa,CAACE,UAAd,CAAyB,EAAzB,EAA6B;AAClCC,QAAAA,OAAO,EAAE,IADyB;AAElCC,QAAAA,SAAS,EAAE;AAFuB,OAA7B,CAAP;AAID;;;;;;AAGHH,YAAY,CAACI,iBAAb,GAAiC,IAAIC,GAAJ,CAAQ,CACvC;AACA,CACE,oBADF,EACwB;AACpBC,EAAAA,QAAQ,EAAEX,sBADU;AAEpBY,EAAAA,SAAS,EAAET,+BAFS;AAGpBU,EAAAA,YAAY,EAAEC;AAHM,CADxB,CAFuC,EASvC;AACA,CACE,gBADF,EACoB;AAChBH,EAAAA,QAAQ,EAAEV,aADM;AAEhBW,EAAAA,SAAS,EAAEV,+BAFK;AAGhBW,EAAAA,YAAY,EAAEC;AAHE,CADpB,CAVuC,CAAR,CAAjC;AAmBAC,OAAO,CAACC,cAAR,GAAyBX,YAAzB","sourcesContent":["\"use strict\";\n\nconst { splitOnASCIIWhitespace, splitOnCommas } = require(\"../helpers/strings\");\nconst { reserializeCommaSeparatedTokens, reserializeSpaceSeparatedTokens } = require(\"../helpers/svg/basic-types\");\nconst SVGStringList = require(\"../generated/SVGStringList\");\n\nclass SVGTestsImpl {\n  get requiredExtensions() {\n    return SVGStringList.createImpl([], {\n      element: this,\n      attribute: \"requiredExtensions\"\n    });\n  }\n\n  get systemLanguage() {\n    return SVGStringList.createImpl([], {\n      element: this,\n      attribute: \"systemLanguage\"\n    });\n  }\n}\n\nSVGTestsImpl.attributeRegistry = new Map([\n  // https://svgwg.org/svg2-draft/struct.html#RequiredExtensionsAttribute\n  [\n    \"requiredExtensions\", {\n      getValue: splitOnASCIIWhitespace,\n      serialize: reserializeSpaceSeparatedTokens,\n      initialValue: undefined\n    }\n  ],\n  // https://svgwg.org/svg2-draft/struct.html#SystemLanguageAttribute\n  [\n    \"systemLanguage\", {\n      getValue: splitOnCommas,\n      serialize: reserializeCommaSeparatedTokens,\n      initialValue: undefined\n    }\n  ]\n]);\n\nexports.implementation = SVGTestsImpl;\n"]},"metadata":{},"sourceType":"script"}